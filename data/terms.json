[
  {
    "term": "Artificial Intelligence",
    "category": "AI Fundamentals",
    "aliases": ["AI"],
    "definition": "Artificial Intelligence is the branch of computer science focused on building systems that can perform tasks typically requiring human intelligence, such as reasoning, learning, and decision-making.",
    "related": ["Artificial General Intelligence", "Machine Learning", "Narrow AI"],
    "tags": ["core-concept", "ai"],
    "references": [
      "https://en.wikipedia.org/wiki/Artificial_intelligence",
      "https://plato.stanford.edu/entries/artificial-intelligence/"
    ]
  },
  {
    "term": "Artificial General Intelligence",
    "category": "AI Fundamentals",
    "aliases": ["AGI", "Strong AI"],
    "definition": "AGI refers to a form of AI that has the ability to understand, learn, and apply knowledge across a wide range of tasks at human or superhuman levels.",
    "related": ["Narrow AI", "Artificial Intelligence", "Superintelligence"],
    "tags": ["agi", "theoretical-ai"],
    "references": [
      "https://en.wikipedia.org/wiki/Artificial_general_intelligence",
      "https://www.ibm.com/cloud/blog/artificial-general-intelligence"
    ]
  },
  {
    "term": "Narrow AI",
    "category": "AI Fundamentals",
    "aliases": ["Weak AI", "Applied AI"],
    "definition": "AI systems designed to perform specific tasks or solve particular problems, unlike AGI which aims for general intelligence across all domains.",
    "related": ["Artificial General Intelligence", "Artificial Intelligence", "Task-Specific AI"],
    "tags": ["narrow-ai", "specialized-ai"],
    "references": [
      "https://en.wikipedia.org/wiki/Weak_AI",
      "https://www.ibm.com/cloud/blog/narrow-ai-vs-general-ai"
    ]
  },
  {
    "term": "Machine Learning",
    "category": "AI Fundamentals",
    "aliases": ["ML"],
    "definition": "A subset of AI that enables systems to automatically learn and improve from experience without being explicitly programmed for every task.",
    "related": ["Artificial Intelligence", "Deep Learning", "Supervised Learning"],
    "tags": ["machine-learning", "core-concept"],
    "references": [
      "https://en.wikipedia.org/wiki/Machine_learning",
      "https://www.ibm.com/cloud/learn/machine-learning"
    ]
  },
  {
    "term": "Deep Learning",
    "category": "AI Fundamentals",
    "aliases": ["DL"],
    "definition": "A subset of machine learning that uses neural networks with multiple layers to model and understand complex patterns in data.",
    "related": ["Machine Learning", "Neural Networks", "Artificial Neural Networks"],
    "tags": ["deep-learning", "neural-networks"],
    "references": [
      "https://en.wikipedia.org/wiki/Deep_learning",
      "https://www.deeplearningbook.org/"
    ]
  },
  {
    "term": "Algorithm",
    "category": "AI Fundamentals",
    "aliases": ["Algo"],
    "definition": "A set of rules or instructions designed to solve a specific problem or perform a particular task, forming the foundation of all AI systems.",
    "related": ["Heuristic", "Optimization", "Machine Learning"],
    "tags": ["algorithm", "fundamental"],
    "references": [
      "https://en.wikipedia.org/wiki/Algorithm",
      "https://www.khanacademy.org/computing/computer-science/algorithms"
    ]
  },
  {
    "term": "Heuristic",
    "category": "AI Fundamentals",
    "aliases": ["Rule of Thumb"],
    "definition": "A problem-solving approach that uses practical methods or shortcuts to find solutions that are good enough, though not necessarily optimal.",
    "related": ["Algorithm", "Optimization", "Search Algorithms"],
    "tags": ["heuristic", "problem-solving"],
    "references": [
      "https://en.wikipedia.org/wiki/Heuristic",
      "https://plato.stanford.edu/entries/heuristics/"
    ]
  },
  {
    "term": "Turing Test",
    "category": "AI Fundamentals",
    "aliases": ["Imitation Game"],
    "definition": "A test proposed by Alan Turing to determine whether a machine can exhibit intelligent behavior equivalent to or indistinguishable from human intelligence.",
    "related": ["Alan Turing", "Intelligence", "Chatbot"],
    "tags": ["turing-test", "ai-evaluation"],
    "references": [
      "https://en.wikipedia.org/wiki/Turing_test",
      "https://plato.stanford.edu/entries/turing-test/"
    ]
  },
  {
    "term": "Expert System",
    "category": "AI Fundamentals",
    "aliases": ["Knowledge-Based System"],
    "definition": "An AI system that emulates the decision-making ability of a human expert by using a knowledge base of facts and rules about a specific domain.",
    "related": ["Knowledge Base", "Rule-Based System", "Inference Engine"],
    "tags": ["expert-system", "knowledge-based"],
    "references": [
      "https://en.wikipedia.org/wiki/Expert_system",
      "https://www.britannica.com/technology/expert-system"
    ]
  },
  {
    "term": "Knowledge Base",
    "category": "AI Fundamentals",
    "aliases": ["KB"],
    "definition": "A structured repository of information, facts, and rules that an AI system uses to make decisions and solve problems.",
    "related": ["Expert System", "Knowledge Graph", "Ontology"],
    "tags": ["knowledge-base", "data-structure"],
    "references": [
      "https://en.wikipedia.org/wiki/Knowledge_base",
      "https://www.ibm.com/cloud/learn/knowledge-base"
    ]
  },
  {
    "term": "Inference Engine",
    "category": "AI Fundamentals",
    "aliases": ["Reasoning Engine"],
    "definition": "The component of an AI system that applies logical rules to a knowledge base to derive new information or make decisions.",
    "related": ["Expert System", "Knowledge Base", "Logical Reasoning"],
    "tags": ["inference", "reasoning"],
    "references": [
      "https://en.wikipedia.org/wiki/Inference_engine",
      "https://www.britannica.com/technology/inference-engine"
    ]
  },
  {
    "term": "Symbolic AI",
    "category": "AI Fundamentals",
    "aliases": ["GOFAI", "Good Old-Fashioned AI"],
    "definition": "An approach to AI that uses symbols and logical rules to represent knowledge and reasoning, as opposed to learning from data.",
    "related": ["Expert System", "Rule-Based System", "Connectionist AI"],
    "tags": ["symbolic-ai", "classical-ai"],
    "references": [
      "https://en.wikipedia.org/wiki/Symbolic_artificial_intelligence",
      "https://plato.stanford.edu/entries/artificial-intelligence/#SymbVersConn"
    ]
  },
  {
    "term": "Connectionist AI",
    "category": "AI Fundamentals",
    "aliases": ["Neural AI", "Sub-symbolic AI"],
    "definition": "An approach to AI that models intelligence using networks of simple, interconnected processing units, inspired by biological neural networks.",
    "related": ["Neural Networks", "Symbolic AI", "Deep Learning"],
    "tags": ["connectionist", "neural-approach"],
    "references": [
      "https://en.wikipedia.org/wiki/Connectionism",
      "https://plato.stanford.edu/entries/connectionism/"
    ]
  },
  {
    "term": "Supervised Learning",
    "category": "Machine Learning Algorithms",
    "aliases": ["Supervised ML"],
    "definition": "A machine learning approach where models learn from labeled training data to make predictions on new, unseen data.",
    "related": ["Unsupervised Learning", "Classification", "Regression"],
    "tags": ["supervised-learning", "training-data"],
    "references": [
      "https://en.wikipedia.org/wiki/Supervised_learning",
      "https://www.ibm.com/cloud/learn/supervised-learning"
    ]
  },
  {
    "term": "Unsupervised Learning",
    "category": "Machine Learning Algorithms",
    "aliases": ["Unsupervised ML"],
    "definition": "A machine learning approach that finds hidden patterns in data without labeled examples, often used for clustering and dimensionality reduction.",
    "related": ["Supervised Learning", "Clustering", "Dimensionality Reduction"],
    "tags": ["unsupervised-learning", "pattern-discovery"],
    "references": [
      "https://en.wikipedia.org/wiki/Unsupervised_learning",
      "https://www.ibm.com/cloud/learn/unsupervised-learning"
    ]
  },
  {
    "term": "Semi-Supervised Learning",
    "category": "Machine Learning Algorithms",
    "aliases": ["Semi-Supervised ML"],
    "definition": "A machine learning approach that combines small amounts of labeled data with large amounts of unlabeled data during training.",
    "related": ["Supervised Learning", "Unsupervised Learning", "Active Learning"],
    "tags": ["semi-supervised", "hybrid-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Semi-supervised_learning",
      "https://www.ibm.com/cloud/learn/semi-supervised-learning"
    ]
  },
  {
    "term": "Reinforcement Learning",
    "category": "Machine Learning Algorithms",
    "aliases": ["RL"],
    "definition": "A machine learning paradigm where an agent learns to make decisions by taking actions in an environment and receiving rewards or penalties.",
    "related": ["Q-Learning", "Policy Gradient", "Markov Decision Process"],
    "tags": ["reinforcement-learning", "agent-based"],
    "references": [
      "https://en.wikipedia.org/wiki/Reinforcement_learning",
      "https://www.deepmind.com/learning-resources/introduction-to-reinforcement-learning"
    ]
  },
  {
    "term": "Classification",
    "category": "Machine Learning Algorithms",
    "aliases": ["Classification Task"],
    "definition": "A supervised learning task where the goal is to predict discrete categories or classes for input data.",
    "related": ["Regression", "Supervised Learning", "Decision Tree"],
    "tags": ["classification", "prediction"],
    "references": [
      "https://en.wikipedia.org/wiki/Statistical_classification",
      "https://scikit-learn.org/stable/supervised_learning.html#supervised-learning"
    ]
  },
  {
    "term": "Regression",
    "category": "Machine Learning Algorithms",
    "aliases": ["Regression Analysis"],
    "definition": "A supervised learning task where the goal is to predict continuous numerical values based on input features.",
    "related": ["Classification", "Linear Regression", "Polynomial Regression"],
    "tags": ["regression", "continuous-prediction"],
    "references": [
      "https://en.wikipedia.org/wiki/Regression_analysis",
      "https://scikit-learn.org/stable/supervised_learning.html#supervised-learning"
    ]
  },
  {
    "term": "Clustering",
    "category": "Machine Learning Algorithms",
    "aliases": ["Cluster Analysis"],
    "definition": "An unsupervised learning technique that groups similar data points together based on their features or characteristics.",
    "related": ["K-Means", "Hierarchical Clustering", "Unsupervised Learning"],
    "tags": ["clustering", "grouping"],
    "references": [
      "https://en.wikipedia.org/wiki/Cluster_analysis",
      "https://scikit-learn.org/stable/modules/clustering.html"
    ]
  },
  {
    "term": "Decision Tree",
    "category": "Machine Learning Algorithms",
    "aliases": ["Decision Tree Algorithm"],
    "definition": "A tree-like model that makes decisions by splitting data based on feature values, creating a hierarchical set of if-else conditions.",
    "related": ["Random Forest", "Classification", "Ensemble Methods"],
    "tags": ["decision-tree", "interpretable"],
    "references": [
      "https://en.wikipedia.org/wiki/Decision_tree",
      "https://scikit-learn.org/stable/modules/tree.html"
    ]
  },
  {
    "term": "Random Forest",
    "category": "Machine Learning Algorithms",
    "aliases": ["RF"],
    "definition": "An ensemble method that combines multiple decision trees to improve prediction accuracy and reduce overfitting.",
    "related": ["Decision Tree", "Ensemble Methods", "Bagging"],
    "tags": ["random-forest", "ensemble"],
    "references": [
      "https://en.wikipedia.org/wiki/Random_forest",
      "https://scikit-learn.org/stable/modules/ensemble.html#forest"
    ]
  },
  {
    "term": "Support Vector Machine",
    "category": "Machine Learning Algorithms",
    "aliases": ["SVM"],
    "definition": "A supervised learning algorithm that finds the optimal boundary (hyperplane) to separate different classes in the data.",
    "related": ["Kernel Method", "Classification", "Margin"],
    "tags": ["svm", "kernel-method"],
    "references": [
      "https://en.wikipedia.org/wiki/Support_vector_machine",
      "https://scikit-learn.org/stable/modules/svm.html"
    ]
  },
  {
    "term": "Linear Regression",
    "category": "Machine Learning Algorithms",
    "aliases": ["Linear Model"],
    "definition": "A statistical method that models the relationship between a dependent variable and independent variables using a linear equation.",
    "related": ["Regression", "Ordinary Least Squares", "Polynomial Regression"],
    "tags": ["linear-regression", "statistical-model"],
    "references": [
      "https://en.wikipedia.org/wiki/Linear_regression",
      "https://scikit-learn.org/stable/modules/linear_model.html"
    ]
  },
  {
    "term": "Logistic Regression",
    "category": "Machine Learning Algorithms",
    "aliases": ["Logit Model"],
    "definition": "A statistical method used for binary classification that uses the logistic function to model the probability of class membership.",
    "related": ["Classification", "Sigmoid Function", "Linear Regression"],
    "tags": ["logistic-regression", "binary-classification"],
    "references": [
      "https://en.wikipedia.org/wiki/Logistic_regression",
      "https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression"
    ]
  },
  {
    "term": "K-Means Clustering",
    "category": "Machine Learning Algorithms",
    "aliases": ["K-Means", "K-Means Algorithm"],
    "definition": "An unsupervised learning algorithm that partitions data into k clusters by minimizing the within-cluster sum of squares.",
    "related": ["Clustering", "Centroid", "Elbow Method"],
    "tags": ["k-means", "centroid-based"],
    "references": [
      "https://en.wikipedia.org/wiki/K-means_clustering",
      "https://scikit-learn.org/stable/modules/clustering.html#k-means"
    ]
  },
  {
    "term": "Naive Bayes",
    "category": "Machine Learning Algorithms",
    "aliases": ["Naive Bayes Classifier"],
    "definition": "A probabilistic classifier based on Bayes' theorem with the assumption of independence between features.",
    "related": ["Bayes Theorem", "Classification", "Probabilistic Model"],
    "tags": ["naive-bayes", "probabilistic"],
    "references": [
      "https://en.wikipedia.org/wiki/Naive_Bayes_classifier",
      "https://scikit-learn.org/stable/modules/naive_bayes.html"
    ]
  },
  {
    "term": "Neural Network",
    "category": "Machine Learning Algorithms",
    "aliases": ["Artificial Neural Network", "ANN"],
    "definition": "A computing system inspired by biological neural networks, consisting of interconnected nodes (neurons) that process information.",
    "related": ["Deep Learning", "Perceptron", "Backpropagation"],
    "tags": ["neural-network", "connectionist"],
    "references": [
      "https://en.wikipedia.org/wiki/Artificial_neural_network",
      "https://www.ibm.com/cloud/learn/neural-networks"
    ]
  },
  {
    "term": "Perceptron",
    "category": "Machine Learning Algorithms",
    "aliases": ["Single-Layer Perceptron"],
    "definition": "The simplest form of neural network, consisting of a single layer of weights that can learn to classify linearly separable patterns.",
    "related": ["Neural Network", "Linear Classifier", "Multilayer Perceptron"],
    "tags": ["perceptron", "linear-classifier"],
    "references": [
      "https://en.wikipedia.org/wiki/Perceptron",
      "https://scikit-learn.org/stable/modules/linear_model.html#perceptron"
    ]
  },
  {
    "term": "Ensemble Methods",
    "category": "Machine Learning Algorithms",
    "aliases": ["Ensemble Learning"],
    "definition": "Techniques that combine multiple learning algorithms to improve predictive performance compared to individual models.",
    "related": ["Random Forest", "Boosting", "Bagging"],
    "tags": ["ensemble", "model-combination"],
    "references": [
      "https://en.wikipedia.org/wiki/Ensemble_learning",
      "https://scikit-learn.org/stable/modules/ensemble.html"
    ]
  },
  {
    "term": "Bagging",
    "category": "Machine Learning Algorithms",
    "aliases": ["Bootstrap Aggregating"],
    "definition": "An ensemble method that trains multiple models on different subsets of the training data and averages their predictions.",
    "related": ["Ensemble Methods", "Bootstrap Sampling", "Random Forest"],
    "tags": ["bagging", "variance-reduction"],
    "references": [
      "https://en.wikipedia.org/wiki/Bootstrap_aggregating",
      "https://scikit-learn.org/stable/modules/ensemble.html#bagging"
    ]
  },
  {
    "term": "Boosting",
    "category": "Machine Learning Algorithms",
    "aliases": ["Adaptive Boosting"],
    "definition": "An ensemble method that sequentially trains weak learners, with each subsequent model focusing on the errors of previous models.",
    "related": ["AdaBoost", "Gradient Boosting", "Ensemble Methods"],
    "tags": ["boosting", "sequential-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Boosting_(machine_learning)",
      "https://scikit-learn.org/stable/modules/ensemble.html#boosting"
    ]
  },
  {
    "term": "Cross-Validation",
    "category": "Machine Learning Algorithms",
    "aliases": ["CV", "Cross Validation"],
    "definition": "A technique for assessing model performance by dividing data into multiple folds and training/testing on different combinations.",
    "related": ["Model Validation", "K-Fold", "Training Set"],
    "tags": ["cross-validation", "model-evaluation"],
    "references": [
      "https://en.wikipedia.org/wiki/Cross-validation_(statistics)",
      "https://scikit-learn.org/stable/modules/cross_validation.html"
    ]
  },
  {
    "term": "Feature Selection",
    "category": "Machine Learning Algorithms",
    "aliases": ["Variable Selection"],
    "definition": "The process of selecting a subset of relevant features from the original feature set to improve model performance and reduce complexity.",
    "related": ["Feature Engineering", "Dimensionality Reduction", "Curse of Dimensionality"],
    "tags": ["feature-selection", "preprocessing"],
    "references": [
      "https://en.wikipedia.org/wiki/Feature_selection",
      "https://scikit-learn.org/stable/modules/feature_selection.html"
    ]
  },
  {
    "term": "Principal Component Analysis",
    "category": "Machine Learning Algorithms",
    "aliases": ["PCA"],
    "definition": "A dimensionality reduction technique that transforms data to a lower-dimensional space while preserving the most important variance.",
    "related": ["Dimensionality Reduction", "Feature Selection", "Eigenvalues"],
    "tags": ["pca", "dimensionality-reduction"],
    "references": [
      "https://en.wikipedia.org/wiki/Principal_component_analysis",
      "https://scikit-learn.org/stable/modules/decomposition.html#pca"
    ]
  },
  {
    "term": "Gradient Descent",
    "category": "Machine Learning Algorithms",
    "aliases": ["GD"],
    "definition": "An optimization algorithm that iteratively adjusts model parameters in the direction of steepest descent to minimize a loss function.",
    "related": ["Optimization", "Backpropagation", "Stochastic Gradient Descent"],
    "tags": ["gradient-descent", "optimization"],
    "references": [
      "https://en.wikipedia.org/wiki/Gradient_descent",
      "https://www.deeplearningbook.org/contents/numerical.html"
    ]
  },
  {
    "term": "Stochastic Gradient Descent",
    "category": "Machine Learning Algorithms",
    "aliases": ["SGD"],
    "definition": "A variant of gradient descent that updates parameters using the gradient computed from a single training example or small batch.",
    "related": ["Gradient Descent", "Mini-Batch", "Optimization"],
    "tags": ["sgd", "stochastic-optimization"],
    "references": [
      "https://en.wikipedia.org/wiki/Stochastic_gradient_descent",
      "https://scikit-learn.org/stable/modules/sgd.html"
    ]
  },
  {
    "term": "Hyperparameter",
    "category": "Machine Learning Algorithms",
    "aliases": ["Hyperparameter Setting"],
    "definition": "Configuration settings that are set before training begins and control the learning process, such as learning rate or number of layers.",
    "related": ["Hyperparameter Tuning", "Model Parameters", "Grid Search"],
    "tags": ["hyperparameter", "model-configuration"],
    "references": [
      "https://en.wikipedia.org/wiki/Hyperparameter_(machine_learning)",
      "https://scikit-learn.org/stable/modules/grid_search.html"
    ]
  },
  {
    "term": "Overfitting",
    "category": "Machine Learning Algorithms",
    "aliases": ["Overtraining"],
    "definition": "A modeling error where a model learns the training data too well, including noise, resulting in poor performance on new data.",
    "related": ["Underfitting", "Bias-Variance Tradeoff", "Regularization"],
    "tags": ["overfitting", "generalization"],
    "references": [
      "https://en.wikipedia.org/wiki/Overfitting",
      "https://www.ibm.com/cloud/learn/overfitting"
    ]
  },
  {
    "term": "Underfitting",
    "category": "Machine Learning Algorithms",
    "aliases": ["High Bias"],
    "definition": "A modeling error where a model is too simple to capture the underlying patterns in the data, resulting in poor performance on both training and test data.",
    "related": ["Overfitting", "Bias-Variance Tradeoff", "Model Complexity"],
    "tags": ["underfitting", "bias"],
    "references": [
      "https://en.wikipedia.org/wiki/Overfitting",
      "https://www.ibm.com/cloud/learn/underfitting"
    ]
  },
  {
    "term": "Bias-Variance Tradeoff",
    "category": "Machine Learning Algorithms",
    "aliases": ["Bias-Variance Dilemma"],
    "definition": "The fundamental tension in machine learning between a model's ability to minimize bias (error from overly simplistic assumptions) and variance (error from sensitivity to small fluctuations).",
    "related": ["Overfitting", "Underfitting", "Model Complexity"],
    "tags": ["bias-variance", "model-selection"],
    "references": [
      "https://en.wikipedia.org/wiki/Bias%E2%80%93variance_tradeoff",
      "https://www.ibm.com/cloud/learn/bias-variance-tradeoff"
    ]
  },
  {
    "term": "Regularization",
    "category": "Machine Learning Algorithms",
    "aliases": ["Regularization Technique"],
    "definition": "Techniques used to prevent overfitting by adding a penalty term to the loss function that discourages overly complex models.",
    "related": ["L1 Regularization", "L2 Regularization", "Overfitting"],
    "tags": ["regularization", "overfitting-prevention"],
    "references": [
      "https://en.wikipedia.org/wiki/Regularization_(mathematics)",
      "https://www.ibm.com/cloud/learn/regularization"
    ]
  },
  {
    "term": "Convolutional Neural Network",
    "category": "Deep Learning Architectures",
    "aliases": ["CNN", "ConvNet"],
    "definition": "A deep learning architecture particularly effective for processing grid-like data such as images, using convolutional layers to detect local features through learnable filters.",
    "related": ["Neural Network", "Deep Learning", "Computer Vision", "Image Recognition"],
    "tags": ["cnn", "computer-vision", "neural-architecture"],
    "references": [
      "https://en.wikipedia.org/wiki/Convolutional_neural_network",
      "https://cs231n.github.io/convolutional-networks/"
    ]
  },
  {
    "term": "Recurrent Neural Network",
    "category": "Deep Learning Architectures",
    "aliases": ["RNN"],
    "definition": "A neural network architecture designed for sequential data, where connections between nodes form cycles allowing information to persist and be passed from one step to the next.",
    "related": ["Neural Network", "LSTM", "Natural Language Processing", "Sequential Data"],
    "tags": ["rnn", "sequential-data", "temporal-modeling"],
    "references": [
      "https://en.wikipedia.org/wiki/Recurrent_neural_network",
      "https://www.deeplearningbook.org/contents/rnn.html"
    ]
  },
  {
    "term": "Long Short-Term Memory",
    "category": "Deep Learning Architectures",
    "aliases": ["LSTM"],
    "definition": "A type of recurrent neural network architecture designed to overcome the vanishing gradient problem, capable of learning long-term dependencies in sequential data.",
    "related": ["Recurrent Neural Network", "Gated Recurrent Unit", "Vanishing Gradient", "Sequential Data"],
    "tags": ["lstm", "memory-network", "sequence-modeling"],
    "references": [
      "https://en.wikipedia.org/wiki/Long_short-term_memory",
      "https://colah.github.io/posts/2015-08-Understanding-LSTMs/"
    ]
  },
  {
    "term": "Transformer",
    "category": "Deep Learning Architectures",
    "aliases": ["Transformer Architecture", "Attention-based Model"],
    "definition": "A neural network architecture that relies entirely on attention mechanisms to draw global dependencies between input and output, revolutionizing natural language processing.",
    "related": ["Attention Mechanism", "BERT", "GPT", "Natural Language Processing"],
    "tags": ["transformer", "attention", "nlp-architecture"],
    "references": [
      "https://en.wikipedia.org/wiki/Transformer_(machine_learning_model)",
      "https://arxiv.org/abs/1706.03762"
    ]
  },
  {
    "term": "Attention Mechanism",
    "category": "Deep Learning Architectures", 
    "aliases": ["Attention", "Self-Attention"],
    "definition": "A technique that allows neural networks to focus on relevant parts of the input when producing each part of the output, improving performance on sequence-to-sequence tasks.",
    "related": ["Transformer", "Sequence-to-Sequence", "Neural Machine Translation", "BERT"],
    "tags": ["attention", "focus-mechanism", "sequence-modeling"],
    "references": [
      "https://en.wikipedia.org/wiki/Attention_(machine_learning)",
      "https://arxiv.org/abs/1409.0473"
    ]
  },
  {
    "term": "Autoencoder",
    "category": "Deep Learning Architectures",
    "aliases": ["AE"],
    "definition": "A neural network trained to copy its input to its output, typically used for dimensionality reduction, feature learning, or data compression through a bottleneck hidden layer.",
    "related": ["Dimensionality Reduction", "Feature Learning", "Variational Autoencoder", "Unsupervised Learning"],
    "tags": ["autoencoder", "representation-learning", "compression"],
    "references": [
      "https://en.wikipedia.org/wiki/Autoencoder",
      "https://www.deeplearningbook.org/contents/autoencoders.html"
    ]
  },
  {
    "term": "Generative Adversarial Network",
    "category": "Deep Learning Architectures",
    "aliases": ["GAN"],
    "definition": "A framework where two neural networks compete: a generator creates fake data while a discriminator tries to distinguish real from fake, improving both networks through adversarial training.",
    "related": ["Generator", "Discriminator", "Generative Model", "Adversarial Training"],
    "tags": ["gan", "generative-model", "adversarial-training"],
    "references": [
      "https://en.wikipedia.org/wiki/Generative_adversarial_network",
      "https://arxiv.org/abs/1406.2661"
    ]
  },
  {
    "term": "Feedforward Neural Network",
    "category": "Deep Learning Architectures",
    "aliases": ["Multilayer Perceptron", "MLP", "Dense Network"],
    "definition": "A neural network where information flows in one direction from input to output layers, without cycles or loops, forming the foundation of most deep learning architectures.",
    "related": ["Neural Network", "Perceptron", "Deep Learning", "Backpropagation"],
    "tags": ["feedforward", "mlp", "basic-architecture"],
    "references": [
      "https://en.wikipedia.org/wiki/Feedforward_neural_network",
      "https://www.deeplearningbook.org/contents/mlp.html"
    ]
  },
  {
    "term": "Residual Network",
    "category": "Deep Learning Architectures",
    "aliases": ["ResNet", "Skip Connection Network"],
    "definition": "A deep neural network architecture that uses skip connections to allow gradients to flow directly to earlier layers, enabling training of very deep networks.",
    "related": ["Skip Connection", "Deep Learning", "Vanishing Gradient", "Computer Vision"],
    "tags": ["resnet", "skip-connections", "deep-networks"],
    "references": [
      "https://en.wikipedia.org/wiki/Residual_neural_network",
      "https://arxiv.org/abs/1512.03385"
    ]
  },
  {
    "term": "Backpropagation",
    "category": "Deep Learning Architectures",
    "aliases": ["Backprop", "Error Backpropagation"],
    "definition": "The fundamental algorithm for training neural networks by computing gradients of the loss function with respect to network weights using the chain rule of calculus.",
    "related": ["Gradient Descent", "Neural Network", "Chain Rule", "Weight Update"],
    "tags": ["backpropagation", "training-algorithm", "optimization"],
    "references": [
      "https://en.wikipedia.org/wiki/Backpropagation",
      "https://www.deeplearningbook.org/contents/mlp.html"
    ]
  },
  {
    "term": "Batch Normalization",
    "category": "Deep Learning Architectures",
    "aliases": ["BatchNorm", "BN"],
    "definition": "A technique that normalizes inputs to each layer in a neural network, reducing internal covariate shift and allowing higher learning rates and more stable training.",
    "related": ["Normalization", "Training Stability", "Deep Learning", "Regularization"],
    "tags": ["batch-normalization", "training-technique", "stability"],
    "references": [
      "https://en.wikipedia.org/wiki/Batch_normalization",
      "https://arxiv.org/abs/1502.03167"
    ]
  },
  {
    "term": "Dropout",
    "category": "Deep Learning Architectures", 
    "aliases": ["Dropout Regularization"],
    "definition": "A regularization technique that randomly sets a fraction of input units to zero during training, preventing overfitting and improving generalization in neural networks.",
    "related": ["Regularization", "Overfitting", "Neural Network", "Generalization"],
    "tags": ["dropout", "regularization", "overfitting-prevention"],
    "references": [
      "https://en.wikipedia.org/wiki/Dropout_(neural_networks)",
      "https://arxiv.org/abs/1207.0580"
    ]
  },
  {
    "term": "Activation Function",
    "category": "Deep Learning Architectures",
    "aliases": ["Nonlinearity", "Transfer Function"],
    "definition": "A mathematical function applied to a neuron's output that introduces non-linearity into the network, enabling it to learn complex patterns beyond linear relationships.",
    "related": ["ReLU", "Sigmoid", "Tanh", "Neural Network"],
    "tags": ["activation-function", "nonlinearity", "neural-components"],
    "references": [
      "https://en.wikipedia.org/wiki/Activation_function",
      "https://www.deeplearningbook.org/contents/mlp.html"
    ]
  },
  {
    "term": "ReLU",
    "category": "Deep Learning Architectures",
    "aliases": ["Rectified Linear Unit", "Rectifier"],
    "definition": "An activation function that outputs the input directly if positive, otherwise zero, widely used in deep learning due to its simplicity and effectiveness at mitigating vanishing gradients.",
    "related": ["Activation Function", "Vanishing Gradient", "Deep Learning", "Leaky ReLU"],
    "tags": ["relu", "activation-function", "gradient-flow"],
    "references": [
      "https://en.wikipedia.org/wiki/Rectifier_(neural_networks)",
      "https://www.deeplearningbook.org/contents/mlp.html"
    ]
  },
  {
    "term": "Loss Function",
    "category": "Deep Learning Architectures",
    "aliases": ["Objective Function", "Cost Function", "Error Function"],
    "definition": "A function that measures the difference between predicted and actual values, providing a signal for the learning algorithm to minimize during training.",
    "related": ["Mean Squared Error", "Cross-Entropy", "Optimization", "Gradient Descent"],
    "tags": ["loss-function", "optimization", "training-objective"],
    "references": [
      "https://en.wikipedia.org/wiki/Loss_function",
      "https://www.deeplearningbook.org/contents/ml.html"
    ]
  },
  {
    "term": "Natural Language Processing",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["NLP"],
    "definition": "A branch of artificial intelligence that focuses on the interaction between computers and human language, enabling machines to understand, interpret, and generate human language in a valuable way.",
    "related": ["Text Mining", "Computational Linguistics", "Machine Translation", "Sentiment Analysis"],
    "tags": ["nlp", "language-processing", "text-analysis"],
    "references": [
      "https://en.wikipedia.org/wiki/Natural_language_processing",
      "https://www.ibm.com/cloud/learn/natural-language-processing"
    ]
  },
  {
    "term": "Tokenization", 
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Text Tokenization"],
    "definition": "The process of breaking down text into smaller units called tokens, typically words, subwords, or characters, which serve as the basic building blocks for further NLP analysis.",
    "related": ["Text Preprocessing", "Word Segmentation", "Subword Tokenization", "BERT"],
    "tags": ["tokenization", "text-preprocessing", "text-segmentation"],
    "references": [
      "https://en.wikipedia.org/wiki/Lexical_analysis#Tokenization",
      "https://huggingface.co/docs/transformers/tokenizer_summary"
    ]
  },
  {
    "term": "Named Entity Recognition",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["NER", "Entity Extraction"],
    "definition": "A subtask of information extraction that identifies and classifies named entities (such as persons, organizations, locations, dates) in unstructured text into predefined categories.",
    "related": ["Information Extraction", "Part-of-Speech Tagging", "Text Classification", "spaCy"],
    "tags": ["ner", "entity-extraction", "information-extraction"],
    "references": [
      "https://en.wikipedia.org/wiki/Named-entity_recognition",
      "https://spacy.io/usage/linguistic-features#named-entities"
    ]
  },
  {
    "term": "Part-of-Speech Tagging",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["POS Tagging", "Grammatical Tagging"],
    "definition": "The process of assigning grammatical categories (such as noun, verb, adjective) to each word in a text, providing syntactic information for further language analysis.",
    "related": ["Morphological Analysis", "Syntactic Parsing", "Named Entity Recognition", "Linguistic Features"],
    "tags": ["pos-tagging", "grammatical-analysis", "syntax"],
    "references": [
      "https://en.wikipedia.org/wiki/Part-of-speech_tagging",
      "https://www.nltk.org/book/ch05.html"
    ]
  },
  {
    "term": "Sentiment Analysis",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Opinion Mining", "Emotion AI"],
    "definition": "The use of NLP to systematically identify, extract, and quantify subjective information and emotions expressed in text, typically classifying sentiment as positive, negative, or neutral.",
    "related": ["Text Classification", "Opinion Mining", "Emotion Detection", "Social Media Analysis"],
    "tags": ["sentiment-analysis", "opinion-mining", "emotion-detection"],
    "references": [
      "https://en.wikipedia.org/wiki/Sentiment_analysis",
      "https://monkeylearn.com/sentiment-analysis/"
    ]
  },
  {
    "term": "Machine Translation",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["MT", "Automatic Translation"],
    "definition": "The task of automatically translating text or speech from one natural language to another using computational methods, often employing neural network approaches.",
    "related": ["Neural Machine Translation", "Sequence-to-Sequence", "Transformer", "BLEU Score"],
    "tags": ["machine-translation", "language-translation", "seq2seq"],
    "references": [
      "https://en.wikipedia.org/wiki/Machine_translation",
      "https://developers.google.com/translate"
    ]
  },
  {
    "term": "Word Embedding",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Word Vectors", "Distributed Representation"],
    "definition": "Dense vector representations of words in a continuous vector space where semantically similar words are mapped to nearby points, enabling mathematical operations on word meanings.",
    "related": ["Word2Vec", "GloVe", "FastText", "Semantic Similarity"],
    "tags": ["word-embeddings", "vector-representation", "semantic-modeling"],
    "references": [
      "https://en.wikipedia.org/wiki/Word_embedding",
      "https://www.tensorflow.org/tutorials/text/word_embeddings"
    ]
  },
  {
    "term": "BERT",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Bidirectional Encoder Representations from Transformers"],
    "definition": "A pre-trained transformer model that reads text bidirectionally and can be fine-tuned for various NLP tasks, achieving state-of-the-art performance on many language understanding benchmarks.",
    "related": ["Transformer", "Pre-trained Models", "Fine-tuning", "Language Model"],
    "tags": ["bert", "transformer-model", "pre-trained-model"],
    "references": [
      "https://en.wikipedia.org/wiki/BERT_(language_model)",
      "https://arxiv.org/abs/1810.04805"
    ]
  },
  {
    "term": "Language Model",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["LM", "Statistical Language Model"],
    "definition": "A probabilistic model that assigns probabilities to sequences of words, enabling prediction of the next word in a sequence and serving as the foundation for many NLP applications.",
    "related": ["N-gram Model", "Neural Language Model", "GPT", "Perplexity"],
    "tags": ["language-model", "probability-distribution", "text-generation"],
    "references": [
      "https://en.wikipedia.org/wiki/Language_model",
      "https://web.stanford.edu/~jurafsky/slp3/3.pdf"
    ]
  },
  {
    "term": "Text Classification",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Document Classification", "Text Categorization"],
    "definition": "The task of automatically assigning predefined categories or labels to text documents based on their content, using machine learning algorithms trained on labeled examples.",
    "related": ["Sentiment Analysis", "Spam Detection", "Topic Classification", "Feature Extraction"],
    "tags": ["text-classification", "document-categorization", "supervised-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Document_classification",
      "https://scikit-learn.org/stable/tutorial/text_analytics/working_with_text_data.html"
    ]
  },
  {
    "term": "Question Answering",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["QA", "Reading Comprehension"],
    "definition": "An NLP task where systems automatically answer questions posed in natural language, often by extracting or generating answers from a given text passage or knowledge base.",
    "related": ["Reading Comprehension", "Information Retrieval", "SQuAD", "BERT"],
    "tags": ["question-answering", "reading-comprehension", "information-extraction"],
    "references": [
      "https://en.wikipedia.org/wiki/Question_answering",
      "https://rajpurkar.github.io/SQuAD-explorer/"
    ]
  },
  {
    "term": "Text Summarization",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Automatic Summarization", "Document Summarization"],
    "definition": "The process of automatically creating a shorter version of a text document that retains the most important information and main ideas from the original content.",
    "related": ["Extractive Summarization", "Abstractive Summarization", "Information Extraction", "Sequence-to-Sequence"],
    "tags": ["text-summarization", "information-compression", "content-generation"],
    "references": [
      "https://en.wikipedia.org/wiki/Automatic_summarization",
      "https://huggingface.co/tasks/summarization"
    ]
  },
  {
    "term": "N-gram",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["N-gram Model"],
    "definition": "A contiguous sequence of n items (typically words or characters) from a text, used in statistical language modeling to predict the probability of word sequences.",
    "related": ["Language Model", "Bigram", "Trigram", "Markov Model"],
    "tags": ["n-gram", "sequence-modeling", "statistical-model"],
    "references": [
      "https://en.wikipedia.org/wiki/N-gram",
      "https://web.stanford.edu/~jurafsky/slp3/3.pdf"
    ]
  },
  {
    "term": "TF-IDF",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Term Frequency-Inverse Document Frequency"],
    "definition": "A numerical statistic that reflects how important a word is to a document within a collection of documents, combining term frequency with inverse document frequency to weight word importance.",
    "related": ["Information Retrieval", "Text Mining", "Feature Extraction", "Document Similarity"],
    "tags": ["tf-idf", "text-mining", "feature-weighting"],
    "references": [
      "https://en.wikipedia.org/wiki/Tf%E2%80%93idf",
      "https://scikit-learn.org/stable/modules/feature_extraction.html#tfidf-term-weighting"
    ]
  },
  {
    "term": "Coreference Resolution",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Anaphora Resolution"],
    "definition": "The task of determining which words or phrases in a text refer to the same real-world entity, such as resolving pronouns to their antecedents or linking different mentions of the same person.",
    "related": ["Discourse Analysis", "Entity Linking", "Pronoun Resolution", "Text Understanding"],
    "tags": ["coreference-resolution", "entity-linking", "discourse-analysis"],
    "references": [
      "https://en.wikipedia.org/wiki/Coreference",
      "https://spacy.io/universe/project/neuralcoref"
    ]
  },
  {
    "term": "Generative AI",
    "category": "Generative AI",
    "aliases": ["GenAI", "Generative Artificial Intelligence"],
    "definition": "AI systems that can create new content, including text, images, audio, video, or code, by learning patterns from training data and generating novel outputs that resemble the training examples.",
    "related": ["Large Language Model", "Diffusion Model", "Generative Adversarial Network", "Content Generation"],
    "tags": ["generative-ai", "content-creation", "ai-creativity"],
    "references": [
      "https://en.wikipedia.org/wiki/Generative_artificial_intelligence",
      "https://www.ibm.com/topics/generative-ai"
    ]
  },
  {
    "term": "Large Language Model",
    "category": "Generative AI",
    "aliases": ["LLM"],
    "definition": "A type of neural network model trained on vast amounts of text data that can understand and generate human-like text, capable of performing various language tasks through prompting.",
    "related": ["Transformer", "GPT", "BERT", "Foundation Model"],
    "tags": ["llm", "language-generation", "foundation-model"],
    "references": [
      "https://en.wikipedia.org/wiki/Large_language_model",
      "https://www.anthropic.com/news/introducing-claude"
    ]
  },
  {
    "term": "GPT",
    "category": "Generative AI",
    "aliases": ["Generative Pre-trained Transformer"],
    "definition": "A family of autoregressive language models based on the transformer architecture, trained to predict the next token in a sequence, enabling various text generation and completion tasks.",
    "related": ["Transformer", "Large Language Model", "Autoregressive Model", "OpenAI"],
    "tags": ["gpt", "autoregressive", "text-generation"],
    "references": [
      "https://en.wikipedia.org/wiki/GPT-4",
      "https://openai.com/research/gpt-4"
    ]
  },
  {
    "term": "Prompt Engineering",
    "category": "Generative AI",
    "aliases": ["Prompt Design", "Prompt Crafting"],
    "definition": "The practice of designing and optimizing input prompts to effectively communicate with and guide the behavior of large language models to produce desired outputs.",
    "related": ["Few-shot Learning", "In-context Learning", "Chain-of-Thought", "Large Language Model"],
    "tags": ["prompt-engineering", "llm-interaction", "instruction-design"],
    "references": [
      "https://en.wikipedia.org/wiki/Prompt_engineering",
      "https://www.promptingguide.ai/"
    ]
  },
  {
    "term": "Diffusion Model",
    "category": "Generative AI",
    "aliases": ["Denoising Diffusion Model"],
    "definition": "A class of generative models that learn to generate data by gradually denoising random noise, widely used for high-quality image and video generation.",
    "related": ["Stable Diffusion", "DALL-E", "Image Generation", "Denoising"],
    "tags": ["diffusion-model", "image-generation", "denoising"],
    "references": [
      "https://en.wikipedia.org/wiki/Diffusion_model",
      "https://arxiv.org/abs/2006.11239"
    ]
  },
  {
    "term": "Foundation Model",
    "category": "Generative AI",
    "aliases": ["Base Model", "Pre-trained Foundation Model"],
    "definition": "Large-scale models trained on broad data that can be adapted to a wide range of downstream tasks, serving as the foundation for many AI applications through fine-tuning or prompting.",
    "related": ["Large Language Model", "Transfer Learning", "Pre-training", "Fine-tuning"],
    "tags": ["foundation-model", "pre-training", "transfer-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Foundation_model",
      "https://crfm.stanford.edu/report.html"
    ]
  },
  {
    "term": "Fine-tuning",
    "category": "Generative AI",
    "aliases": ["Model Fine-tuning", "Transfer Learning"],
    "definition": "The process of adapting a pre-trained model to a specific task or domain by continuing training on task-specific data, often with lower learning rates.",
    "related": ["Transfer Learning", "Foundation Model", "Domain Adaptation", "PEFT"],
    "tags": ["fine-tuning", "model-adaptation", "transfer-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Fine-tuning_(deep_learning)",
      "https://huggingface.co/docs/transformers/training"
    ]
  },
  {
    "term": "Text-to-Image Generation",
    "category": "Generative AI",
    "aliases": ["T2I", "Image Synthesis from Text"],
    "definition": "AI systems that create images from textual descriptions, using models that understand both language and visual concepts to generate corresponding visual content.",
    "related": ["DALL-E", "Stable Diffusion", "Midjourney", "Multimodal AI"],
    "tags": ["text-to-image", "image-synthesis", "multimodal-generation"],
    "references": [
      "https://en.wikipedia.org/wiki/Text-to-image_model",
      "https://stability.ai/stable-diffusion"
    ]
  },
  {
    "term": "Autoregressive Model",
    "category": "Generative AI",
    "aliases": ["AR Model", "Sequential Generation"],
    "definition": "A type of generative model that produces output sequences one element at a time, where each new element depends on the previously generated elements.",
    "related": ["GPT", "Language Model", "Sequential Data", "Next Token Prediction"],
    "tags": ["autoregressive", "sequential-generation", "token-prediction"],
    "references": [
      "https://en.wikipedia.org/wiki/Autoregressive_model",
      "https://www.deeplearningbook.org/contents/rnn.html"
    ]
  },
  {
    "term": "Zero-shot Learning",
    "category": "Generative AI",
    "aliases": ["Zero-shot Prompting"],
    "definition": "The ability of a model to perform tasks or understand concepts without having been explicitly trained on those specific tasks, relying on general knowledge from pre-training.",
    "related": ["Few-shot Learning", "In-context Learning", "Prompt Engineering", "Generalization"],
    "tags": ["zero-shot", "generalization", "task-transfer"],
    "references": [
      "https://en.wikipedia.org/wiki/Zero-shot_learning",
      "https://arxiv.org/abs/2109.01652"
    ]
  },
  {
    "term": "Few-shot Learning",
    "category": "Generative AI",
    "aliases": ["Few-shot Prompting", "In-context Learning"],
    "definition": "The ability to learn and perform new tasks with only a few examples provided in the input prompt, without updating the model's parameters.",
    "related": ["Zero-shot Learning", "In-context Learning", "Prompt Engineering", "Meta-learning"],
    "tags": ["few-shot", "in-context-learning", "example-based-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Few-shot_learning",
      "https://arxiv.org/abs/2005.14165"
    ]
  },
  {
    "term": "Hallucination",
    "category": "Generative AI",
    "aliases": ["AI Hallucination", "Model Hallucination"],
    "definition": "When AI models generate content that appears plausible but is factually incorrect, fabricated, or not grounded in the training data, often occurring in language models and image generators.",
    "related": ["Factual Accuracy", "Model Reliability", "Grounding", "Content Verification"],
    "tags": ["hallucination", "model-reliability", "factual-accuracy"],
    "references": [
      "https://en.wikipedia.org/wiki/Hallucination_(artificial_intelligence)",
      "https://www.anthropic.com/news/reducing-hallucinations"
    ]
  },
  {
    "term": "Chain-of-Thought",
    "category": "Generative AI",
    "aliases": ["CoT", "Reasoning Chain"],
    "definition": "A prompting technique that encourages language models to break down complex problems into step-by-step reasoning processes, improving performance on tasks requiring logical thinking.",
    "related": ["Prompt Engineering", "Reasoning", "Problem Solving", "Step-by-step Thinking"],
    "tags": ["chain-of-thought", "reasoning", "problem-solving"],
    "references": [
      "https://arxiv.org/abs/2201.11903",
      "https://www.promptingguide.ai/techniques/cot"
    ]
  },
  {
    "term": "Multimodal AI",
    "category": "Generative AI",
    "aliases": ["Multimodal Models", "Cross-modal AI"],
    "definition": "AI systems that can process and generate content across multiple modalities such as text, images, audio, and video, enabling richer understanding and creation.",
    "related": ["CLIP", "GPT-4V", "Text-to-Image Generation", "Vision-Language Models"],
    "tags": ["multimodal", "cross-modal", "vision-language"],
    "references": [
      "https://en.wikipedia.org/wiki/Multimodal_learning",
      "https://openai.com/research/clip"
    ]
  },
  {
    "term": "Retrieval-Augmented Generation",
    "category": "Generative AI",
    "aliases": ["RAG"],
    "definition": "A technique that combines pre-trained language models with external knowledge retrieval, allowing models to access and incorporate relevant information during generation.",
    "related": ["Knowledge Retrieval", "Information Retrieval", "Grounding", "External Knowledge"],
    "tags": ["rag", "knowledge-retrieval", "external-knowledge"],
    "references": [
      "https://arxiv.org/abs/2005.11401",
      "https://huggingface.co/docs/transformers/model_doc/rag"
    ]
  },
  {
    "term": "AI Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Intelligent Agent", "Autonomous Agent"],
    "definition": "A system that perceives its environment through sensors and acts upon that environment through actuators to achieve specific goals, operating with varying degrees of autonomy.",
    "related": ["Multi-Agent System", "Autonomous System", "Goal-Oriented Behavior", "Environment Interaction"],
    "tags": ["ai-agent", "autonomous-system", "goal-oriented"],
    "references": [
      "https://en.wikipedia.org/wiki/Intelligent_agent",
      "https://www.ibm.com/topics/ai-agents"
    ]
  },
  {
    "term": "Multi-Agent System",
    "category": "AI Agents & Autonomy",
    "aliases": ["MAS", "Agent-Based System"],
    "definition": "A system composed of multiple interacting autonomous agents that work together to solve problems that are beyond the capabilities of individual agents.",
    "related": ["AI Agent", "Distributed AI", "Coordination", "Swarm Intelligence"],
    "tags": ["multi-agent", "distributed-ai", "agent-coordination"],
    "references": [
      "https://en.wikipedia.org/wiki/Multi-agent_system",
      "https://www.sciencedirect.com/topics/computer-science/multi-agent-system"
    ]
  },
  {
    "term": "Autonomous System",
    "category": "AI Agents & Autonomy",
    "aliases": ["Autonomous Agent", "Self-Governing System"],
    "definition": "A system capable of operating independently without direct human control, making decisions and taking actions based on its programming and environmental inputs.",
    "related": ["AI Agent", "Self-Driving Car", "Robotics", "Decision Making"],
    "tags": ["autonomous-system", "independence", "self-operation"],
    "references": [
      "https://en.wikipedia.org/wiki/Autonomous_system_(mathematics)",
      "https://www.rand.org/topics/autonomous-systems.html"
    ]
  },
  {
    "term": "Goal-Oriented Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Goal-Based Agent", "Purposive Agent"],
    "definition": "An agent that selects actions based on how well they help achieve specified goals, considering future consequences of current actions.",
    "related": ["Planning", "Search Algorithms", "Utility Function", "Decision Theory"],
    "tags": ["goal-oriented", "planning", "decision-making"],
    "references": [
      "https://en.wikipedia.org/wiki/Goal-oriented_agent",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Reactive Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Reflex Agent", "Stimulus-Response Agent"],
    "definition": "An agent that selects actions based solely on current percepts, without considering the history of percepts or planning for future consequences.",
    "related": ["Simple Reflex Agent", "Condition-Action Rules", "Behavioral AI", "Immediate Response"],
    "tags": ["reactive-agent", "reflex-behavior", "immediate-response"],
    "references": [
      "https://en.wikipedia.org/wiki/Reactive_agent",
      "https://www.javatpoint.com/agents-in-artificial-intelligence"
    ]
  },
  {
    "term": "Planning",
    "category": "AI Agents & Autonomy",
    "aliases": ["AI Planning", "Automated Planning"],
    "definition": "The process of finding a sequence of actions that will achieve a goal, involving reasoning about actions, their effects, and the conditions under which they can be executed.",
    "related": ["Search Algorithms", "STRIPS", "Goal-Oriented Agent", "Action Sequence"],
    "tags": ["planning", "action-sequence", "goal-achievement"],
    "references": [
      "https://en.wikipedia.org/wiki/Automated_planning_and_scheduling",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/planning.pdf"
    ]
  },
  {
    "term": "Behavior Tree",
    "category": "AI Agents & Autonomy",
    "aliases": ["BT", "Behavior Trees"],
    "definition": "A hierarchical structure used to organize and control agent behavior, providing a clear and modular way to design complex autonomous behaviors through composable nodes.",
    "related": ["Finite State Machine", "AI Agent", "Game AI", "Robotics"],
    "tags": ["behavior-tree", "behavior-control", "hierarchical-structure"],
    "references": [
      "https://en.wikipedia.org/wiki/Behavior_tree_(artificial_intelligence,_robotics_and_control)",
      "https://www.gamedeveloper.com/programming/behavior-trees-for-ai-how-they-work"
    ]
  },
  {
    "term": "Swarm Intelligence",
    "category": "AI Agents & Autonomy",
    "aliases": ["Collective Intelligence", "Swarm AI"],
    "definition": "The collective behavior of decentralized, self-organized systems, typically consisting of many simple agents following basic rules that lead to intelligent global behavior.",
    "related": ["Multi-Agent System", "Ant Colony Optimization", "Particle Swarm Optimization", "Emergence"],
    "tags": ["swarm-intelligence", "collective-behavior", "emergence"],
    "references": [
      "https://en.wikipedia.org/wiki/Swarm_intelligence",
      "https://www.nature.com/articles/s41467-020-16811-y"
    ]
  },
  {
    "term": "Coordination",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Coordination", "Multi-Agent Coordination"],
    "definition": "The process by which multiple agents organize their activities to achieve individual or collective goals, often involving communication, negotiation, and task allocation.",
    "related": ["Multi-Agent System", "Distributed AI", "Consensus", "Task Allocation"],
    "tags": ["coordination", "collaboration", "distributed-control"],
    "references": [
      "https://en.wikipedia.org/wiki/Multi-agent_coordination",
      "https://www.sciencedirect.com/topics/computer-science/agent-coordination"
    ]
  },
  {
    "term": "Action Selection",
    "category": "AI Agents & Autonomy",
    "aliases": ["Decision Making", "Action Choice"],
    "definition": "The process by which an agent chooses which action to perform next from a set of possible actions, based on its current state, goals, and environmental conditions.",
    "related": ["Decision Theory", "Utility Function", "Policy", "Behavioral Control"],
    "tags": ["action-selection", "decision-making", "behavior-control"],
    "references": [
      "https://en.wikipedia.org/wiki/Action_selection",
      "https://www.cs.cmu.edu/~./15-381/slides/action-selection.pdf"
    ]
  },
  {
    "term": "Environment Model",
    "category": "AI Agents & Autonomy",
    "aliases": ["World Model", "State Representation"],
    "definition": "An agent's internal representation of its environment, including objects, their properties, relationships, and dynamics, used for planning and decision-making.",
    "related": ["State Space", "World Representation", "Planning", "Perception"],
    "tags": ["environment-model", "world-representation", "state-space"],
    "references": [
      "https://en.wikipedia.org/wiki/World_model",
      "https://arxiv.org/abs/1803.10122"
    ]
  },
  {
    "term": "Utility Function",
    "category": "AI Agents & Autonomy",
    "aliases": ["Reward Function", "Objective Function"],
    "definition": "A mathematical function that assigns numerical values to different states or outcomes, representing an agent's preferences and guiding its decision-making process.",
    "related": ["Decision Theory", "Optimization", "Goal-Oriented Agent", "Reinforcement Learning"],
    "tags": ["utility-function", "preferences", "optimization"],
    "references": [
      "https://en.wikipedia.org/wiki/Utility",
      "https://plato.stanford.edu/entries/decision-theory/"
    ]
  },
  {
    "term": "Distributed AI",
    "category": "AI Agents & Autonomy",
    "aliases": ["DAI", "Distributed Artificial Intelligence"],
    "definition": "A subfield of AI that focuses on systems where intelligence and computation are distributed across multiple agents or components that work together to solve problems.",
    "related": ["Multi-Agent System", "Parallel Computing", "Coordination", "Decentralized Control"],
    "tags": ["distributed-ai", "parallel-intelligence", "decentralized"],
    "references": [
      "https://en.wikipedia.org/wiki/Distributed_artificial_intelligence",
      "https://www.sciencedirect.com/topics/computer-science/distributed-artificial-intelligence"
    ]
  },
  {
    "term": "Knowledge Graph",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["KG", "Semantic Network"],
    "definition": "A structured representation of knowledge that uses nodes to represent entities and edges to represent relationships, enabling machines to understand and reason about interconnected information.",
    "related": ["Ontology", "Semantic Web", "Entity Relationship", "Graph Database"],
    "tags": ["knowledge-graph", "semantic-network", "structured-knowledge"],
    "references": [
      "https://en.wikipedia.org/wiki/Knowledge_graph",
      "https://www.ibm.com/topics/knowledge-graph"
    ]
  },
  {
    "term": "Information Retrieval",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["IR"],
    "definition": "The activity of obtaining information system resources that are relevant to an information need from a collection of those resources, typically involving search and ranking algorithms.",
    "related": ["Search Engine", "Relevance Ranking", "TF-IDF", "Vector Search"],
    "tags": ["information-retrieval", "search", "relevance"],
    "references": [
      "https://en.wikipedia.org/wiki/Information_retrieval",
      "https://nlp.stanford.edu/IR-book/"
    ]
  },
  {
    "term": "Vector Database",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Vector Store", "Embedding Database"],
    "definition": "A specialized database designed to store, index, and query high-dimensional vector embeddings, enabling efficient similarity search and retrieval of semantically related content.",
    "related": ["Vector Search", "Embedding", "Similarity Search", "Semantic Search"],
    "tags": ["vector-database", "embedding-storage", "similarity-search"],
    "references": [
      "https://en.wikipedia.org/wiki/Vector_database",
      "https://www.pinecone.io/learn/vector-database/"
    ]
  },
  {
    "term": "Semantic Search",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Meaning-based Search"],
    "definition": "A search technique that seeks to improve search accuracy by understanding the intent and contextual meaning of search queries, rather than just matching keywords.",
    "related": ["Vector Search", "Natural Language Processing", "Embedding", "Contextual Understanding"],
    "tags": ["semantic-search", "meaning-based", "contextual-search"],
    "references": [
      "https://en.wikipedia.org/wiki/Semantic_search",
      "https://www.elastic.co/what-is/semantic-search"
    ]
  },
  {
    "term": "Ontology",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Domain Ontology", "Formal Ontology"],
    "definition": "A formal specification of concepts, relationships, and rules within a specific domain, providing a shared vocabulary and structure for organizing and reasoning about knowledge.",
    "related": ["Knowledge Graph", "Semantic Web", "Taxonomy", "Schema"],
    "tags": ["ontology", "formal-specification", "domain-knowledge"],
    "references": [
      "https://en.wikipedia.org/wiki/Ontology_(information_science)",
      "https://www.w3.org/standards/semanticweb/ontology"
    ]
  },
  {
    "term": "Entity Linking",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Entity Resolution", "Record Linkage"],
    "definition": "The process of identifying and connecting entity mentions in text to their corresponding entries in a knowledge base, enabling disambiguation and knowledge integration.",
    "related": ["Named Entity Recognition", "Knowledge Graph", "Disambiguation", "Entity Resolution"],
    "tags": ["entity-linking", "disambiguation", "knowledge-integration"],
    "references": [
      "https://en.wikipedia.org/wiki/Entity_linking",
      "https://arxiv.org/abs/1909.02288"
    ]
  },
  {
    "term": "Vector Search",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Similarity Search", "Nearest Neighbor Search"],
    "definition": "A search method that finds the most similar vectors to a query vector in a high-dimensional space, typically used to retrieve semantically similar content based on embeddings.",
    "related": ["Vector Database", "Embedding", "Cosine Similarity", "K-Nearest Neighbors"],
    "tags": ["vector-search", "similarity-search", "nearest-neighbor"],
    "references": [
      "https://en.wikipedia.org/wiki/Nearest_neighbor_search",
      "https://www.pinecone.io/learn/what-is-similarity-search/"
    ]
  },
  {
    "term": "Knowledge Base",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["KB", "Knowledge Repository"],
    "definition": "A structured collection of information, facts, and rules about a particular domain, organized to support reasoning, query answering, and knowledge-based applications.",
    "related": ["Expert System", "Knowledge Graph", "Database", "Information Storage"],
    "tags": ["knowledge-base", "information-repository", "structured-knowledge"],
    "references": [
      "https://en.wikipedia.org/wiki/Knowledge_base",
      "https://www.ibm.com/cloud/learn/knowledge-base"
    ]
  },
  {
    "term": "Retrieval-Augmented Generation",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["RAG"],
    "definition": "A technique that combines information retrieval with text generation, allowing language models to access external knowledge sources to provide more accurate and up-to-date responses.",
    "related": ["Information Retrieval", "Large Language Model", "External Knowledge", "Grounding"],
    "tags": ["rag", "retrieval-augmented", "knowledge-grounding"],
    "references": [
      "https://arxiv.org/abs/2005.11401",
      "https://huggingface.co/docs/transformers/model_doc/rag"
    ]
  },
  {
    "term": "Graph Neural Network",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["GNN"],
    "definition": "A type of neural network designed to work with graph-structured data, enabling learning and reasoning over relationships between entities in knowledge graphs and networks.",
    "related": ["Knowledge Graph", "Neural Network", "Graph Learning", "Node Embedding"],
    "tags": ["gnn", "graph-learning", "relational-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Graph_neural_network",
      "https://arxiv.org/abs/1901.00596"
    ]
  },
  {
    "term": "Triple",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["RDF Triple", "Subject-Predicate-Object"],
    "definition": "A basic unit of knowledge representation consisting of three components: subject, predicate, and object, forming the fundamental building block of knowledge graphs.",
    "related": ["Knowledge Graph", "RDF", "Semantic Web", "Entity Relationship"],
    "tags": ["triple", "knowledge-representation", "semantic-structure"],
    "references": [
      "https://en.wikipedia.org/wiki/Semantic_triple",
      "https://www.w3.org/TR/rdf11-concepts/"
    ]
  },
  {
    "term": "Embedding",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Vector Embedding", "Distributed Representation"],
    "definition": "Dense vector representations that capture semantic meaning and relationships, enabling mathematical operations and similarity comparisons in high-dimensional spaces.",
    "related": ["Word Embedding", "Vector Search", "Semantic Similarity", "Representation Learning"],
    "tags": ["embedding", "vector-representation", "semantic-encoding"],
    "references": [
      "https://en.wikipedia.org/wiki/Word_embedding",
      "https://www.tensorflow.org/guide/embedding"
    ]
  },
  {
    "term": "Elasticsearch",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Elastic Search"],
    "definition": "A distributed, open-source search and analytics engine built on Apache Lucene, commonly used for full-text search, log analytics, and real-time data analysis.",
    "related": ["Search Engine", "Information Retrieval", "Full-text Search", "Lucene"],
    "tags": ["elasticsearch", "search-engine", "text-search"],
    "references": [
      "https://en.wikipedia.org/wiki/Elasticsearch",
      "https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html"
    ]
  },
  {
    "term": "Data Pipeline",
    "category": "Data Engineering for AI",
    "aliases": ["ETL Pipeline", "Data Workflow"],
    "definition": "A series of data processing steps that extract, transform, and load data from various sources to destinations, ensuring data is clean, consistent, and ready for AI model training.",
    "related": ["ETL", "Data Processing", "Data Flow", "Data Integration"],
    "tags": ["data-pipeline", "etl", "data-workflow"],
    "references": [
      "https://en.wikipedia.org/wiki/Data_pipeline",
      "https://www.databricks.com/glossary/data-pipeline"
    ]
  },
  {
    "term": "Feature Engineering",
    "category": "Data Engineering for AI",
    "aliases": ["Feature Extraction", "Feature Creation"],
    "definition": "The process of selecting, modifying, or creating new features from raw data to improve machine learning model performance and interpretability.",
    "related": ["Feature Selection", "Data Preprocessing", "Domain Knowledge", "Model Performance"],
    "tags": ["feature-engineering", "feature-creation", "data-transformation"],
    "references": [
      "https://en.wikipedia.org/wiki/Feature_engineering",
      "https://www.kaggle.com/learn/feature-engineering"
    ]
  },
  {
    "term": "Data Labeling",
    "category": "Data Engineering for AI",
    "aliases": ["Data Annotation", "Ground Truth Creation"],
    "definition": "The process of adding meaningful and informative labels to raw data, creating training datasets for supervised machine learning algorithms.",
    "related": ["Supervised Learning", "Training Data", "Annotation", "Ground Truth"],
    "tags": ["data-labeling", "annotation", "ground-truth"],
    "references": [
      "https://en.wikipedia.org/wiki/Labeled_data",
      "https://www.labelbox.com/guides/data-labeling/"
    ]
  },
  {
    "term": "Data Quality",
    "category": "Data Engineering for AI",
    "aliases": ["Data Integrity", "Data Reliability"],
    "definition": "The degree to which data meets requirements for accuracy, completeness, consistency, and reliability, critical for successful AI model training and deployment.",
    "related": ["Data Validation", "Data Cleaning", "Data Governance", "Model Performance"],
    "tags": ["data-quality", "data-reliability", "data-validation"],
    "references": [
      "https://en.wikipedia.org/wiki/Data_quality",
      "https://www.ibm.com/topics/data-quality"
    ]
  },
  {
    "term": "Data Preprocessing",
    "category": "Data Engineering for AI",
    "aliases": ["Data Preparation", "Data Cleaning"],
    "definition": "The process of preparing raw data for machine learning by cleaning, transforming, and organizing it into a suitable format for model training.",
    "related": ["Data Cleaning", "Normalization", "Feature Engineering", "Missing Value Imputation"],
    "tags": ["data-preprocessing", "data-preparation", "data-cleaning"],
    "references": [
      "https://en.wikipedia.org/wiki/Data_preprocessing",
      "https://scikit-learn.org/stable/modules/preprocessing.html"
    ]
  },
  {
    "term": "Training Data",
    "category": "Data Engineering for AI",
    "aliases": ["Training Set", "Training Dataset"],
    "definition": "A dataset used to train machine learning models, containing input-output pairs that allow the model to learn patterns and relationships.",
    "related": ["Test Data", "Validation Data", "Supervised Learning", "Dataset Split"],
    "tags": ["training-data", "dataset", "model-training"],
    "references": [
      "https://en.wikipedia.org/wiki/Training,_validation,_and_test_sets",
      "https://www.ibm.com/topics/training-data"
    ]
  },
  {
    "term": "Data Augmentation",
    "category": "Data Engineering for AI",
    "aliases": ["Dataset Augmentation"],
    "definition": "Techniques to artificially increase the size and diversity of training datasets by creating modified versions of existing data through transformations like rotation, scaling, or noise addition.",
    "related": ["Training Data", "Generalization", "Overfitting", "Synthetic Data"],
    "tags": ["data-augmentation", "dataset-expansion", "generalization"],
    "references": [
      "https://en.wikipedia.org/wiki/Data_augmentation",
      "https://www.tensorflow.org/tutorials/images/data_augmentation"
    ]
  },
  {
    "term": "Feature Store",
    "category": "Data Engineering for AI",
    "aliases": ["ML Feature Store"],
    "definition": "A centralized repository for storing, managing, and serving machine learning features, enabling feature reuse, consistency, and collaboration across ML projects.",
    "related": ["Feature Engineering", "MLOps", "Data Management", "Feature Reuse"],
    "tags": ["feature-store", "feature-management", "mlops"],
    "references": [
      "https://en.wikipedia.org/wiki/Feature_store",
      "https://www.tecton.ai/blog/what-is-a-feature-store/"
    ]
  },
  {
    "term": "Data Versioning",
    "category": "Data Engineering for AI",
    "aliases": ["Dataset Versioning", "Data Version Control"],
    "definition": "The practice of tracking changes to datasets over time, enabling reproducibility, rollback capabilities, and collaboration in machine learning projects.",
    "related": ["Version Control", "Reproducibility", "Data Management", "MLOps"],
    "tags": ["data-versioning", "version-control", "reproducibility"],
    "references": [
      "https://en.wikipedia.org/wiki/Data_version_control",
      "https://dvc.org/doc/use-cases/versioning-data-and-models"
    ]
  },
  {
    "term": "Synthetic Data",
    "category": "Data Engineering for AI",
    "aliases": ["Artificial Data", "Generated Data"],
    "definition": "Artificially generated data that mimics the statistical properties of real data, used when real data is scarce, expensive, or sensitive for privacy reasons.",
    "related": ["Data Augmentation", "Privacy", "Generative Model", "Training Data"],
    "tags": ["synthetic-data", "artificial-data", "data-generation"],
    "references": [
      "https://en.wikipedia.org/wiki/Synthetic_data",
      "https://www.ibm.com/topics/synthetic-data"
    ]
  },
  {
    "term": "Data Lake",
    "category": "Data Engineering for AI",
    "aliases": ["Big Data Lake"],
    "definition": "A centralized repository that stores vast amounts of raw data in its native format, including structured, semi-structured, and unstructured data for analytics and ML.",
    "related": ["Big Data", "Data Warehouse", "Data Storage", "Analytics"],
    "tags": ["data-lake", "big-data", "data-storage"],
    "references": [
      "https://en.wikipedia.org/wiki/Data_lake",
      "https://aws.amazon.com/big-data/what-is-a-data-lake/"
    ]
  },
  {
    "term": "Real-time Data Processing",
    "category": "Data Engineering for AI",
    "aliases": ["Stream Processing", "Live Data Processing"],
    "definition": "The capability to process and analyze data as it arrives, enabling immediate insights and responses for time-sensitive AI applications.",
    "related": ["Stream Processing", "Event-driven Architecture", "Low Latency", "Apache Kafka"],
    "tags": ["real-time", "stream-processing", "low-latency"],
    "references": [
      "https://en.wikipedia.org/wiki/Stream_processing",
      "https://kafka.apache.org/documentation/"
    ]
  },
  {
    "term": "Data Drift",
    "category": "Data Engineering for AI",
    "aliases": ["Dataset Shift", "Covariate Shift"],
    "definition": "Changes in the statistical properties of input data over time, which can degrade machine learning model performance and require model retraining or adaptation.",
    "related": ["Model Drift", "Concept Drift", "Model Monitoring", "Distribution Shift"],
    "tags": ["data-drift", "distribution-shift", "model-degradation"],
    "references": [
      "https://en.wikipedia.org/wiki/Concept_drift",
      "https://www.evidentlyai.com/blog/machine-learning-monitoring-data-drift"
    ]
  },
  {
    "term": "MLOps",
    "category": "Model Deployment & Operations",
    "aliases": ["Machine Learning Operations", "ML Operations"],
    "definition": "A set of practices that combines machine learning, DevOps, and data engineering to deploy and maintain ML systems in production reliably and efficiently.",
    "related": ["DevOps", "CI/CD", "Model Deployment", "Production Systems"],
    "tags": ["mlops", "operations", "production-ml"],
    "references": [
      "https://en.wikipedia.org/wiki/MLOps",
      "https://www.databricks.com/glossary/mlops"
    ]
  },
  {
    "term": "Model Deployment",
    "category": "Model Deployment & Operations",
    "aliases": ["Model Serving", "Production Deployment"],
    "definition": "The process of integrating a trained machine learning model into a production environment where it can receive input data and return predictions for real-world use.",
    "related": ["Model Serving", "Production Environment", "API Endpoint", "Inference"],
    "tags": ["model-deployment", "production", "model-serving"],
    "references": [
      "https://en.wikipedia.org/wiki/Model_deployment",
      "https://www.seldon.io/what-is-model-deployment"
    ]
  },
  {
    "term": "Model Monitoring",
    "category": "Model Deployment & Operations",
    "aliases": ["ML Monitoring", "Performance Monitoring"],
    "definition": "The continuous tracking of machine learning model performance, behavior, and health in production to detect issues like drift, degradation, or failures.",
    "related": ["Model Drift", "Performance Metrics", "Alerting", "Model Maintenance"],
    "tags": ["model-monitoring", "performance-tracking", "production-health"],
    "references": [
      "https://en.wikipedia.org/wiki/Model_monitoring",
      "https://www.evidentlyai.com/blog/ml-monitoring-do-i-need-it"
    ]
  },
  {
    "term": "A/B Testing",
    "category": "Model Deployment & Operations",
    "aliases": ["Split Testing", "Experimental Testing"],
    "definition": "A method of comparing two versions of a model or system by randomly splitting users into groups and measuring performance differences to make data-driven decisions.",
    "related": ["Experimental Design", "Statistical Testing", "Model Evaluation", "Champion-Challenger"],
    "tags": ["ab-testing", "experimentation", "model-comparison"],
    "references": [
      "https://en.wikipedia.org/wiki/A/B_testing",
      "https://www.optimizely.com/optimization-glossary/ab-testing/"
    ]
  },
  {
    "term": "Model Versioning",
    "category": "Model Deployment & Operations",
    "aliases": ["Model Version Control"],
    "definition": "The practice of tracking and managing different versions of machine learning models, enabling rollback, comparison, and reproducibility in production systems.",
    "related": ["Version Control", "Model Registry", "Reproducibility", "Model Lifecycle"],
    "tags": ["model-versioning", "version-control", "model-management"],
    "references": [
      "https://en.wikipedia.org/wiki/Model_versioning",
      "https://mlflow.org/docs/latest/model-registry.html"
    ]
  },
  {
    "term": "CI/CD for ML",
    "category": "Model Deployment & Operations",
    "aliases": ["Continuous Integration/Continuous Deployment", "ML Pipeline Automation"],
    "definition": "The adaptation of continuous integration and deployment practices for machine learning, automating model training, testing, and deployment workflows.",
    "related": ["MLOps", "Pipeline Automation", "DevOps", "Automated Testing"],
    "tags": ["cicd", "automation", "ml-pipeline"],
    "references": [
      "https://en.wikipedia.org/wiki/CI/CD",
      "https://www.databricks.com/glossary/ci-cd"
    ]
  },
  {
    "term": "Model Registry",
    "category": "Model Deployment & Operations",
    "aliases": ["ML Model Registry"],
    "definition": "A centralized repository for storing, organizing, and managing machine learning models throughout their lifecycle, including metadata, versions, and deployment status.",
    "related": ["Model Versioning", "Model Management", "MLOps", "Model Lifecycle"],
    "tags": ["model-registry", "model-management", "centralized-storage"],
    "references": [
      "https://en.wikipedia.org/wiki/Model_registry",
      "https://mlflow.org/docs/latest/model-registry.html"
    ]
  },
  {
    "term": "Inference",
    "category": "Model Deployment & Operations",
    "aliases": ["Model Inference", "Prediction"],
    "definition": "The process of using a trained machine learning model to make predictions or generate outputs on new, unseen data in production environments.",
    "related": ["Model Serving", "Prediction", "Real-time Processing", "Batch Processing"],
    "tags": ["inference", "prediction", "model-serving"],
    "references": [
      "https://en.wikipedia.org/wiki/Statistical_inference",
      "https://www.nvidia.com/en-us/glossary/data-science/inference/"
    ]
  },
  {
    "term": "Canary Deployment",
    "category": "Model Deployment & Operations",
    "aliases": ["Canary Release"],
    "definition": "A deployment strategy that gradually rolls out a new model version to a small subset of users before full deployment, allowing early detection of issues.",
    "related": ["Blue-Green Deployment", "Progressive Deployment", "Risk Mitigation", "Model Rollout"],
    "tags": ["canary-deployment", "gradual-rollout", "risk-mitigation"],
    "references": [
      "https://en.wikipedia.org/wiki/Canary_deployment",
      "https://martinfowler.com/bliki/CanaryRelease.html"
    ]
  },
  {
    "term": "Model Drift",
    "category": "Model Deployment & Operations",
    "aliases": ["Concept Drift", "Model Degradation"],
    "definition": "The phenomenon where a model's performance degrades over time due to changes in the underlying data patterns or relationships it was trained to recognize.",
    "related": ["Data Drift", "Model Monitoring", "Model Retraining", "Performance Degradation"],
    "tags": ["model-drift", "performance-degradation", "concept-drift"],
    "references": [
      "https://en.wikipedia.org/wiki/Concept_drift",
      "https://www.evidentlyai.com/blog/machine-learning-monitoring-model-drift"
    ]
  },
  {
    "term": "Load Balancing",
    "category": "Model Deployment & Operations",
    "aliases": ["Traffic Distribution"],
    "definition": "The practice of distributing incoming requests across multiple model instances or servers to ensure optimal resource utilization and system reliability.",
    "related": ["Scalability", "High Availability", "Distributed Systems", "Performance Optimization"],
    "tags": ["load-balancing", "scalability", "distributed-systems"],
    "references": [
      "https://en.wikipedia.org/wiki/Load_balancing_(computing)",
      "https://aws.amazon.com/what-is/load-balancing/"
    ]
  },
  {
    "term": "Model Serving",
    "category": "Model Deployment & Operations",
    "aliases": ["ML Serving", "Prediction Serving"],
    "definition": "The infrastructure and processes that enable deployed machine learning models to receive requests and return predictions in production environments.",
    "related": ["Model Deployment", "API Gateway", "Inference", "Real-time Serving"],
    "tags": ["model-serving", "production-inference", "api-serving"],
    "references": [
      "https://en.wikipedia.org/wiki/Model_serving",
      "https://www.tensorflow.org/tfx/guide/serving"
    ]
  },
  {
    "term": "Shadow Deployment",
    "category": "Model Deployment & Operations",
    "aliases": ["Shadow Mode", "Parallel Deployment"],
    "definition": "A deployment strategy where a new model version runs alongside the production model, processing the same inputs but without affecting user-facing results, allowing safe performance comparison.",
    "related": ["Canary Deployment", "A/B Testing", "Model Validation", "Risk Mitigation"],
    "tags": ["shadow-deployment", "parallel-testing", "safe-deployment"],
    "references": [
      "https://en.wikipedia.org/wiki/Shadow_deployment",
      "https://martinfowler.com/bliki/ParallelChange.html"
    ]
  },
  {
    "term": "TensorFlow",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["TF"],
    "definition": "An open-source machine learning framework developed by Google that provides tools and libraries for building and deploying ML models across various platforms and devices.",
    "related": ["PyTorch", "Keras", "Deep Learning Framework", "Google"],
    "tags": ["tensorflow", "ml-framework", "deep-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/TensorFlow",
      "https://www.tensorflow.org/"
    ]
  },
  {
    "term": "PyTorch",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Torch"],
    "definition": "An open-source machine learning library developed by Meta that provides dynamic computation graphs and is widely used for research and production deep learning applications.",
    "related": ["TensorFlow", "Deep Learning Framework", "Dynamic Computation Graph", "Meta"],
    "tags": ["pytorch", "ml-framework", "dynamic-graphs"],
    "references": [
      "https://en.wikipedia.org/wiki/PyTorch",
      "https://pytorch.org/"
    ]
  },
  {
    "term": "Hugging Face",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["HF", "Transformers Library"],
    "definition": "A platform and library ecosystem that provides pre-trained models, datasets, and tools for natural language processing and machine learning, particularly focused on transformer models.",
    "related": ["Transformer", "Pre-trained Models", "Model Hub", "NLP"],
    "tags": ["huggingface", "model-hub", "transformers"],
    "references": [
      "https://en.wikipedia.org/wiki/Hugging_Face",
      "https://huggingface.co/"
    ]
  },
  {
    "term": "GPU Computing",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Graphics Processing Unit Computing", "CUDA Computing"],
    "definition": "The use of graphics processing units to accelerate computationally intensive tasks, particularly parallel operations common in machine learning and deep learning.",
    "related": ["CUDA", "Parallel Computing", "Deep Learning", "High Performance Computing"],
    "tags": ["gpu-computing", "parallel-processing", "acceleration"],
    "references": [
      "https://en.wikipedia.org/wiki/Graphics_processing_unit",
      "https://developer.nvidia.com/gpu-computing"
    ]
  },
  {
    "term": "Cloud AI Services",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["AI as a Service", "Machine Learning as a Service"],
    "definition": "Cloud-based platforms and APIs that provide pre-built AI capabilities, infrastructure, and tools for developing and deploying machine learning applications without managing underlying hardware.",
    "related": ["Amazon Web Services", "Google Cloud AI", "Microsoft Azure AI", "API Services"],
    "tags": ["cloud-ai", "ai-as-service", "cloud-platforms"],
    "references": [
      "https://en.wikipedia.org/wiki/AI_as_a_service",
      "https://aws.amazon.com/machine-learning/"
    ]
  },
  {
    "term": "Docker",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Containerization"],
    "definition": "A platform that uses containerization technology to package applications and their dependencies into portable containers, widely used for deploying ML models consistently across environments.",
    "related": ["Containerization", "Kubernetes", "Model Deployment", "DevOps"],
    "tags": ["docker", "containerization", "deployment"],
    "references": [
      "https://en.wikipedia.org/wiki/Docker_(software)",
      "https://docs.docker.com/"
    ]
  },
  {
    "term": "Kubernetes",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["K8s", "Container Orchestration"],
    "definition": "An open-source container orchestration platform that automates deployment, scaling, and management of containerized applications, commonly used for ML workloads.",
    "related": ["Docker", "Container Orchestration", "Microservices", "Scalability"],
    "tags": ["kubernetes", "orchestration", "scalability"],
    "references": [
      "https://en.wikipedia.org/wiki/Kubernetes",
      "https://kubernetes.io/"
    ]
  },
  {
    "term": "MLflow",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["ML Flow"],
    "definition": "An open-source platform for managing the complete machine learning lifecycle, including experimentation, reproducibility, deployment, and model registry.",
    "related": ["MLOps", "Model Registry", "Experiment Tracking", "Model Management"],
    "tags": ["mlflow", "ml-lifecycle", "experiment-tracking"],
    "references": [
      "https://en.wikipedia.org/wiki/MLflow",
      "https://mlflow.org/"
    ]
  },
  {
    "term": "Apache Spark",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Spark"],
    "definition": "An open-source unified analytics engine for large-scale data processing that provides built-in modules for machine learning, graph processing, and stream processing.",
    "related": ["Big Data", "Distributed Computing", "MLlib", "Data Processing"],
    "tags": ["apache-spark", "big-data", "distributed-computing"],
    "references": [
      "https://en.wikipedia.org/wiki/Apache_Spark",
      "https://spark.apache.org/"
    ]
  },
  {
    "term": "API Gateway",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Application Programming Interface Gateway"],
    "definition": "A server that acts as an intermediary between clients and backend services, managing API requests, authentication, rate limiting, and routing for ML model endpoints.",
    "related": ["REST API", "Model Serving", "Microservices", "Load Balancing"],
    "tags": ["api-gateway", "api-management", "microservices"],
    "references": [
      "https://en.wikipedia.org/wiki/API_gateway",
      "https://aws.amazon.com/api-gateway/"
    ]
  },
  {
    "term": "Jupyter Notebook",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Jupyter", "IPython Notebook"],
    "definition": "An open-source web application that allows creation and sharing of documents containing live code, equations, visualizations, and narrative text, widely used for data science and ML experimentation.",
    "related": ["Data Science", "Interactive Computing", "Python", "Experimentation"],
    "tags": ["jupyter", "interactive-computing", "data-science"],
    "references": [
      "https://en.wikipedia.org/wiki/Project_Jupyter",
      "https://jupyter.org/"
    ]
  },
  {
    "term": "Edge Computing",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Edge AI", "Edge Inference"],
    "definition": "A distributed computing paradigm that brings computation and data storage closer to data sources, enabling real-time AI inference with reduced latency and bandwidth usage.",
    "related": ["IoT", "Real-time Processing", "Distributed Computing", "Low Latency"],
    "tags": ["edge-computing", "distributed-ai", "real-time"],
    "references": [
      "https://en.wikipedia.org/wiki/Edge_computing",
      "https://www.nvidia.com/en-us/glossary/data-science/edge-ai/"
    ]
  },
  {
    "term": "Model Zoo",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Pre-trained Model Repository"],
    "definition": "A collection of pre-trained machine learning models that can be downloaded and used for various tasks, often including model weights, architectures, and documentation.",
    "related": ["Pre-trained Models", "Transfer Learning", "Model Repository", "Hugging Face"],
    "tags": ["model-zoo", "pre-trained-models", "model-repository"],
    "references": [
      "https://en.wikipedia.org/wiki/Model_zoo",
      "https://modelzoo.co/"
    ]
  },
  {
    "term": "Algorithmic Bias",
    "category": "Ethics & Governance",
    "aliases": ["AI Bias", "Machine Learning Bias"],
    "definition": "Systematic and unfair discrimination that occurs when AI algorithms produce biased results due to biased training data, flawed assumptions, or inadequate model design.",
    "related": ["Fairness", "Discrimination", "Bias Mitigation", "Responsible AI"],
    "tags": ["algorithmic-bias", "fairness", "discrimination"],
    "references": [
      "https://en.wikipedia.org/wiki/Algorithmic_bias",
      "https://www.brookings.edu/research/algorithmic-bias-detection-and-mitigation/"
    ]
  },
  {
    "term": "Explainable AI",
    "category": "Ethics & Governance",
    "aliases": ["XAI", "Interpretable AI"],
    "definition": "AI systems designed to provide clear, understandable explanations for their decisions and predictions, enabling humans to comprehend and trust AI reasoning processes.",
    "related": ["Model Interpretability", "Transparency", "Trust", "Accountability"],
    "tags": ["explainable-ai", "interpretability", "transparency"],
    "references": [
      "https://en.wikipedia.org/wiki/Explainable_artificial_intelligence",
      "https://www.ibm.com/topics/explainable-ai"
    ]
  },
  {
    "term": "Responsible AI",
    "category": "Ethics & Governance",
    "aliases": ["Ethical AI", "AI Ethics"],
    "definition": "The practice of developing and deploying AI systems in ways that are ethical, fair, transparent, and accountable, considering their impact on society and individuals.",
    "related": ["AI Ethics", "Fairness", "Transparency", "Accountability"],
    "tags": ["responsible-ai", "ai-ethics", "ethical-development"],
    "references": [
      "https://en.wikipedia.org/wiki/AI_ethics",
      "https://www.microsoft.com/en-us/ai/responsible-ai"
    ]
  },
  {
    "term": "Fairness",
    "category": "Ethics & Governance",
    "aliases": ["AI Fairness", "Algorithmic Fairness"],
    "definition": "The principle that AI systems should treat all individuals and groups equitably, without discrimination based on protected characteristics or unjust bias.",
    "related": ["Algorithmic Bias", "Discrimination", "Equity", "Justice"],
    "tags": ["fairness", "equity", "non-discrimination"],
    "references": [
      "https://en.wikipedia.org/wiki/Fairness_(machine_learning)",
      "https://www.google.com/about/main/ai-principles/"
    ]
  },
  {
    "term": "Privacy-Preserving ML",
    "category": "Ethics & Governance",
    "aliases": ["Privacy-Preserving Machine Learning"],
    "definition": "Techniques and methods that enable machine learning while protecting the privacy of individual data subjects, including differential privacy and federated learning.",
    "related": ["Differential Privacy", "Federated Learning", "Data Privacy", "GDPR"],
    "tags": ["privacy-preserving", "data-protection", "privacy"],
    "references": [
      "https://en.wikipedia.org/wiki/Privacy-preserving_machine_learning",
      "https://www.microsoft.com/en-us/research/project/privacy-preserving-machine-learning/"
    ]
  },
  {
    "term": "Differential Privacy",
    "category": "Ethics & Governance",
    "aliases": ["DP"],
    "definition": "A mathematical framework for quantifying and limiting privacy loss when analyzing datasets, ensuring individual privacy while enabling useful statistical analysis.",
    "related": ["Privacy-Preserving ML", "Data Privacy", "Statistical Privacy", "Noise Addition"],
    "tags": ["differential-privacy", "privacy-protection", "statistical-privacy"],
    "references": [
      "https://en.wikipedia.org/wiki/Differential_privacy",
      "https://desfontain.es/privacy/differential-privacy-awesomeness.html"
    ]
  },
  {
    "term": "AI Governance",
    "category": "Ethics & Governance",
    "aliases": ["Artificial Intelligence Governance"],
    "definition": "The frameworks, policies, and processes that guide the development, deployment, and use of AI systems to ensure they align with societal values and legal requirements.",
    "related": ["AI Policy", "Regulation", "Compliance", "Risk Management"],
    "tags": ["ai-governance", "policy", "regulation"],
    "references": [
      "https://en.wikipedia.org/wiki/AI_governance",
      "https://www.oecd.org/digital/artificial-intelligence/"
    ]
  },
  {
    "term": "Model Auditing",
    "category": "Ethics & Governance",
    "aliases": ["AI Auditing", "Algorithm Auditing"],
    "definition": "The systematic examination and evaluation of AI models to assess their performance, fairness, compliance, and potential risks or biases.",
    "related": ["Bias Detection", "Compliance", "Risk Assessment", "Model Validation"],
    "tags": ["model-auditing", "compliance", "bias-detection"],
    "references": [
      "https://en.wikipedia.org/wiki/Algorithm_audit",
      "https://www.brookings.edu/research/auditing-algorithms-the-existing-landscape-obstacles-and-recommendations/"
    ]
  },
  {
    "term": "Consent Management",
    "category": "Ethics & Governance",
    "aliases": ["Data Consent", "Privacy Consent"],
    "definition": "Systems and processes for obtaining, managing, and respecting user consent for data collection and AI processing, ensuring compliance with privacy regulations.",
    "related": ["GDPR", "Privacy Rights", "Data Protection", "User Control"],
    "tags": ["consent-management", "privacy-rights", "data-protection"],
    "references": [
      "https://en.wikipedia.org/wiki/Informed_consent",
      "https://gdpr.eu/what-is-gdpr/"
    ]
  },
  {
    "term": "Right to Explanation",
    "category": "Ethics & Governance",
    "aliases": ["Algorithmic Transparency"],
    "definition": "The principle that individuals have the right to understand and receive explanations for automated decisions that significantly affect them, especially in high-stakes applications.",
    "related": ["Explainable AI", "GDPR", "Transparency", "Accountability"],
    "tags": ["right-to-explanation", "transparency", "user-rights"],
    "references": [
      "https://en.wikipedia.org/wiki/Right_to_explanation",
      "https://arxiv.org/abs/1606.08813"
    ]
  },
  {
    "term": "AI Safety",
    "category": "Ethics & Governance",
    "aliases": ["Artificial Intelligence Safety"],
    "definition": "The field focused on ensuring AI systems behave safely and beneficially, avoiding harmful or unintended consequences as AI capabilities become more advanced.",
    "related": ["AI Alignment", "Risk Mitigation", "Safe AI", "AI Control"],
    "tags": ["ai-safety", "risk-mitigation", "safe-ai"],
    "references": [
      "https://en.wikipedia.org/wiki/AI_safety",
      "https://www.safe.ai/"
    ]
  },
  {
    "term": "Bias Mitigation",
    "category": "Ethics & Governance",
    "aliases": ["Debiasing", "Bias Reduction"],
    "definition": "Techniques and strategies used to identify, measure, and reduce unfair bias in AI systems, including pre-processing, in-processing, and post-processing approaches.",
    "related": ["Algorithmic Bias", "Fairness", "Bias Detection", "Fair ML"],
    "tags": ["bias-mitigation", "debiasing", "fair-ml"],
    "references": [
      "https://en.wikipedia.org/wiki/Fairness_(machine_learning)#Bias_mitigation",
      "https://www.ibm.com/topics/bias-in-ai"
    ]
  },
  {
    "term": "Accountability",
    "category": "Ethics & Governance",
    "aliases": ["AI Accountability"],
    "definition": "The principle that individuals and organizations developing or deploying AI systems should be responsible and answerable for their systems' decisions and impacts.",
    "related": ["Responsibility", "Transparency", "Governance", "Liability"],
    "tags": ["accountability", "responsibility", "liability"],
    "references": [
      "https://en.wikipedia.org/wiki/Accountability",
      "https://www.partnershiponai.org/about/#mission"
    ]
  },
  {
    "term": "Computer Vision",
    "category": "Applied AI Domains",
    "aliases": ["CV", "Machine Vision"],
    "definition": "A field of AI that enables computers to interpret and understand visual information from the world, including tasks like image recognition, object detection, and scene understanding.",
    "related": ["Image Recognition", "Object Detection", "Image Classification", "CNN"],
    "tags": ["computer-vision", "image-processing", "visual-ai"],
    "references": [
      "https://en.wikipedia.org/wiki/Computer_vision",
      "https://www.ibm.com/topics/computer-vision"
    ]
  },
  {
    "term": "Financial AI",
    "category": "Applied AI Domains",
    "aliases": ["FinTech AI", "AI in Finance"],
    "definition": "The application of artificial intelligence in financial services including algorithmic trading, risk assessment, credit scoring, and regulatory compliance.",
    "related": ["Fraud Detection", "Algorithmic Trading", "Credit Scoring", "Risk Management"],
    "tags": ["financial-ai", "fintech", "algorithmic-trading"],
    "references": [
      "https://en.wikipedia.org/wiki/Artificial_intelligence_in_finance",
      "https://www.jpmorgan.com/technology/artificial-intelligence"
    ]
  },
  {
    "term": "Robotics",
    "category": "Applied AI Domains",
    "aliases": ["AI Robotics", "Intelligent Robotics"],
    "definition": "The field that combines AI with mechanical engineering to create robots capable of perceiving their environment, making decisions, and performing physical tasks autonomously.",
    "related": ["Autonomous Systems", "Computer Vision", "Sensor Fusion", "Motion Planning"],
    "tags": ["robotics", "autonomous-robots", "physical-ai"],
    "references": [
      "https://en.wikipedia.org/wiki/Robotics",
      "https://www.robotics.org/content-detail.cfm/Industrial-Robotics-Industry-Insights/What-is-Robotics/content_id/4538"
    ]
  },
  {
    "term": "Agricultural AI",
    "category": "Applied AI Domains",
    "aliases": ["AgTech", "Precision Agriculture"],
    "definition": "The application of AI technologies in agriculture to optimize crop yields, monitor plant health, automate farming processes, and improve resource efficiency.",
    "related": ["Computer Vision", "IoT Sensors", "Crop Monitoring", "Precision Farming"],
    "tags": ["agricultural-ai", "agtech", "precision-agriculture"],
    "references": [
      "https://en.wikipedia.org/wiki/Digital_agriculture",
      "https://www.fao.org/3/ca4887en/ca4887en.pdf"
    ]
  },
  {
    "term": "Cybersecurity AI",
    "category": "Applied AI Domains",
    "aliases": ["AI Security", "Intelligent Security"],
    "definition": "The use of artificial intelligence to detect, prevent, and respond to cyber threats through pattern recognition, anomaly detection, and automated security response.",
    "related": ["Threat Detection", "Anomaly Detection", "Intrusion Detection", "Security Analytics"],
    "tags": ["cybersecurity-ai", "threat-detection", "security-analytics"],
    "references": [
      "https://en.wikipedia.org/wiki/AI_for_cybersecurity",
      "https://www.ibm.com/topics/ai-cybersecurity"
    ]
  },
  {
    "term": "Legal AI",
    "category": "Applied AI Domains",
    "aliases": ["LegalTech", "AI in Law"],
    "definition": "The application of AI in legal practice including document review, legal research, contract analysis, and case prediction to improve efficiency and accuracy.",
    "related": ["Document Analysis", "Natural Language Processing", "Contract Review", "Legal Analytics"],
    "tags": ["legal-ai", "legaltech", "document-analysis"],
    "references": [
      "https://en.wikipedia.org/wiki/Legal_technology",
      "https://www.americanbar.org/groups/law_practice/publications/techreport/2019/ai/"
    ]
  },
  {
    "term": "Climate AI",
    "category": "Applied AI Domains",
    "aliases": ["Environmental AI", "Climate Tech"],
    "definition": "The application of AI to address climate change challenges including weather prediction, renewable energy optimization, and environmental monitoring.",
    "related": ["Weather Forecasting", "Environmental Monitoring", "Energy Optimization", "Sustainability"],
    "tags": ["climate-ai", "environmental-ai", "sustainability"],
    "references": [
      "https://en.wikipedia.org/wiki/Climate_informatics",
      "https://www.climatechange.ai/"
    ]
  },
  {
    "term": "Healthcare AI",
    "category": "Applied AI Domains",
    "aliases": ["Medical AI", "AI in Healthcare"],
    "definition": "The application of artificial intelligence technologies in healthcare to improve patient outcomes, assist diagnosis, personalize treatment, and optimize healthcare operations.",
    "related": ["Medical Imaging", "Drug Discovery", "Clinical Decision Support", "Telemedicine"],
    "tags": ["healthcare-ai", "medical-ai", "clinical-applications"],
    "references": [
      "https://en.wikipedia.org/wiki/Artificial_intelligence_in_healthcare",
      "https://www.who.int/publications/i/item/9789240029200"
    ]
  },
  {
    "term": "Autonomous Vehicles",
    "category": "Applied AI Domains",
    "aliases": ["Self-Driving Cars", "Driverless Cars", "AV"],
    "definition": "Vehicles equipped with AI systems that can navigate and operate without human intervention, using sensors, computer vision, and decision-making algorithms.",
    "related": ["Computer Vision", "Sensor Fusion", "Path Planning", "LIDAR"],
    "tags": ["autonomous-vehicles", "self-driving", "transportation"],
    "references": [
      "https://en.wikipedia.org/wiki/Self-driving_car",
      "https://www.nhtsa.gov/technology-innovation/automated-vehicles"
    ]
  },
  {
    "term": "Recommender System",
    "category": "Applied AI Domains",
    "aliases": ["Recommendation Engine", "Recommendation System"],
    "definition": "AI systems that suggest relevant items, content, or services to users based on their preferences, behavior, and similarities with other users or items.",
    "related": ["Collaborative Filtering", "Content-Based Filtering", "Personalization", "Matrix Factorization"],
    "tags": ["recommender-system", "personalization", "user-modeling"],
    "references": [
      "https://en.wikipedia.org/wiki/Recommender_system",
      "https://developers.google.com/machine-learning/recommendation"
    ]
  },
  {
    "term": "Fraud Detection",
    "category": "Applied AI Domains",
    "aliases": ["Financial Fraud Detection", "Anomaly Detection"],
    "definition": "The use of AI and machine learning to identify fraudulent activities, transactions, or behaviors by detecting patterns and anomalies in data.",
    "related": ["Anomaly Detection", "Financial AI", "Risk Assessment", "Pattern Recognition"],
    "tags": ["fraud-detection", "anomaly-detection", "financial-security"],
    "references": [
      "https://en.wikipedia.org/wiki/Credit_card_fraud",
      "https://www.sas.com/en_us/insights/fraud/fraud-detection.html"
    ]
  },
  {
    "term": "Speech Recognition",
    "category": "Applied AI Domains",
    "aliases": ["Automatic Speech Recognition", "ASR", "Voice Recognition"],
    "definition": "Technology that converts spoken language into text, enabling voice-based interfaces and applications through audio signal processing and language modeling.",
    "related": ["Natural Language Processing", "Voice Assistant", "Audio Processing", "Language Model"],
    "tags": ["speech-recognition", "voice-processing", "audio-ai"],
    "references": [
      "https://en.wikipedia.org/wiki/Speech_recognition",
      "https://cloud.google.com/speech-to-text"
    ]
  },
  {
    "term": "Drug Discovery",
    "category": "Applied AI Domains",
    "aliases": ["AI Drug Discovery", "Computational Drug Discovery"],
    "definition": "The application of AI and machine learning to accelerate the identification and development of new pharmaceutical compounds and treatments.",
    "related": ["Healthcare AI", "Molecular Modeling", "Bioinformatics", "Protein Folding"],
    "tags": ["drug-discovery", "pharmaceutical-ai", "molecular-ai"],
    "references": [
      "https://en.wikipedia.org/wiki/Drug_discovery",
      "https://www.nature.com/articles/s41573-019-0024-5"
    ]
  },
  {
    "term": "Smart Manufacturing",
    "category": "Applied AI Domains",
    "aliases": ["Industry 4.0", "Intelligent Manufacturing"],
    "definition": "The integration of AI technologies into manufacturing processes to optimize production, predict maintenance needs, ensure quality control, and increase efficiency.",
    "related": ["Predictive Maintenance", "Quality Control", "Supply Chain Optimization", "IoT"],
    "tags": ["smart-manufacturing", "industry-40", "production-optimization"],
    "references": [
      "https://en.wikipedia.org/wiki/Smart_manufacturing",
      "https://www.mckinsey.com/capabilities/operations/our-insights/smart-manufacturing"
    ]
  },
  {
    "term": "Emergent Behavior",
    "category": "AI Fundamentals",
    "aliases": ["Emergence", "Emergent Properties"],
    "definition": "Unexpected capabilities or behaviors that arise in AI systems as they scale up in size or complexity, not explicitly programmed or predicted from the system's individual components.",
    "related": ["Artificial General Intelligence", "Large Language Model", "Scaling Laws", "Complex Systems"],
    "tags": ["emergence", "complex-behavior", "scaling"],
    "references": [
      "https://en.wikipedia.org/wiki/Emergence",
      "https://www.anthropic.com/news/emergent-abilities"
    ]
  },
  {
    "term": "Cognitive Architecture",
    "category": "AI Fundamentals",
    "aliases": ["Mental Architecture", "Computational Cognitive Model"],
    "definition": "A framework that describes the structural and functional organization of an AI system's reasoning, learning, and problem-solving processes, inspired by human cognitive processes.",
    "related": ["AI Agent", "Expert System", "Symbolic AI", "Multi-Agent System"],
    "tags": ["cognitive-architecture", "reasoning", "mental-model"],
    "references": [
      "https://en.wikipedia.org/wiki/Cognitive_architecture",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Computational Complexity",
    "category": "AI Fundamentals",
    "aliases": ["Algorithm Complexity", "Time Complexity"],
    "definition": "The measure of computational resources (time, space, energy) required to execute an algorithm or AI system, crucial for understanding scalability and efficiency limits.",
    "related": ["Algorithm", "Optimization", "Scalability", "Big O Notation"],
    "tags": ["complexity", "performance", "scalability"],
    "references": [
      "https://en.wikipedia.org/wiki/Computational_complexity",
      "https://www.khanacademy.org/computing/computer-science/algorithms"
    ]
  },
  {
    "term": "Abstraction",
    "category": "AI Fundamentals",
    "aliases": ["Data Abstraction", "Hierarchical Abstraction"],
    "definition": "The process of hiding implementation details while showing only essential features, allowing AI systems to represent complex concepts at different levels of granularity.",
    "related": ["Representation Learning", "Feature Learning", "Hierarchical Learning", "Knowledge Representation"],
    "tags": ["abstraction", "representation", "hierarchy"],
    "references": [
      "https://en.wikipedia.org/wiki/Abstraction_(computer_science)",
      "https://plato.stanford.edu/entries/computational-mind/"
    ]
  },
  {
    "term": "Inductive Bias",
    "category": "AI Fundamentals",
    "aliases": ["Learning Bias", "Prior Assumptions"],
    "definition": "The set of assumptions that a learning algorithm uses to predict outputs for inputs it has not encountered, influencing how the algorithm generalizes from training data.",
    "related": ["Machine Learning", "Generalization", "Prior Knowledge", "Learning Theory"],
    "tags": ["inductive-bias", "generalization", "assumptions"],
    "references": [
      "https://en.wikipedia.org/wiki/Inductive_bias",
      "https://www.cs.cmu.edu/~tom/mlbook.html"
    ]
  },
  {
    "term": "Metalearning",
    "category": "AI Fundamentals",
    "aliases": ["Learning to Learn", "Meta-Learning"],
    "definition": "The ability of AI systems to learn how to learn more effectively, adapting learning strategies based on experience with different tasks and domains.",
    "related": ["Few-shot Learning", "Transfer Learning", "Adaptation", "Learning Algorithms"],
    "tags": ["metalearning", "adaptation", "learning-strategies"],
    "references": [
      "https://en.wikipedia.org/wiki/Meta-learning_(computer_science)",
      "https://arxiv.org/abs/1909.13458"
    ]
  },
  {
    "term": "Approximation Theory",
    "category": "AI Fundamentals",
    "aliases": ["Function Approximation", "Universal Approximation"],
    "definition": "Mathematical framework studying how well functions can be approximated by simpler functions, fundamental to understanding the theoretical capabilities of neural networks.",
    "related": ["Neural Network", "Universal Approximation Theorem", "Function Learning", "Mathematical Foundations"],
    "tags": ["approximation", "mathematical-theory", "function-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Approximation_theory",
      "https://www.deeplearningbook.org/contents/mlp.html"
    ]
  },
  {
    "term": "Computational Graph",
    "category": "AI Fundamentals",
    "aliases": ["Computation Graph", "Data Flow Graph"],
    "definition": "A directed graph representing mathematical computations where nodes represent operations and edges represent data flow, essential for automatic differentiation in deep learning.",
    "related": ["Backpropagation", "Automatic Differentiation", "Neural Network", "Gradient Computation"],
    "tags": ["computational-graph", "automatic-differentiation", "data-flow"],
    "references": [
      "https://en.wikipedia.org/wiki/Automatic_differentiation",
      "https://www.tensorflow.org/guide/intro_to_graphs"
    ]
  },
  {
    "term": "State Space",
    "category": "AI Fundamentals",
    "aliases": ["Configuration Space", "Problem Space"],
    "definition": "The set of all possible states or configurations that an AI system can be in, providing a mathematical framework for reasoning about system behavior and planning.",
    "related": ["Planning", "Search Algorithms", "Markov Decision Process", "State Representation"],
    "tags": ["state-space", "system-states", "mathematical-framework"],
    "references": [
      "https://en.wikipedia.org/wiki/State_space",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/planning.pdf"
    ]
  },
  {
    "term": "Information Theory",
    "category": "AI Fundamentals",
    "aliases": ["Shannon Information", "Communication Theory"],
    "definition": "Mathematical framework for quantifying information content, uncertainty, and communication, providing theoretical foundations for machine learning and AI systems.",
    "related": ["Entropy", "Mutual Information", "Compression", "Learning Theory"],
    "tags": ["information-theory", "entropy", "mathematical-foundations"],
    "references": [
      "https://en.wikipedia.org/wiki/Information_theory",
      "https://www.inference.org.uk/itprnn/book.pdf"
    ]
  },

  {
    "term": "Variational Autoencoder",
    "category": "Machine Learning Algorithms",
    "aliases": ["VAE", "Variational AE"],
    "definition": "A generative model that learns to encode data into a probabilistic latent space and decode it back, enabling generation of new data samples and learning meaningful representations.",
    "related": ["Autoencoder", "Generative Model", "Latent Space", "Bayesian Inference"],
    "tags": ["vae", "generative-model", "probabilistic"],
    "references": [
      "https://en.wikipedia.org/wiki/Variational_autoencoder",
      "https://arxiv.org/abs/1312.6114"
    ]
  },
  {
    "term": "Gaussian Process",
    "category": "Machine Learning Algorithms",
    "aliases": ["GP", "Gaussian Process Regression"],
    "definition": "A probabilistic model that defines a distribution over functions, particularly useful for regression and optimization tasks where uncertainty quantification is important.",
    "related": ["Bayesian Inference", "Uncertainty Quantification", "Kernel Method", "Regression"],
    "tags": ["gaussian-process", "probabilistic-model", "uncertainty"],
    "references": [
      "https://en.wikipedia.org/wiki/Gaussian_process",
      "http://www.gaussianprocess.org/gpml/"
    ]
  },
  {
    "term": "AdaBoost",
    "category": "Machine Learning Algorithms",
    "aliases": ["Adaptive Boosting"],
    "definition": "An ensemble method that sequentially applies weak learners, with each subsequent learner focusing on examples that previous learners classified incorrectly.",
    "related": ["Boosting", "Ensemble Methods", "Weak Learner", "Classification"],
    "tags": ["adaboost", "boosting", "ensemble"],
    "references": [
      "https://en.wikipedia.org/wiki/AdaBoost",
      "https://scikit-learn.org/stable/modules/ensemble.html#adaboost"
    ]
  },
  {
    "term": "Expectation Maximization",
    "category": "Machine Learning Algorithms",
    "aliases": ["EM Algorithm", "EM"],
    "definition": "An iterative algorithm for finding maximum likelihood estimates in models with latent variables, alternating between expectation and maximization steps.",
    "related": ["Maximum Likelihood", "Latent Variables", "Clustering", "Hidden Markov Model"],
    "tags": ["em-algorithm", "maximum-likelihood", "latent-variables"],
    "references": [
      "https://en.wikipedia.org/wiki/Expectation%E2%80%93maximization_algorithm",
      "https://www.cs.cmu.edu/~epxing/Class/10701/lecture/EM.pdf"
    ]
  },
  {
    "term": "Isolation Forest",
    "category": "Machine Learning Algorithms",
    "aliases": ["iForest"],
    "definition": "An unsupervised anomaly detection algorithm that isolates anomalies by randomly selecting features and split values, assuming anomalies are easier to isolate than normal points.",
    "related": ["Anomaly Detection", "Unsupervised Learning", "Outlier Detection", "Tree-based Methods"],
    "tags": ["isolation-forest", "anomaly-detection", "unsupervised"],
    "references": [
      "https://en.wikipedia.org/wiki/Isolation_forest",
      "https://scikit-learn.org/stable/modules/outlier_detection.html#isolation-forest"
    ]
  },
  {
    "term": "DBSCAN",
    "category": "Machine Learning Algorithms",
    "aliases": ["Density-Based Spatial Clustering"],
    "definition": "A density-based clustering algorithm that groups together points in high-density areas and marks points in low-density areas as outliers.",
    "related": ["Clustering", "Density-based Clustering", "Outlier Detection", "Unsupervised Learning"],
    "tags": ["dbscan", "density-clustering", "outlier-detection"],
    "references": [
      "https://en.wikipedia.org/wiki/DBSCAN",
      "https://scikit-learn.org/stable/modules/clustering.html#dbscan"
    ]
  },
  {
    "term": "Q-Learning",
    "category": "Machine Learning Algorithms",
    "aliases": ["Q-Learning Algorithm"],
    "definition": "A model-free reinforcement learning algorithm that learns the optimal action-value function, enabling an agent to determine the best action to take in any given state.",
    "related": ["Reinforcement Learning", "Markov Decision Process", "Value Function", "Temporal Difference"],
    "tags": ["q-learning", "reinforcement-learning", "value-function"],
    "references": [
      "https://en.wikipedia.org/wiki/Q-learning",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/050207reinforcement.pdf"
    ]
  },
  {
    "term": "UMAP",
    "category": "Machine Learning Algorithms",
    "aliases": ["Uniform Manifold Approximation", "UMAP Algorithm"],
    "definition": "A dimensionality reduction technique that preserves both local and global data structure, often used for visualization and preprocessing of high-dimensional data.",
    "related": ["Dimensionality Reduction", "Manifold Learning", "t-SNE", "Data Visualization"],
    "tags": ["umap", "dimensionality-reduction", "manifold-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Uniform_manifold_approximation_and_projection",
      "https://arxiv.org/abs/1802.03426"
    ]
  },
  {
    "term": "Bayesian Optimization",
    "category": "Machine Learning Algorithms",
    "aliases": ["BO", "Bayesian Global Optimization"],
    "definition": "An optimization technique for expensive-to-evaluate functions that uses a probabilistic model to guide the search for optimal parameters, commonly used in hyperparameter tuning.",
    "related": ["Hyperparameter Tuning", "Gaussian Process", "Acquisition Function", "Global Optimization"],
    "tags": ["bayesian-optimization", "hyperparameter-tuning", "global-optimization"],
    "references": [
      "https://en.wikipedia.org/wiki/Bayesian_optimization",
      "https://arxiv.org/abs/1012.2599"
    ]
  },
  {
    "term": "Elastic Net",
    "category": "Machine Learning Algorithms",
    "aliases": ["Elastic Net Regularization"],
    "definition": "A regularized regression method that combines L1 and L2 penalties, providing feature selection capabilities while handling correlated features better than Lasso alone.",
    "related": ["L1 Regularization", "L2 Regularization", "Linear Regression", "Feature Selection"],
    "tags": ["elastic-net", "regularization", "feature-selection"],
    "references": [
      "https://en.wikipedia.org/wiki/Elastic_net_regularization",
      "https://scikit-learn.org/stable/modules/linear_model.html#elastic-net"
    ]
  },

  {
    "term": "Vision Transformer",
    "category": "Deep Learning Architectures",
    "aliases": ["ViT", "Vision Transformers"],
    "definition": "An adaptation of the transformer architecture for computer vision tasks that treats image patches as sequences, achieving state-of-the-art performance on image classification.",
    "related": ["Transformer", "Computer Vision", "Attention Mechanism", "Image Classification"],
    "tags": ["vision-transformer", "computer-vision", "attention"],
    "references": [
      "https://en.wikipedia.org/wiki/Vision_transformer",
      "https://arxiv.org/abs/2010.11929"
    ]
  },
  {
    "term": "Mixture of Experts",
    "category": "Deep Learning Architectures",
    "aliases": ["MoE", "Sparse MoE"],
    "definition": "A neural architecture that uses multiple specialized expert networks with a gating mechanism to route inputs, enabling efficient scaling while maintaining computational cost.",
    "related": ["Sparse Models", "Scaling", "Router Network", "Expert Networks"],
    "tags": ["mixture-of-experts", "sparse-models", "scaling"],
    "references": [
      "https://en.wikipedia.org/wiki/Mixture_of_experts",
      "https://arxiv.org/abs/1701.06538"
    ]
  },
  {
    "term": "Neural Architecture Search",
    "category": "Deep Learning Architectures",
    "aliases": ["NAS", "AutoML Architecture"],
    "definition": "An automated approach to designing neural network architectures using algorithms to search through the space of possible architectures and find optimal designs.",
    "related": ["AutoML", "Architecture Design", "Optimization", "Hyperparameter Search"],
    "tags": ["neural-architecture-search", "automl", "architecture-optimization"],
    "references": [
      "https://en.wikipedia.org/wiki/Neural_architecture_search",
      "https://arxiv.org/abs/1611.01578"
    ]
  },
  {
    "term": "Mamba",
    "category": "Deep Learning Architectures",
    "aliases": ["Mamba Architecture", "State Space Model"],
    "definition": "A modern state space model architecture that provides an efficient alternative to transformers for sequence modeling, offering linear scaling with sequence length.",
    "related": ["State Space Model", "Sequence Modeling", "Transformer Alternative", "Efficient Architecture"],
    "tags": ["mamba", "state-space-model", "sequence-modeling"],
    "references": [
      "https://arxiv.org/abs/2312.00752",
      "https://github.com/state-spaces/mamba"
    ]
  },
  {
    "term": "Gated Recurrent Unit",
    "category": "Deep Learning Architectures",
    "aliases": ["GRU"],
    "definition": "A variant of RNN that uses gating mechanisms to control information flow, similar to LSTM but with a simpler structure using only reset and update gates.",
    "related": ["LSTM", "RNN", "Gating Mechanism", "Sequential Modeling"],
    "tags": ["gru", "gated-unit", "rnn-variant"],
    "references": [
      "https://en.wikipedia.org/wiki/Gated_recurrent_unit",
      "https://arxiv.org/abs/1406.1078"
    ]
  },
  {
    "term": "U-Net",
    "category": "Deep Learning Architectures",
    "aliases": ["U-Network"],
    "definition": "A convolutional network architecture with encoder-decoder structure and skip connections, particularly effective for image segmentation and medical imaging tasks.",
    "related": ["CNN", "Image Segmentation", "Encoder-Decoder", "Medical Imaging"],
    "tags": ["u-net", "segmentation", "encoder-decoder"],
    "references": [
      "https://en.wikipedia.org/wiki/U-Net",
      "https://arxiv.org/abs/1505.04597"
    ]
  },
  {
    "term": "Capsule Network",
    "category": "Deep Learning Architectures",
    "aliases": ["CapsNet", "Capsule Neural Network"],
    "definition": "A neural network architecture that uses capsules (groups of neurons) to represent parts and wholes, designed to better handle spatial relationships and viewpoint variations.",
    "related": ["CNN", "Spatial Relationships", "Viewpoint Invariance", "Hierarchical Representation"],
    "tags": ["capsule-network", "spatial-relationships", "hierarchical"],
    "references": [
      "https://en.wikipedia.org/wiki/Capsule_neural_network",
      "https://arxiv.org/abs/1710.09829"
    ]
  },
  {
    "term": "DenseNet",
    "category": "Deep Learning Architectures",
    "aliases": ["Densely Connected Network"],
    "definition": "A CNN architecture where each layer receives inputs from all preceding layers, promoting feature reuse and reducing the number of parameters needed.",
    "related": ["CNN", "Feature Reuse", "Skip Connections", "Parameter Efficiency"],
    "tags": ["densenet", "feature-reuse", "dense-connections"],
    "references": [
      "https://en.wikipedia.org/wiki/DenseNet",
      "https://arxiv.org/abs/1608.06993"
    ]
  },
  {
    "term": "Squeeze-and-Excitation",
    "category": "Deep Learning Architectures",
    "aliases": ["SE Block", "SENet"],
    "definition": "An attention mechanism for CNNs that adaptively recalibrates channel-wise feature responses by explicitly modeling interdependencies between channels.",
    "related": ["Attention Mechanism", "CNN", "Channel Attention", "Feature Recalibration"],
    "tags": ["squeeze-excitation", "channel-attention", "feature-recalibration"],
    "references": [
      "https://en.wikipedia.org/wiki/Squeeze-and-excitation_network",
      "https://arxiv.org/abs/1709.01507"
    ]
  },
  {
    "term": "MobileNet",
    "category": "Deep Learning Architectures",
    "aliases": ["Mobile Neural Network"],
    "definition": "A family of efficient CNN architectures designed for mobile and embedded applications, using depthwise separable convolutions to reduce computational cost.",
    "related": ["Efficient Architecture", "Mobile Computing", "Depthwise Convolution", "Edge Deployment"],
    "tags": ["mobilenet", "efficient-architecture", "mobile-deployment"],
    "references": [
      "https://en.wikipedia.org/wiki/MobileNet",
      "https://arxiv.org/abs/1704.04861"
    ]
  },

  {
    "term": "Large Language Model",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["LLM"],
    "definition": "Very large neural networks trained on vast amounts of text data, capable of understanding and generating human-like text across a wide range of tasks and domains.",
    "related": ["Transformer", "Generative AI", "Language Model", "Foundation Model"],
    "tags": ["llm", "language-generation", "foundation-model"],
    "references": [
      "https://en.wikipedia.org/wiki/Large_language_model",
      "https://www.anthropic.com/news/introducing-claude"
    ]
  },
  {
    "term": "In-Context Learning",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["ICL", "Contextual Learning"],
    "definition": "The ability of language models to learn and perform new tasks by conditioning on a few examples provided in the input context, without updating model parameters.",
    "related": ["Few-shot Learning", "Prompt Engineering", "Context Window", "Task Adaptation"],
    "tags": ["in-context-learning", "few-shot", "task-adaptation"],
    "references": [
      "https://arxiv.org/abs/2005.14165",
      "https://www.anthropic.com/news/in-context-learning"
    ]
  },
  {
    "term": "Parameter-Efficient Fine-tuning",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["PEFT", "Efficient Fine-tuning"],
    "definition": "Techniques that adapt large language models to specific tasks by updating only a small subset of parameters, reducing computational costs while maintaining performance.",
    "related": ["LoRA", "Fine-tuning", "Adapter Layers", "Transfer Learning"],
    "tags": ["peft", "efficient-tuning", "parameter-efficiency"],
    "references": [
      "https://arxiv.org/abs/2106.09685",
      "https://huggingface.co/docs/peft/index"
    ]
  },
  {
    "term": "Retrieval-Augmented Generation",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["RAG"],
    "definition": "A technique that combines pre-trained language models with external knowledge retrieval, allowing models to access and incorporate relevant information during generation.",
    "related": ["Information Retrieval", "Knowledge Base", "External Knowledge", "Grounding"],
    "tags": ["rag", "knowledge-retrieval", "external-knowledge"],
    "references": [
      "https://arxiv.org/abs/2005.11401",
      "https://huggingface.co/docs/transformers/model_doc/rag"
    ]
  },
  {
    "term": "Instruction Tuning",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Instruction Following", "Supervised Fine-tuning"],
    "definition": "A training method that teaches language models to follow human instructions by fine-tuning on datasets of instruction-response pairs.",
    "related": ["Fine-tuning", "Human Feedback", "Task Following", "Alignment"],
    "tags": ["instruction-tuning", "instruction-following", "alignment"],
    "references": [
      "https://arxiv.org/abs/2109.01652",
      "https://arxiv.org/abs/2203.02155"
    ]
  },
  {
    "term": "Constitutional AI",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["CAI", "Constitutional Training"],
    "definition": "A training methodology that uses AI feedback based on a set of principles (constitution) to train AI systems to be more helpful, harmless, and honest.",
    "related": ["AI Safety", "Alignment", "AI Training", "Reinforcement Learning from Human Feedback"],
    "tags": ["constitutional-ai", "ai-safety", "alignment"],
    "references": [
      "https://arxiv.org/abs/2212.08073",
      "https://www.anthropic.com/news/constitutional-ai-harmlessness-from-ai-feedback"
    ]
  },
  {
    "term": "Semantic Role Labeling",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["SRL", "Thematic Role Labeling"],
    "definition": "The task of identifying the semantic roles that different constituents play with respect to the main verb or predicate in a sentence.",
    "related": ["Syntactic Parsing", "Semantic Analysis", "Predicate-Argument Structure", "Natural Language Understanding"],
    "tags": ["semantic-role-labeling", "semantic-analysis", "sentence-understanding"],
    "references": [
      "https://en.wikipedia.org/wiki/Semantic_role_labeling",
      "https://demo.allennlp.org/semantic-role-labeling"
    ]
  },
  {
    "term": "Discourse Analysis",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Text Discourse", "Discourse Processing"],
    "definition": "The computational analysis of how sentences and larger text units relate to each other to form coherent texts, including coreference and discourse relations.",
    "related": ["Coreference Resolution", "Text Coherence", "Document Understanding", "Pragmatics"],
    "tags": ["discourse-analysis", "text-coherence", "document-understanding"],
    "references": [
      "https://en.wikipedia.org/wiki/Discourse_analysis",
      "https://aclanthology.org/N18-1210/"
    ]
  },
  {
    "term": "Neural Machine Translation",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["NMT"],
    "definition": "A machine translation approach that uses neural networks, typically sequence-to-sequence models with attention mechanisms, to translate text between languages.",
    "related": ["Machine Translation", "Sequence-to-Sequence", "Attention Mechanism", "Encoder-Decoder"],
    "tags": ["neural-machine-translation", "translation", "seq2seq"],
    "references": [
      "https://en.wikipedia.org/wiki/Neural_machine_translation",
      "https://arxiv.org/abs/1409.0473"
    ]
  },
  {
    "term": "Multilingual NLP",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Cross-lingual NLP", "Polyglot NLP"],
    "definition": "Natural language processing techniques and models designed to work across multiple languages, often using shared representations or transfer learning approaches.",
    "related": ["Cross-lingual Learning", "Transfer Learning", "Language Models", "Machine Translation"],
    "tags": ["multilingual-nlp", "cross-lingual", "language-diversity"],
    "references": [
      "https://arxiv.org/abs/1911.02116",
      "https://huggingface.co/blog/multilingual-transformers"
    ]
  },

  {
    "term": "Text-to-Video Generation",
    "category": "Generative AI",
    "aliases": ["T2V", "Video Synthesis from Text"],
    "definition": "AI systems that create video content from textual descriptions, combining natural language understanding with video generation capabilities.",
    "related": ["Text-to-Image Generation", "Video Generation", "Multimodal AI", "Diffusion Model"],
    "tags": ["text-to-video", "video-synthesis", "multimodal-generation"],
    "references": [
      "https://en.wikipedia.org/wiki/Text-to-video_model",
      "https://openai.com/research/sora"
    ]
  },
  {
    "term": "LoRA",
    "category": "Generative AI",
    "aliases": ["Low-Rank Adaptation"],
    "definition": "A parameter-efficient fine-tuning technique that adapts large models by training low-rank decomposition matrices, significantly reducing computational requirements.",
    "related": ["Parameter-Efficient Fine-tuning", "Fine-tuning", "QLoRA", "Adapter Methods"],
    "tags": ["lora", "efficient-tuning", "low-rank"],
    "references": [
      "https://arxiv.org/abs/2106.09685",
      "https://huggingface.co/docs/peft/conceptual_guides/lora"
    ]
  },
  {
    "term": "Reinforcement Learning from Human Feedback",
    "category": "Generative AI",
    "aliases": ["RLHF", "Human Preference Learning"],
    "definition": "A training method that uses human preferences to train reward models, which are then used to fine-tune AI systems using reinforcement learning.",
    "related": ["Reinforcement Learning", "Human Feedback", "Reward Modeling", "AI Alignment"],
    "tags": ["rlhf", "human-feedback", "alignment"],
    "references": [
      "https://arxiv.org/abs/1706.03741",
      "https://openai.com/research/learning-from-human-preferences"
    ]
  },
  {
    "term": "Token",
    "category": "Generative AI",
    "aliases": ["Text Token", "Language Token"],
    "definition": "The basic unit of text processing in language models, typically representing words, subwords, or characters that the model processes sequentially.",
    "related": ["Tokenization", "Subword Tokenization", "Vocabulary", "Text Processing"],
    "tags": ["token", "text-processing", "tokenization"],
    "references": [
      "https://huggingface.co/docs/transformers/tokenizer_summary",
      "https://platform.openai.com/tokenizer"
    ]
  },
  {
    "term": "Grounding",
    "category": "Generative AI",
    "aliases": ["Knowledge Grounding", "Factual Grounding"],
    "definition": "The process of connecting AI-generated content to factual, verifiable information sources to reduce hallucinations and improve accuracy.",
    "related": ["Hallucination", "Retrieval-Augmented Generation", "External Knowledge", "Fact Verification"],
    "tags": ["grounding", "factual-accuracy", "knowledge-connection"],
    "references": [
      "https://arxiv.org/abs/2109.04611",
      "https://www.anthropic.com/news/reducing-hallucinations"
    ]
  },
  {
    "term": "Model Alignment",
    "category": "Generative AI",
    "aliases": ["AI Alignment", "Value Alignment"],
    "definition": "The process of ensuring AI systems behave in accordance with human values and intentions, particularly important for powerful generative models.",
    "related": ["AI Safety", "Human Values", "Constitutional AI", "RLHF"],
    "tags": ["alignment", "human-values", "ai-safety"],
    "references": [
      "https://en.wikipedia.org/wiki/AI_alignment",
      "https://www.safe.ai/alignment"
    ]
  },
  {
    "term": "Context Window",
    "category": "Generative AI",
    "aliases": ["Context Length", "Sequence Length"],
    "definition": "The maximum number of tokens that a language model can process in a single input, determining how much context the model can consider.",
    "related": ["Token", "Attention Mechanism", "Memory Limitations", "Long Context"],
    "tags": ["context-window", "sequence-length", "memory-limit"],
    "references": [
      "https://platform.openai.com/docs/models/gpt-4",
      "https://arxiv.org/abs/2104.05394"
    ]
  },
  {
    "term": "Inference Optimization",
    "category": "Generative AI",
    "aliases": ["Model Optimization", "Inference Acceleration"],
    "definition": "Techniques to improve the speed and efficiency of AI model inference, including quantization, pruning, and specialized hardware utilization.",
    "related": ["Quantization", "Model Compression", "Edge Computing", "Hardware Acceleration"],
    "tags": ["inference-optimization", "model-acceleration", "efficiency"],
    "references": [
      "https://arxiv.org/abs/2103.13630",
      "https://huggingface.co/docs/optimum/index"
    ]
  },
  {
    "term": "Synthetic Data Generation",
    "category": "Generative AI",
    "aliases": ["Data Synthesis", "Artificial Data Creation"],
    "definition": "The use of generative AI models to create realistic synthetic datasets that can be used for training, testing, or privacy-preserving applications.",
    "related": ["Data Augmentation", "Privacy", "Training Data", "Generative Model"],
    "tags": ["synthetic-data", "data-generation", "privacy-preserving"],
    "references": [
      "https://en.wikipedia.org/wiki/Synthetic_data",
      "https://arxiv.org/abs/2205.06564"
    ]
  },
  {
    "term": "Constitutional AI",
    "category": "Generative AI",
    "aliases": ["CAI", "Constitutional Training"],
    "definition": "A training methodology that uses AI feedback based on a set of principles to train AI systems to be more helpful, harmless, and honest.",
    "related": ["AI Safety", "Self-Supervision", "AI Feedback", "Value Learning"],
    "tags": ["constitutional-ai", "ai-safety", "self-supervision"],
    "references": [
      "https://arxiv.org/abs/2212.08073",
      "https://www.anthropic.com/news/constitutional-ai-harmlessness-from-ai-feedback"
    ]
  },

  {
    "term": "Agentic AI",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent-Based AI", "Agentic Systems"],
    "definition": "AI systems designed to act autonomously, make decisions, and perform tasks with minimal human intervention, often using reasoning and planning capabilities.",
    "related": ["AI Agent", "Autonomous System", "Planning", "Decision Making"],
    "tags": ["agentic-ai", "autonomous-action", "decision-making"],
    "references": [
      "https://www.anthropic.com/news/claude-3-model-card",
      "https://arxiv.org/abs/2308.11432"
    ]
  },
  {
    "term": "LangGraph",
    "category": "AI Agents & Autonomy",
    "aliases": ["Language Graph Framework"],
    "definition": "A framework for building stateful, multi-agent workflows using graph-based orchestration, enabling complex agent interactions and human-in-the-loop processes.",
    "related": ["Multi-Agent System", "Workflow Orchestration", "Stateful Systems", "Agent Framework"],
    "tags": ["langgraph", "agent-framework", "workflow-orchestration"],
    "references": [
      "https://langchain-ai.github.io/langgraph/",
      "https://github.com/langchain-ai/langgraph"
    ]
  },
  {
    "term": "Tool Use",
    "category": "AI Agents & Autonomy",
    "aliases": ["Tool Calling", "Function Calling"],
    "definition": "The ability of AI agents to interact with external tools, APIs, and systems to perform tasks beyond their base capabilities.",
    "related": ["AI Agent", "External APIs", "Function Calling", "System Integration"],
    "tags": ["tool-use", "external-integration", "function-calling"],
    "references": [
      "https://platform.openai.com/docs/guides/function-calling",
      "https://arxiv.org/abs/2302.04761"
    ]
  },
  {
    "term": "Agent Memory",
    "category": "AI Agents & Autonomy",
    "aliases": ["Persistent Memory", "Agent State"],
    "definition": "The ability of AI agents to store and retrieve information across interactions, maintaining context and learning from past experiences.",
    "related": ["Stateful Systems", "Context Preservation", "Learning", "Information Storage"],
    "tags": ["agent-memory", "persistent-state", "context-preservation"],
    "references": [
      "https://arxiv.org/abs/2307.09288",
      "https://langchain-ai.github.io/langgraph/concepts/memory/"
    ]
  },
  {
    "term": "Human-in-the-Loop",
    "category": "AI Agents & Autonomy",
    "aliases": ["HITL", "Human-AI Collaboration"],
    "definition": "A system design where humans actively participate in AI agent workflows, providing oversight, approval, or intervention at critical decision points.",
    "related": ["Human-AI Collaboration", "Agent Oversight", "Interactive Systems", "Approval Workflows"],
    "tags": ["human-in-the-loop", "human-ai-collaboration", "oversight"],
    "references": [
      "https://en.wikipedia.org/wiki/Human-in-the-loop",
      "https://arxiv.org/abs/2108.00941"
    ]
  },
  {
    "term": "Agent Orchestration",
    "category": "AI Agents & Autonomy",
    "aliases": ["Multi-Agent Orchestration", "Agent Coordination"],
    "definition": "The coordination and management of multiple AI agents working together to accomplish complex tasks through structured workflows and communication.",
    "related": ["Multi-Agent System", "Workflow Management", "Agent Communication", "Task Distribution"],
    "tags": ["agent-orchestration", "multi-agent-coordination", "workflow-management"],
    "references": [
      "https://arxiv.org/abs/2308.10379",
      "https://blog.langchain.dev/langgraph-multi-agent-workflows/"
    ]
  },
  {
    "term": "Cognitive Architecture",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Architecture", "Reasoning Architecture"],
    "definition": "The overall design and structure of an AI agent's reasoning, memory, and decision-making processes, defining how the agent processes information and takes actions.",
    "related": ["Agent Design", "Reasoning Systems", "Decision Architecture", "System Design"],
    "tags": ["cognitive-architecture", "agent-design", "reasoning-structure"],
    "references": [
      "https://en.wikipedia.org/wiki/Cognitive_architecture",
      "https://arxiv.org/abs/2309.02427"
    ]
  },
  {
    "term": "ReAct",
    "category": "AI Agents & Autonomy",
    "aliases": ["Reasoning and Acting", "ReAct Pattern"],
    "definition": "A paradigm where AI agents alternate between reasoning (thinking) and acting (using tools), enabling more systematic problem-solving approaches.",
    "related": ["Reasoning", "Tool Use", "Problem Solving", "Action Planning"],
    "tags": ["react", "reasoning-acting", "problem-solving"],
    "references": [
      "https://arxiv.org/abs/2210.03629",
      "https://langchain-ai.github.io/langgraph/how-tos/create-react-agent/"
    ]
  },
  {
    "term": "Agent Evaluation",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Assessment", "Agent Benchmarking"],
    "definition": "Methods and metrics for measuring the performance, reliability, and safety of AI agents across different tasks and environments.",
    "related": ["Performance Metrics", "Benchmarking", "Safety Assessment", "Agent Testing"],
    "tags": ["agent-evaluation", "performance-assessment", "benchmarking"],
    "references": [
      "https://arxiv.org/abs/2308.04030",
      "https://agent-evals.github.io/"
    ]
  },
  {
    "term": "Supervisor Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Orchestrator Agent", "Manager Agent"],
    "definition": "An AI agent responsible for coordinating and managing other agents in a multi-agent system, making high-level decisions about task allocation and workflow.",
    "related": ["Multi-Agent System", "Agent Coordination", "Hierarchical Systems", "Task Management"],
    "tags": ["supervisor-agent", "agent-management", "hierarchical-control"],
    "references": [
      "https://blog.langchain.dev/langgraph-multi-agent-workflows/",
      "https://arxiv.org/abs/2308.10848"
    ]
  },

  {
    "term": "Semantic Search",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Meaning-based Search", "Contextual Search"],
    "definition": "A search technique that seeks to improve search accuracy by understanding the intent and contextual meaning of search queries, rather than just matching keywords.",
    "related": ["Vector Search", "Natural Language Processing", "Embedding", "Contextual Understanding"],
    "tags": ["semantic-search", "meaning-based", "contextual-search"],
    "references": [
      "https://en.wikipedia.org/wiki/Semantic_search",
      "https://www.elastic.co/what-is/semantic-search"
    ]
  },
  {
    "term": "Vector Database",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Vector Store", "Embedding Database"],
    "definition": "A specialized database designed to store, index, and query high-dimensional vector embeddings, enabling efficient similarity search and retrieval.",
    "related": ["Vector Search", "Embedding", "Similarity Search", "High-dimensional Data"],
    "tags": ["vector-database", "embedding-storage", "similarity-search"],
    "references": [
      "https://en.wikipedia.org/wiki/Vector_database",
      "https://www.pinecone.io/learn/vector-database/"
    ]
  },
  {
    "term": "Knowledge Graph Embedding",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["KG Embedding", "Graph Embedding"],
    "definition": "Techniques for learning low-dimensional vector representations of entities and relations in knowledge graphs, enabling reasoning and link prediction.",
    "related": ["Knowledge Graph", "Graph Neural Network", "Embedding", "Link Prediction"],
    "tags": ["kg-embedding", "graph-embedding", "knowledge-representation"],
    "references": [
      "https://arxiv.org/abs/1503.00759",
      "https://github.com/thunlp/OpenKE"
    ]
  },
  {
    "term": "Hybrid Search",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Combined Search", "Multi-modal Search"],
    "definition": "A search approach that combines multiple retrieval methods, such as keyword-based and semantic search, to improve overall search effectiveness.",
    "related": ["Semantic Search", "Keyword Search", "Search Fusion", "Multi-modal Retrieval"],
    "tags": ["hybrid-search", "search-fusion", "multi-modal-retrieval"],
    "references": [
      "https://www.elastic.co/guide/en/elasticsearch/reference/current/knn-search.html",
      "https://arxiv.org/abs/2210.11934"
    ]
  },
  {
    "term": "Dense Retrieval",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Dense Passage Retrieval", "Neural Retrieval"],
    "definition": "A retrieval method that uses dense vector representations learned by neural networks to find relevant documents, as opposed to sparse keyword-based methods.",
    "related": ["Vector Search", "Neural Networks", "Document Retrieval", "Embedding Models"],
    "tags": ["dense-retrieval", "neural-retrieval", "vector-based"],
    "references": [
      "https://arxiv.org/abs/2004.04906",
      "https://huggingface.co/sentence-transformers"
    ]
  },
  {
    "term": "Reranking",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Result Reranking", "Search Reranking"],
    "definition": "A two-stage retrieval process where an initial set of candidate documents is refined and reordered using more sophisticated ranking models.",
    "related": ["Information Retrieval", "Ranking Models", "Search Optimization", "Relevance Scoring"],
    "tags": ["reranking", "relevance-scoring", "search-optimization"],
    "references": [
      "https://arxiv.org/abs/2101.05667",
      "https://www.sbert.net/examples/applications/retrieve_rerank/README.html"
    ]
  },
  {
    "term": "Document Chunking",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Text Chunking", "Document Segmentation"],
    "definition": "The process of breaking down large documents into smaller, manageable pieces that can be effectively processed and retrieved by AI systems.",
    "related": ["Text Processing", "Document Processing", "Retrieval Optimization", "Context Management"],
    "tags": ["document-chunking", "text-segmentation", "retrieval-optimization"],
    "references": [
      "https://python.langchain.com/docs/modules/data_connection/document_transformers/",
      "https://arxiv.org/abs/2307.03172"
    ]
  },
  {
    "term": "Query Expansion",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Query Augmentation", "Search Query Enhancement"],
    "definition": "Techniques for automatically expanding user queries with additional relevant terms to improve retrieval effectiveness and recall.",
    "related": ["Information Retrieval", "Query Processing", "Search Optimization", "Relevance Improvement"],
    "tags": ["query-expansion", "search-enhancement", "retrieval-improvement"],
    "references": [
      "https://en.wikipedia.org/wiki/Query_expansion",
      "https://arxiv.org/abs/2104.08663"
    ]
  },
  {
    "term": "Multimodal Retrieval",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Cross-modal Retrieval", "Multimedia Retrieval"],
    "definition": "Retrieval systems that can search across different modalities (text, images, audio, video) and find relevant content regardless of input type.",
    "related": ["Multimodal AI", "Cross-modal Learning", "Vision-Language Models", "Multimedia Search"],
    "tags": ["multimodal-retrieval", "cross-modal-search", "multimedia"],
    "references": [
      "https://arxiv.org/abs/2103.00020",
      "https://clip-retrieval.laion.ai/"
    ]
  },
  {
    "term": "Approximate Nearest Neighbor",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["ANN", "Fast Similarity Search"],
    "definition": "Algorithms and data structures designed to quickly find approximate nearest neighbors in high-dimensional spaces, crucial for efficient vector search.",
    "related": ["Vector Search", "Similarity Search", "Indexing", "High-dimensional Data"],
    "tags": ["ann", "approximate-search", "vector-indexing"],
    "references": [
      "https://en.wikipedia.org/wiki/Nearest_neighbor_search",
      "https://github.com/spotify/annoy"
    ]
  },

  {
    "term": "Data Orchestration",
    "category": "Data Engineering for AI",
    "aliases": ["Workflow Orchestration", "Data Workflow Management"],
    "definition": "The coordination and management of complex data workflows, ensuring data moves efficiently through processing, transformation, and loading stages.",
    "related": ["Data Pipeline", "Workflow Management", "ETL", "Data Integration"],
    "tags": ["data-orchestration", "workflow-management", "data-coordination"],
    "references": [
      "https://en.wikipedia.org/wiki/Data_orchestration",
      "https://airflow.apache.org/"
    ]
  },
  {
    "term": "Feature Store",
    "category": "Data Engineering for AI",
    "aliases": ["ML Feature Store", "Feature Repository"],
    "definition": "A centralized repository for storing, managing, and serving machine learning features, enabling feature reuse and consistency across ML projects.",
    "related": ["Feature Engineering", "MLOps", "Data Management", "Feature Reuse"],
    "tags": ["feature-store", "feature-management", "mlops"],
    "references": [
      "https://en.wikipedia.org/wiki/Feature_store",
      "https://www.tecton.ai/blog/what-is-a-feature-store/"
    ]
  },
  {
    "term": "Real-time Analytics",
    "category": "Data Engineering for AI",
    "aliases": ["Stream Analytics", "Live Data Processing"],
    "definition": "The capability to process and analyze data as it arrives, enabling immediate insights and responses for time-sensitive AI applications.",
    "related": ["Stream Processing", "Event-driven Architecture", "Low Latency", "Apache Kafka"],
    "tags": ["real-time-analytics", "stream-processing", "low-latency"],
    "references": [
      "https://en.wikipedia.org/wiki/Real-time_analytics",
      "https://kafka.apache.org/documentation/"
    ]
  },
  {
    "term": "Data Observability",
    "category": "Data Engineering for AI",
    "aliases": ["Data Monitoring", "Data Quality Monitoring"],
    "definition": "The ability to understand the health and quality of data throughout its lifecycle, detecting issues like data drift, quality degradation, and pipeline failures.",
    "related": ["Data Quality", "Data Monitoring", "Data Drift", "Pipeline Health"],
    "tags": ["data-observability", "data-monitoring", "quality-assurance"],
    "references": [
      "https://www.montecarlodata.com/blog-what-is-data-observability/",
      "https://greatexpectations.io/"
    ]
  },
  {
    "term": "Data Mesh",
    "category": "Data Engineering for AI",
    "aliases": ["Decentralized Data Architecture"],
    "definition": "A decentralized data architecture paradigm that treats data as a product, with domain-oriented ownership and federated governance across an organization.",
    "related": ["Data Architecture", "Domain-driven Design", "Data Products", "Federated Governance"],
    "tags": ["data-mesh", "decentralized-data", "data-products"],
    "references": [
      "https://martinfowler.com/articles/data-mesh-principles.html",
      "https://www.datamesh-architecture.com/"
    ]
  },
  {
    "term": "Metadata Management",
    "category": "Data Engineering for AI",
    "aliases": ["Data Catalog", "Metadata Governance"],
    "definition": "The systematic organization and governance of metadata to improve data discovery, understanding, and compliance across AI and analytics workflows.",
    "related": ["Data Governance", "Data Discovery", "Schema Management", "Data Lineage"],
    "tags": ["metadata-management", "data-catalog", "data-governance"],
    "references": [
      "https://en.wikipedia.org/wiki/Metadata_management",
      "https://www.amundsen.io/"
    ]
  },
  {
    "term": "Change Data Capture",
    "category": "Data Engineering for AI",
    "aliases": ["CDC", "Data Change Tracking"],
    "definition": "A technique for identifying and capturing changes in data sources, enabling real-time data synchronization and incremental data processing.",
    "related": ["Real-time Processing", "Data Synchronization", "Event Streaming", "Database Replication"],
    "tags": ["change-data-capture", "data-synchronization", "real-time-updates"],
    "references": [
      "https://en.wikipedia.org/wiki/Change_data_capture",
      "https://debezium.io/"
    ]
  },
  {
    "term": "Data Lineage",
    "category": "Data Engineering for AI",
    "aliases": ["Data Provenance", "Data Traceability"],
    "definition": "The tracking of data from its origin through its transformations and usage, providing visibility into data flow and dependencies in AI pipelines.",
    "related": ["Data Governance", "Data Observability", "Audit Trail", "Compliance"],
    "tags": ["data-lineage", "data-provenance", "data-tracking"],
    "references": [
      "https://en.wikipedia.org/wiki/Data_lineage",
      "https://openlineage.io/"
    ]
  },
  {
    "term": "Data Fabric",
    "category": "Data Engineering for AI",
    "aliases": ["Unified Data Layer"],
    "definition": "An architecture approach that provides a unified layer of data services across hybrid and multi-cloud environments, enabling seamless data access and management.",
    "related": ["Data Integration", "Hybrid Cloud", "Data Virtualization", "Unified Access"],
    "tags": ["data-fabric", "unified-data", "hybrid-architecture"],
    "references": [
      "https://www.gartner.com/en/information-technology/glossary/data-fabric",
      "https://www.ibm.com/topics/data-fabric"
    ]
  },
  {
    "term": "Data Contracts",
    "category": "Data Engineering for AI",
    "aliases": ["Data SLA", "Data Agreements"],
    "definition": "Formal agreements that define data quality standards, schema expectations, and service level commitments between data producers and consumers.",
    "related": ["Data Quality", "Schema Management", "Data Governance", "SLA"],
    "tags": ["data-contracts", "data-agreements", "quality-standards"],
    "references": [
      "https://www.montecarlodata.com/blog-data-contracts/",
      "https://datacontract.com/"
    ]
  },

  {
    "term": "Model Monitoring",
    "category": "Model Deployment & Operations",
    "aliases": ["ML Monitoring", "Performance Monitoring"],
    "definition": "The continuous tracking of machine learning model performance, behavior, and health in production to detect issues like drift, degradation, or failures.",
    "related": ["Model Drift", "Performance Metrics", "Alerting", "Model Maintenance"],
    "tags": ["model-monitoring", "performance-tracking", "production-health"],
    "references": [
      "https://en.wikipedia.org/wiki/Model_monitoring",
      "https://www.evidentlyai.com/blog/ml-monitoring-do-i-need-it"
    ]
  },
  {
    "term": "Blue-Green Deployment",
    "category": "Model Deployment & Operations",
    "aliases": ["Blue-Green Strategy"],
    "definition": "A deployment strategy that maintains two identical production environments, allowing for seamless switching between versions and zero-downtime deployments.",
    "related": ["Canary Deployment", "Zero-downtime Deployment", "Production Deployment", "Release Strategy"],
    "tags": ["blue-green-deployment", "zero-downtime", "deployment-strategy"],
    "references": [
      "https://en.wikipedia.org/wiki/Blue-green_deployment",
      "https://martinfowler.com/bliki/BlueGreenDeployment.html"
    ]
  },
  {
    "term": "Feature Monitoring",
    "category": "Model Deployment & Operations",
    "aliases": ["Input Monitoring", "Data Monitoring"],
    "definition": "The tracking and analysis of input features in production models to detect data drift, distribution shifts, and data quality issues.",
    "related": ["Data Drift", "Model Monitoring", "Data Quality", "Distribution Shift"],
    "tags": ["feature-monitoring", "input-tracking", "data-drift-detection"],
    "references": [
      "https://www.evidentlyai.com/blog/machine-learning-monitoring-data-drift",
      "https://docs.seldon.io/projects/alibi-detect/en/stable/"
    ]
  },
  {
    "term": "Model Governance",
    "category": "Model Deployment & Operations",
    "aliases": ["ML Governance", "AI Governance"],
    "definition": "The framework of policies, processes, and controls that ensure machine learning models are developed, deployed, and maintained in compliance with regulations and organizational standards.",
    "related": ["Compliance", "Model Risk Management", "Audit Trail", "Regulatory Requirements"],
    "tags": ["model-governance", "compliance", "risk-management"],
    "references": [
      "https://www.ibm.com/topics/ai-governance",
      "https://www.oreilly.com/library/view/practical-mlops/9781098103002/"
    ]
  },
  {
    "term": "Endpoint Management",
    "category": "Model Deployment & Operations",
    "aliases": ["API Endpoint Management", "Service Management"],
    "definition": "The administration and monitoring of model serving endpoints, including scaling, security, and performance optimization of API services.",
    "related": ["Model Serving", "API Management", "Load Balancing", "Service Monitoring"],
    "tags": ["endpoint-management", "api-management", "service-administration"],
    "references": [
      "https://aws.amazon.com/sagemaker/mlops/",
      "https://kubernetes.io/docs/concepts/services-networking/"
    ]
  },
  {
    "term": "Model Rollback",
    "category": "Model Deployment & Operations",
    "aliases": ["Version Rollback", "Model Reversion"],
    "definition": "The process of reverting to a previous model version when issues are detected in production, ensuring system reliability and minimizing downtime.",
    "related": ["Model Versioning", "Deployment Strategy", "Risk Mitigation", "Production Safety"],
    "tags": ["model-rollback", "version-reversion", "production-safety"],
    "references": [
      "https://mlflow.org/docs/latest/model-registry.html",
      "https://docs.seldon.io/projects/seldon-core/en/latest/"
    ]
  },
  {
    "term": "Traffic Splitting",
    "category": "Model Deployment & Operations",
    "aliases": ["Request Routing", "Load Distribution"],
    "definition": "The technique of directing different portions of incoming requests to different model versions or endpoints, enabling A/B testing and gradual rollouts.",
    "related": ["A/B Testing", "Canary Deployment", "Load Balancing", "Gradual Rollout"],
    "tags": ["traffic-splitting", "request-routing", "gradual-rollout"],
    "references": [
      "https://istio.io/latest/docs/concepts/traffic-management/",
      "https://docs.seldon.io/projects/seldon-core/en/latest/analytics/routers.html"
    ]
  },
  {
    "term": "Model Performance Metrics",
    "category": "Model Deployment & Operations",
    "aliases": ["Production Metrics", "Operational Metrics"],
    "definition": "Key performance indicators used to monitor model behavior in production, including accuracy, latency, throughput, and business-specific metrics.",
    "related": ["Model Monitoring", "Performance Tracking", "Business Metrics", "SLA Monitoring"],
    "tags": ["performance-metrics", "production-monitoring", "kpi-tracking"],
    "references": [
      "https://www.evidentlyai.com/blog/ml-monitoring-metrics",
      "https://neptune.ai/blog/ml-model-monitoring-best-tools"
    ]
  },
  {
    "term": "Batch Inference",
    "category": "Model Deployment & Operations",
    "aliases": ["Batch Prediction", "Offline Inference"],
    "definition": "The process of running model predictions on large datasets in batches, typically used for non-real-time applications and periodic data processing.",
    "related": ["Real-time Inference", "Batch Processing", "Scheduled Jobs", "Data Processing"],
    "tags": ["batch-inference", "batch-processing", "offline-prediction"],
    "references": [
      "https://aws.amazon.com/sagemaker/batch-transform/",
      "https://cloud.google.com/vertex-ai/docs/predictions/batch-predictions"
    ]
  },
  {
    "term": "Model Explainability in Production",
    "category": "Model Deployment & Operations",
    "aliases": ["Production Explainability", "Runtime Explanations"],
    "definition": "The capability to provide explanations for model predictions in production environments, essential for regulatory compliance and user trust.",
    "related": ["Explainable AI", "Model Interpretability", "Compliance", "Trust"],
    "tags": ["production-explainability", "runtime-explanations", "compliance"],
    "references": [
      "https://docs.seldon.io/projects/alibi/en/stable/",
      "https://www.ibm.com/topics/explainable-ai"
    ]
  },

  {
    "term": "Quantum Computing",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Quantum AI", "QC"],
    "definition": "A computing paradigm that uses quantum mechanical phenomena to process information, offering potential advantages for certain AI and optimization problems.",
    "related": ["Quantum Algorithms", "Quantum Machine Learning", "Hardware Innovation", "Computational Advantage"],
    "tags": ["quantum-computing", "quantum-ai", "advanced-computing"],
    "references": [
      "https://en.wikipedia.org/wiki/Quantum_computing",
      "https://quantum-computing.ibm.com/"
    ]
  },
  {
    "term": "Model Compression",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Neural Network Compression"],
    "definition": "Techniques to reduce the size and computational requirements of neural networks while maintaining performance, including pruning, quantization, and knowledge distillation.",
    "related": ["Quantization", "Pruning", "Knowledge Distillation", "Edge Computing"],
    "tags": ["model-compression", "optimization", "efficiency"],
    "references": [
      "https://arxiv.org/abs/1710.09282",
      "https://pytorch.org/tutorials/intermediate/pruning_tutorial.html"
    ]
  },
  {
    "term": "Distributed Training",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Parallel Training", "Multi-GPU Training"],
    "definition": "Training machine learning models across multiple computing devices or nodes to accelerate training and handle larger models and datasets.",
    "related": ["Data Parallel", "Model Parallel", "Gradient Synchronization", "Scalable Training"],
    "tags": ["distributed-training", "parallel-computing", "scalable-training"],
    "references": [
      "https://arxiv.org/abs/1404.5997",
      "https://pytorch.org/tutorials/intermediate/ddp_tutorial.html"
    ]
  },
  {
    "term": "Ray",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Ray Framework"],
    "definition": "An open-source distributed computing framework designed for scaling AI and machine learning workloads across clusters of machines.",
    "related": ["Distributed Computing", "Parallel Processing", "ML Scaling", "Cluster Computing"],
    "tags": ["ray", "distributed-framework", "ml-scaling"],
    "references": [
      "https://www.ray.io/",
      "https://docs.ray.io/en/latest/"
    ]
  },
  {
    "term": "ONNX",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Open Neural Network Exchange"],
    "definition": "An open standard for representing machine learning models, enabling interoperability between different ML frameworks and deployment platforms.",
    "related": ["Model Interoperability", "Framework Compatibility", "Model Exchange", "Standardization"],
    "tags": ["onnx", "interoperability", "model-exchange"],
    "references": [
      "https://onnx.ai/",
      "https://github.com/onnx/onnx"
    ]
  },
  {
    "term": "Triton Inference Server",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["NVIDIA Triton", "Triton"],
    "definition": "An open-source inference serving software that standardizes AI model deployment and execution across different hardware platforms and frameworks.",
    "related": ["Model Serving", "Inference Optimization", "Multi-framework Support", "Production Deployment"],
    "tags": ["triton", "inference-server", "model-serving"],
    "references": [
      "https://developer.nvidia.com/nvidia-triton-inference-server",
      "https://github.com/triton-inference-server/server"
    ]
  },
  {
    "term": "Weights & Biases",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["wandb", "W&B"],
    "definition": "A platform for experiment tracking, model versioning, and collaboration in machine learning projects, providing tools for monitoring and optimizing ML workflows.",
    "related": ["Experiment Tracking", "Model Management", "ML Collaboration", "Performance Monitoring"],
    "tags": ["wandb", "experiment-tracking", "ml-platform"],
    "references": [
      "https://wandb.ai/",
      "https://docs.wandb.ai/"
    ]
  },
  {
    "term": "Model Parallelism",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Model Parallel Training"],
    "definition": "A distributed training technique where different parts of a neural network model are placed on different devices, enabling training of models too large for a single device.",
    "related": ["Distributed Training", "Large Model Training", "Memory Optimization", "Pipeline Parallelism"],
    "tags": ["model-parallelism", "distributed-training", "large-models"],
    "references": [
      "https://arxiv.org/abs/1909.08053",
      "https://pytorch.org/docs/stable/pipeline.html"
    ]
  },
  {
    "term": "Gradient Accumulation",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Gradient Checkpointing"],
    "definition": "A technique to effectively increase batch size by accumulating gradients over multiple forward passes before performing a backward pass, useful for memory-constrained training.",
    "related": ["Memory Optimization", "Batch Size Scaling", "Training Efficiency", "Resource Management"],
    "tags": ["gradient-accumulation", "memory-optimization", "training-efficiency"],
    "references": [
      "https://arxiv.org/abs/1604.06174",
      "https://huggingface.co/docs/transformers/perf_train_gpu_one"
    ]
  },
  {
    "term": "Mixed Precision Training",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["FP16 Training", "Half Precision"],
    "definition": "A training technique that uses both 16-bit and 32-bit floating-point representations to speed up training while maintaining model accuracy.",
    "related": ["Training Acceleration", "Memory Efficiency", "Numerical Precision", "Hardware Optimization"],
    "tags": ["mixed-precision", "fp16", "training-acceleration"],
    "references": [
      "https://arxiv.org/abs/1710.03740",
      "https://pytorch.org/docs/stable/amp.html"
    ]
  },
  {
    "term": "DeepSpeed",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Microsoft DeepSpeed"],
    "definition": "A deep learning optimization library that enables training of very large models with improved efficiency through various optimization techniques and parallelism strategies.",
    "related": ["Large Model Training", "Memory Optimization", "Distributed Training", "Training Acceleration"],
    "tags": ["deepspeed", "large-model-training", "optimization-library"],
    "references": [
      "https://www.deepspeed.ai/",
      "https://github.com/microsoft/DeepSpeed"
    ]
  },

  {
    "term": "AI Safety",
    "category": "Ethics & Governance",
    "aliases": ["Artificial Intelligence Safety"],
    "definition": "The field focused on ensuring AI systems behave safely and beneficially, avoiding harmful or unintended consequences as AI capabilities become more advanced.",
    "related": ["AI Alignment", "Risk Mitigation", "Safe AI", "AI Control"],
    "tags": ["ai-safety", "risk-mitigation", "safe-ai"],
    "references": [
      "https://en.wikipedia.org/wiki/AI_safety",
      "https://www.safe.ai/"
    ]
  },
  {
    "term": "Federated Learning",
    "category": "Ethics & Governance",
    "aliases": ["Collaborative Learning", "Decentralized Learning"],
    "definition": "A machine learning approach that trains models across decentralized data sources without centralizing the data, preserving privacy and data sovereignty.",
    "related": ["Privacy-Preserving ML", "Decentralized AI", "Data Privacy", "Distributed Learning"],
    "tags": ["federated-learning", "privacy-preserving", "decentralized"],
    "references": [
      "https://en.wikipedia.org/wiki/Federated_learning",
      "https://arxiv.org/abs/1602.05629"
    ]
  },
  {
    "term": "AI Ethics Board",
    "category": "Ethics & Governance",
    "aliases": ["Ethics Committee", "AI Review Board"],
    "definition": "An organizational body responsible for reviewing AI projects and ensuring they comply with ethical guidelines and regulatory requirements.",
    "related": ["AI Governance", "Ethical Review", "Compliance", "Organizational Ethics"],
    "tags": ["ethics-board", "governance", "ethical-review"],
    "references": [
      "https://www.ibm.com/topics/ai-ethics",
      "https://www.partnershiponai.org/"
    ]
  },
  {
    "term": "Algorithmic Impact Assessment",
    "category": "Ethics & Governance",
    "aliases": ["AIA", "AI Impact Assessment"],
    "definition": "A systematic evaluation of the potential consequences of algorithmic systems on individuals and society, used to identify and mitigate risks before deployment.",
    "related": ["Risk Assessment", "Social Impact", "Regulatory Compliance", "Impact Evaluation"],
    "tags": ["impact-assessment", "risk-evaluation", "social-impact"],
    "references": [
      "https://www.adalovelaceinstitute.org/report/algorithmic-impact-assessment/",
      "https://arxiv.org/abs/1807.10698"
    ]
  },
  {
    "term": "Data Sovereignty",
    "category": "Ethics & Governance",
    "aliases": ["Information Sovereignty", "Digital Sovereignty"],
    "definition": "The concept that data is subject to the laws and governance structures of the country or jurisdiction where it is collected or processed.",
    "related": ["Data Governance", "Privacy Rights", "Regulatory Compliance", "Jurisdictional Control"],
    "tags": ["data-sovereignty", "jurisdictional-control", "data-governance"],
    "references": [
      "https://en.wikipedia.org/wiki/Data_sovereignty",
      "https://www.oecd.org/digital/data-governance/"
    ]
  },
  {
    "term": "Algorithmic Transparency",
    "category": "Ethics & Governance",
    "aliases": ["AI Transparency", "System Transparency"],
    "definition": "The principle that AI systems should be open and understandable to stakeholders, providing clarity about how decisions are made and systems operate.",
    "related": ["Explainable AI", "Accountability", "Right to Explanation", "Open Systems"],
    "tags": ["transparency", "openness", "system-clarity"],
    "references": [
      "https://www.brookings.edu/research/algorithmic-transparency-for-the-smart-city/",
      "https://arxiv.org/abs/1811.10154"
    ]
  },
  {
    "term": "AI Risk Management",
    "category": "Ethics & Governance",
    "aliases": ["ML Risk Management", "AI Risk Assessment"],
    "definition": "The systematic identification, assessment, and mitigation of risks associated with AI system development, deployment, and operation.",
    "related": ["Risk Assessment", "Safety Protocols", "Compliance", "Governance"],
    "tags": ["risk-management", "safety-protocols", "risk-mitigation"],
    "references": [
      "https://www.nist.gov/itl/ai-risk-management-framework",
      "https://www.iso.org/standard/74438.html"
    ]
  },
  {
    "term": "Stakeholder Engagement",
    "category": "Ethics & Governance",
    "aliases": ["Community Engagement", "Participatory AI"],
    "definition": "The process of involving relevant stakeholders in AI development and governance decisions to ensure diverse perspectives and interests are considered.",
    "related": ["Participatory Design", "Community Input", "Democratic AI", "Inclusive Development"],
    "tags": ["stakeholder-engagement", "participatory-design", "inclusive-ai"],
    "references": [
      "https://www.partnershiponai.org/about/#mission",
      "https://arxiv.org/abs/2009.10250"
    ]
  },
  {
    "term": "AI Incident Response",
    "category": "Ethics & Governance",
    "aliases": ["AI Incident Management", "Algorithmic Incident Response"],
    "definition": "Procedures and protocols for responding to AI system failures, biases, or harmful outcomes, including investigation, remediation, and prevention measures.",
    "related": ["Incident Management", "Crisis Response", "System Recovery", "Damage Control"],
    "tags": ["incident-response", "crisis-management", "system-recovery"],
    "references": [
      "https://incidentdatabase.ai/",
      "https://arxiv.org/abs/2002.07871"
    ]
  },
  {
    "term": "Ethical AI Design",
    "category": "Ethics & Governance",
    "aliases": ["Values by Design", "Ethics by Design"],
    "definition": "An approach to AI development that incorporates ethical considerations and human values from the earliest stages of system design and throughout the development lifecycle.",
    "related": ["Value-sensitive Design", "Human-centered AI", "Responsible Innovation", "Ethical Engineering"],
    "tags": ["ethical-design", "values-by-design", "responsible-innovation"],
    "references": [
      "https://www.acm.org/code-of-ethics",
      "https://arxiv.org/abs/1906.12230"
    ]
  },

  {
    "term": "Medical Imaging AI",
    "category": "Applied AI Domains",
    "aliases": ["Radiology AI", "Medical Image Analysis"],
    "definition": "AI systems specialized for analyzing medical images such as X-rays, MRIs, and CT scans to assist in diagnosis, treatment planning, and medical research.",
    "related": ["Computer Vision", "Healthcare AI", "Diagnostic AI", "Medical Diagnosis"],
    "tags": ["medical-imaging", "diagnostic-ai", "radiology"],
    "references": [
      "https://en.wikipedia.org/wiki/Artificial_intelligence_in_healthcare",
      "https://www.nature.com/articles/s41591-018-0300-7"
    ]
  },
  {
    "term": "Predictive Maintenance",
    "category": "Applied AI Domains",
    "aliases": ["Condition Monitoring", "PdM"],
    "definition": "The use of AI to predict when equipment or machinery will require maintenance, optimizing maintenance schedules and preventing unexpected failures.",
    "related": ["Industrial AI", "IoT Sensors", "Anomaly Detection", "Smart Manufacturing"],
    "tags": ["predictive-maintenance", "industrial-ai", "equipment-monitoring"],
    "references": [
      "https://en.wikipedia.org/wiki/Predictive_maintenance",
      "https://www.ibm.com/topics/predictive-maintenance"
    ]
  },
  {
    "term": "Algorithmic Trading",
    "category": "Applied AI Domains",
    "aliases": ["Automated Trading", "AI Trading"],
    "definition": "The use of AI algorithms to execute trading decisions in financial markets, analyzing market data and executing trades at high speed and frequency.",
    "related": ["Financial AI", "Quantitative Finance", "High-frequency Trading", "Market Analysis"],
    "tags": ["algorithmic-trading", "fintech", "automated-trading"],
    "references": [
      "https://en.wikipedia.org/wiki/Algorithmic_trading",
      "https://www.investopedia.com/articles/active-trading/101014/basics-algorithmic-trading-concepts-and-examples.asp"
    ]
  },
  {
    "term": "Content Moderation AI",
    "category": "Applied AI Domains",
    "aliases": ["Automated Moderation", "Content Filtering"],
    "definition": "AI systems designed to automatically detect and filter inappropriate, harmful, or policy-violating content across digital platforms and social media.",
    "related": ["Computer Vision", "Natural Language Processing", "Safety Systems", "Platform Governance"],
    "tags": ["content-moderation", "safety-systems", "automated-filtering"],
    "references": [
      "https://www.brookings.edu/research/how-to-deal-with-ai-enabled-disinformation/",
      "https://arxiv.org/abs/2103.14749"
    ]
  },
  {
    "term": "Supply Chain Optimization",
    "category": "Applied AI Domains",
    "aliases": ["Logistics AI", "Supply Chain AI"],
    "definition": "The application of AI to optimize supply chain operations, including demand forecasting, inventory management, and logistics planning.",
    "related": ["Operations Research", "Demand Forecasting", "Inventory Management", "Logistics"],
    "tags": ["supply-chain", "logistics-optimization", "operations-ai"],
    "references": [
      "https://www.mckinsey.com/capabilities/operations/our-insights/supply-chain-40-the-next-generation-digital-supply-chain",
      "https://www.ibm.com/topics/supply-chain-management"
    ]
  },
  {
    "term": "Educational AI",
    "category": "Applied AI Domains",
    "aliases": ["EdTech AI", "AI in Education"],
    "definition": "AI applications in education including personalized learning, intelligent tutoring systems, and automated assessment to enhance learning outcomes.",
    "related": ["Personalized Learning", "Adaptive Learning", "Intelligent Tutoring", "Learning Analytics"],
    "tags": ["educational-ai", "edtech", "personalized-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Artificial_intelligence_in_education",
      "https://www.unesco.org/en/artificial-intelligence/recommendation-ethics"
    ]
  },
  {
    "term": "Smart City AI",
    "category": "Applied AI Domains",
    "aliases": ["Urban AI", "City Intelligence"],
    "definition": "AI systems used in urban planning and management, including traffic optimization, energy management, and public service delivery in smart cities.",
    "related": ["Urban Planning", "IoT Integration", "Traffic Management", "Energy Optimization"],
    "tags": ["smart-city", "urban-ai", "city-management"],
    "references": [
      "https://en.wikipedia.org/wiki/Smart_city",
      "https://www.mckinsey.com/capabilities/mckinsey-digital/our-insights/smart-cities-digital-solutions-for-a-more-livable-future"
    ]
  },
  {
    "term": "Sports Analytics AI",
    "category": "Applied AI Domains",
    "aliases": ["Sports AI", "Athletic Performance AI"],
    "definition": "AI applications in sports for performance analysis, strategy optimization, injury prevention, and fan engagement through data-driven insights.",
    "related": ["Performance Analytics", "Computer Vision", "Predictive Analytics", "Biomechanics"],
    "tags": ["sports-analytics", "performance-ai", "athletic-optimization"],
    "references": [
      "https://www.ibm.com/topics/sports-analytics",
      "https://www.nature.com/articles/s41598-020-68623-9"
    ]
  },
  {
    "term": "Energy Management AI",
    "category": "Applied AI Domains",
    "aliases": ["Smart Grid AI", "Energy Optimization"],
    "definition": "AI systems for optimizing energy production, distribution, and consumption in smart grids and renewable energy systems.",
    "related": ["Smart Grid", "Renewable Energy", "Energy Efficiency", "Grid Optimization"],
    "tags": ["energy-management", "smart-grid", "energy-optimization"],
    "references": [
      "https://www.iea.org/reports/digitalization-and-energy",
      "https://www.nature.com/articles/s41560-018-0137-6"
    ]
  },
  {
    "term": "Customer Service AI",
    "category": "Applied AI Domains",
    "aliases": ["AI Customer Support", "Conversational AI"],
    "definition": "AI-powered systems for customer service including chatbots, virtual assistants, and automated support systems that handle customer inquiries and issues.",
    "related": ["Chatbot", "Virtual Assistant", "Natural Language Processing", "Customer Experience"],
    "tags": ["customer-service", "conversational-ai", "support-automation"],
    "references": [
      "https://www.zendesk.com/blog/conversational-ai/",
      "https://www.salesforce.com/resources/articles/chatbot/"
    ]
  },
  {
    "term": "Adaptive Retrieval",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Dynamic Retrieval", "Conditional Retrieval"],
    "definition": "Retrieval systems that dynamically decide when and what to retrieve based on the current context and generation needs, optimizing retrieval timing.",
    "related": ["RAG", "Dynamic Systems", "Conditional Computation", "Context-Aware Retrieval"],
    "tags": ["adaptive-retrieval", "dynamic-search", "conditional-retrieval"],
    "references": [
      "https://arxiv.org/abs/2212.10496",
      "https://github.com/jzbjyb/FLARE"
    ]
  },
  {
    "term": "FAISS",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Facebook AI Similarity Search", "Vector Index"],
    "definition": "A library for efficient similarity search and clustering of dense vectors, enabling fast nearest neighbor search in high-dimensional spaces.",
    "related": ["Vector Search", "Approximate Nearest Neighbor", "Similarity Search", "Index Optimization"],
    "tags": ["faiss", "vector-index", "similarity-search"],
    "references": [
      "https://github.com/facebookresearch/faiss",
      "https://arxiv.org/abs/1702.08734"
    ]
  },
  {
    "term": "Knowledge Graph Completion",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Link Prediction", "KG Completion"],
    "definition": "The task of predicting missing entities or relationships in knowledge graphs based on existing graph structure and entity embeddings.",
    "related": ["Knowledge Graph", "Link Prediction", "Graph Neural Networks", "Embedding Models"],
    "tags": ["kg-completion", "link-prediction", "graph-reasoning"],
    "references": [
      "https://arxiv.org/abs/1503.00759",
      "https://github.com/DeepGraphLearning/KnowledgeGraphEmbedding"
    ]
  },
  {
    "term": "Contextual Retrieval",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Context-Aware Search", "Situated Retrieval"],
    "definition": "Retrieval methods that consider the current conversation context, user state, and situational factors to provide more relevant and personalized results.",
    "related": ["Personalization", "Context Awareness", "Conversational Search", "User Modeling"],
    "tags": ["contextual-retrieval", "context-aware", "personalized-search"],
    "references": [
      "https://arxiv.org/abs/2407.01219",
      "https://www.anthropic.com/news/contextual-retrieval"
    ]
  },
  {
    "term": "Fusion-in-Decoder",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["FiD", "Multi-Document Fusion"],
    "definition": "An architecture that independently encodes multiple retrieved documents and fuses them in the decoder, enabling effective multi-document reasoning.",
    "related": ["Multi-Document QA", "Document Fusion", "Encoder-Decoder", "Information Integration"],
    "tags": ["fusion-in-decoder", "multi-document", "information-fusion"],
    "references": [
      "https://arxiv.org/abs/2007.01282",
      "https://github.com/facebookresearch/FiD"
    ]
  },
  {
    "term": "Retrieval-Augmented Training",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["RAT", "Retrieval-Enhanced Training"],
    "definition": "Training paradigms that incorporate retrieval during the training process itself, teaching models to effectively use external knowledge from the beginning.",
    "related": ["RAG", "Training Methodology", "External Knowledge", "Curriculum Learning"],
    "tags": ["retrieval-training", "augmented-training", "knowledge-integration"],
    "references": [
      "https://arxiv.org/abs/2203.08913",
      "https://github.com/microsoft/REPLUG"
    ]
  },

  {
    "term": "Multi-Agent Orchestration",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Coordination", "Swarm Coordination"],
    "definition": "The systematic coordination and management of multiple AI agents working together, including task allocation, communication protocols, and conflict resolution.",
    "related": ["Multi-Agent System", "Task Allocation", "Agent Communication", "Distributed Problem Solving"],
    "tags": ["multi-agent-orchestration", "coordination", "distributed-ai"],
    "references": [
      "https://arxiv.org/abs/2308.10379",
      "https://blog.langchain.dev/langgraph-multi-agent-workflows/"
    ]
  },
  {
    "term": "Agent Memory Systems",
    "category": "AI Agents & Autonomy",
    "aliases": ["Persistent Memory", "Agent State Management"],
    "definition": "Memory architectures that enable AI agents to store, retrieve, and update information across interactions, maintaining long-term context and learning.",
    "related": ["Memory Management", "Context Preservation", "Long-term Memory", "State Persistence"],
    "tags": ["agent-memory", "persistent-state", "long-term-context"],
    "references": [
      "https://arxiv.org/abs/2307.09288",
      "https://langchain-ai.github.io/langgraph/concepts/memory/"
    ]
  },
  {
    "term": "Tool-Using Agents",
    "category": "AI Agents & Autonomy",
    "aliases": ["Tool-Augmented Agents", "API-Enhanced Agents"],
    "definition": "AI agents that can discover, select, and effectively use external tools and APIs to expand their capabilities beyond their base training.",
    "related": ["Tool Use", "Function Calling", "External APIs", "Capability Extension"],
    "tags": ["tool-using-agents", "api-integration", "capability-extension"],
    "references": [
      "https://arxiv.org/abs/2302.04761",
      "https://platform.openai.com/docs/guides/function-calling"
    ]
  },
  {
    "term": "Hierarchical Agents",
    "category": "AI Agents & Autonomy",
    "aliases": ["Hierarchical Multi-Agent Systems", "Layered Agents"],
    "definition": "Agent architectures organized in hierarchical structures where higher-level agents coordinate and direct lower-level agents for complex task decomposition.",
    "related": ["Task Decomposition", "Hierarchical Planning", "Agent Hierarchies", "Organizational Structure"],
    "tags": ["hierarchical-agents", "task-decomposition", "agent-hierarchies"],
    "references": [
      "https://arxiv.org/abs/2308.10848",
      "https://blog.langchain.dev/langgraph-multi-agent-workflows/"
    ]
  },
  {
    "term": "Agentic Workflows",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent-Based Workflows", "Autonomous Workflows"],
    "definition": "Structured processes where AI agents autonomously execute complex workflows, making decisions and adapting to changing conditions without human intervention.",
    "related": ["Workflow Automation", "Process Automation", "Autonomous Execution", "Dynamic Adaptation"],
    "tags": ["agentic-workflows", "autonomous-processes", "workflow-automation"],
    "references": [
      "https://langchain-ai.github.io/langgraph/tutorials/workflows/",
      "https://www.anthropic.com/news/claude-3-model-card"
    ]
  },
  {
    "term": "Agent Planning",
    "category": "AI Agents & Autonomy",
    "aliases": ["Autonomous Planning", "AI Planning"],
    "definition": "The ability of AI agents to create and execute plans to achieve goals, including task sequencing, resource allocation, and contingency planning.",
    "related": ["Planning Algorithms", "Goal-Oriented Behavior", "Task Sequencing", "Strategic Thinking"],
    "tags": ["agent-planning", "autonomous-planning", "goal-achievement"],
    "references": [
      "https://arxiv.org/abs/2309.02427",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/planning.pdf"
    ]
  },
  {
    "term": "Human-Agent Collaboration",
    "category": "AI Agents & Autonomy",
    "aliases": ["Human-AI Teaming", "Collaborative Intelligence"],
    "definition": "Frameworks and methodologies for effective collaboration between humans and AI agents, leveraging complementary strengths and managing handoffs.",
    "related": ["Human-in-the-Loop", "Collaborative AI", "Human-AI Interface", "Team Coordination"],
    "tags": ["human-agent-collaboration", "collaborative-intelligence", "human-ai-teaming"],
    "references": [
      "https://arxiv.org/abs/2108.00941",
      "https://www.microsoft.com/en-us/research/project/human-ai-collaboration/"
    ]
  },
  {
    "term": "Agent Safety",
    "category": "AI Agents & Autonomy",
    "aliases": ["Safe Agents", "Agent Risk Management"],
    "definition": "Principles and techniques for ensuring AI agents operate safely and reliably, including containment, monitoring, and fail-safe mechanisms.",
    "related": ["AI Safety", "Risk Management", "Agent Monitoring", "Safe Deployment"],
    "tags": ["agent-safety", "safe-deployment", "risk-management"],
    "references": [
      "https://arxiv.org/abs/2312.06942",
      "https://www.safe.ai/agent-safety"
    ]
  },
  {
    "term": "Self-Modifying Agents",
    "category": "AI Agents & Autonomy",
    "aliases": ["Adaptive Agents", "Self-Improving Agents"],
    "definition": "AI agents capable of modifying their own code, strategies, or parameters to improve performance, representing advanced forms of autonomous adaptation.",
    "related": ["Self-Improvement", "Meta-Learning", "Adaptive Systems", "Autonomous Evolution"],
    "tags": ["self-modifying", "adaptive-agents", "autonomous-improvement"],
    "references": [
      "https://arxiv.org/abs/2310.10737",
      "https://www.anthropic.com/news/self-improving-ai"
    ]
  },
  {
    "term": "Agent Communication Protocols",
    "category": "AI Agents & Autonomy",
    "aliases": ["Inter-Agent Communication", "Agent Messaging"],
    "definition": "Standardized methods and protocols for AI agents to communicate, share information, and coordinate actions in multi-agent environments.",
    "related": ["Multi-Agent Communication", "Message Passing", "Protocol Design", "Information Sharing"],
    "tags": ["agent-communication", "protocols", "inter-agent-messaging"],
    "references": [
      "https://arxiv.org/abs/2402.14916",
      "https://www.fipa.org/repository/aclspecs.html"
    ]
  },

  {
    "term": "Stream Processing",
    "category": "Data Engineering for AI",
    "aliases": ["Real-time Processing", "Event Stream Processing"],
    "definition": "Computing paradigm for processing continuous streams of data in real-time, enabling immediate analysis and response to incoming data events.",
    "related": ["Real-time Analytics", "Apache Kafka", "Event-driven Architecture", "Continuous Processing"],
    "tags": ["stream-processing", "real-time", "continuous-data"],
    "references": [
      "https://kafka.apache.org/documentation/streams/",
      "https://en.wikipedia.org/wiki/Stream_processing"
    ]
  },
  {
    "term": "Data Mesh",
    "category": "Data Engineering for AI",
    "aliases": ["Decentralized Data Architecture"],
    "definition": "A decentralized approach to data architecture that treats data as a product, with domain-oriented ownership and federated governance.",
    "related": ["Domain-driven Design", "Data Products", "Decentralized Architecture", "Data Governance"],
    "tags": ["data-mesh", "decentralized-data", "domain-oriented"],
    "references": [
      "https://martinfowler.com/articles/data-mesh-principles.html",
      "https://www.datamesh-architecture.com/"
    ]
  },
  {
    "term": "Feature Engineering",
    "category": "Data Engineering for AI",
    "aliases": ["Feature Creation", "Feature Extraction"],
    "definition": "The process of selecting, modifying, or creating features from raw data to improve machine learning model performance and interpretability.",
    "related": ["Feature Selection", "Data Preprocessing", "Domain Knowledge", "Model Performance"],
    "tags": ["feature-engineering", "feature-creation", "data-transformation"],
    "references": [
      "https://www.kaggle.com/learn/feature-engineering",
      "https://scikit-learn.org/stable/modules/preprocessing.html"
    ]
  },
  {
    "term": "Data Lineage",
    "category": "Data Engineering for AI",
    "aliases": ["Data Provenance", "Data Traceability"],
    "definition": "The documentation and tracking of data from its origin through transformations to final consumption, providing visibility into data flow and dependencies.",
    "related": ["Data Governance", "Data Observability", "Audit Trail", "Compliance"],
    "tags": ["data-lineage", "data-provenance", "traceability"],
    "references": [
      "https://openlineage.io/",
      "https://en.wikipedia.org/wiki/Data_lineage"
    ]
  },
  {
    "term": "Data Quality Assessment",
    "category": "Data Engineering for AI",
    "aliases": ["Data Validation", "Quality Monitoring"],
    "definition": "Systematic evaluation of data accuracy, completeness, consistency, and reliability to ensure high-quality inputs for AI model training and inference.",
    "related": ["Data Quality", "Data Validation", "Quality Metrics", "Data Monitoring"],
    "tags": ["data-quality", "validation", "quality-assessment"],
    "references": [
      "https://greatexpectations.io/",
      "https://www.ibm.com/topics/data-quality"
    ]
  },
  {
    "term": "Vector Embeddings Pipeline",
    "category": "Data Engineering for AI",
    "aliases": ["Embedding Pipeline", "Vector Processing"],
    "definition": "End-to-end workflows for creating, storing, and managing vector embeddings at scale, including embedding generation, indexing, and serving.",
    "related": ["Vector Database", "Embedding Generation", "Data Pipeline", "Similarity Search"],
    "tags": ["embedding-pipeline", "vector-processing", "embedding-workflow"],
    "references": [
      "https://www.pinecone.io/learn/data-pipelines/",
      "https://weaviate.io/developers/weaviate/tutorials/pipelines"
    ]
  },
  {
    "term": "Change Data Capture",
    "category": "Data Engineering for AI",
    "aliases": ["CDC", "Data Change Tracking"],
    "definition": "Technology for identifying and capturing changes in data sources to enable real-time data synchronization and incremental processing.",
    "related": ["Real-time Processing", "Data Synchronization", "Event Streaming", "Incremental Updates"],
    "tags": ["change-data-capture", "real-time-sync", "incremental-processing"],
    "references": [
      "https://debezium.io/",
      "https://en.wikipedia.org/wiki/Change_data_capture"
    ]
  },
  {
    "term": "Data Contracts",
    "category": "Data Engineering for AI",
    "aliases": ["Data SLA", "Data Agreements"],
    "definition": "Formal agreements that define expectations for data quality, schema, and delivery between data producers and consumers in data systems.",
    "related": ["Data Governance", "Schema Management", "Service Level Agreements", "Data Standards"],
    "tags": ["data-contracts", "data-sla", "quality-agreements"],
    "references": [
      "https://datacontract.com/",
      "https://www.montecarlodata.com/blog-data-contracts/"
    ]
  },
  {
    "term": "MLOps Pipeline",
    "category": "Data Engineering for AI",
    "aliases": ["ML Pipeline", "Machine Learning Pipeline"],
    "definition": "Automated workflows that manage the complete machine learning lifecycle from data ingestion through model deployment and monitoring.",
    "related": ["MLOps", "CI/CD", "Model Deployment", "Automated ML"],
    "tags": ["mlops-pipeline", "ml-automation", "model-lifecycle"],
    "references": [
      "https://www.databricks.com/glossary/mlops-pipeline",
      "https://ml-ops.org/"
    ]
  },
  {
    "term": "Synthetic Data Generation",
    "category": "Data Engineering for AI",
    "aliases": ["Artificial Data Creation", "Data Synthesis"],
    "definition": "Techniques for creating artificial datasets that mimic real data characteristics while preserving privacy and enabling data augmentation.",
    "related": ["Data Augmentation", "Privacy Protection", "Generative Models", "Training Data"],
    "tags": ["synthetic-data", "data-synthesis", "privacy-preserving"],
    "references": [
      "https://arxiv.org/abs/2205.06564",
      "https://www.ibm.com/topics/synthetic-data"
    ]
  },

  {
    "term": "Model Performance Tracking",
    "category": "Model Deployment & Operations",
    "aliases": ["Performance Monitoring", "Model Analytics"],
    "definition": "Continuous monitoring and analysis of deployed model performance metrics including accuracy, latency, throughput, and business impact.",
    "related": ["Model Monitoring", "Performance Metrics", "Analytics", "Production Health"],
    "tags": ["performance-tracking", "model-analytics", "production-monitoring"],
    "references": [
      "https://www.evidentlyai.com/blog/ml-monitoring-metrics",
      "https://neptune.ai/blog/ml-model-monitoring-best-tools"
    ]
  },
  {
    "term": "Gradual Rollout",
    "category": "Model Deployment & Operations",
    "aliases": ["Progressive Deployment", "Phased Rollout"],
    "definition": "Deployment strategy that gradually increases the percentage of traffic served by a new model version, enabling safe and controlled releases.",
    "related": ["Canary Deployment", "Blue-Green Deployment", "Risk Mitigation", "Safe Deployment"],
    "tags": ["gradual-rollout", "progressive-deployment", "safe-release"],
    "references": [
      "https://martinfowler.com/bliki/CanaryRelease.html",
      "https://docs.seldon.io/projects/seldon-core/en/latest/"
    ]
  },
  {
    "term": "Model Serving Infrastructure",
    "category": "Model Deployment & Operations",
    "aliases": ["Inference Infrastructure", "Serving Platform"],
    "definition": "Scalable infrastructure platforms designed specifically for serving machine learning models in production with high availability and performance.",
    "related": ["Model Serving", "Infrastructure", "Scalability", "High Availability"],
    "tags": ["serving-infrastructure", "model-platform", "production-infrastructure"],
    "references": [
      "https://www.tensorflow.org/tfx/guide/serving",
      "https://developer.nvidia.com/nvidia-triton-inference-server"
    ]
  },
  {
    "term": "Prediction Caching",
    "category": "Model Deployment & Operations",
    "aliases": ["Inference Caching", "Result Caching"],
    "definition": "Optimization technique that stores and reuses model predictions for identical or similar inputs to reduce computational cost and latency.",
    "related": ["Performance Optimization", "Latency Reduction", "Caching Strategy", "Cost Optimization"],
    "tags": ["prediction-caching", "inference-optimization", "latency-reduction"],
    "references": [
      "https://arxiv.org/abs/2306.04384",
      "https://www.databricks.com/blog/2023/07/07/optimizing-inference-performance-caching.html"
    ]
  },
  {
    "term": "Model Warm-up",
    "category": "Model Deployment & Operations",
    "aliases": ["Inference Warm-up", "Model Preloading"],
    "definition": "Process of preparing models for production by pre-loading weights, compiling operations, and optimizing runtime performance before serving traffic.",
    "related": ["Performance Optimization", "Cold Start", "Model Loading", "Runtime Optimization"],
    "tags": ["model-warm-up", "performance-optimization", "cold-start-mitigation"],
    "references": [
      "https://www.tensorflow.org/tfx/serving/serving_config#model_warmup",
      "https://docs.aws.amazon.com/sagemaker/latest/dg/model-warm-up.html"
    ]
  },
  {
    "term": "Auto-scaling",
    "category": "Model Deployment & Operations",
    "aliases": ["Dynamic Scaling", "Elastic Scaling"],
    "definition": "Automatic adjustment of computational resources based on traffic patterns and performance metrics to maintain optimal service levels.",
    "related": ["Load Balancing", "Resource Management", "Cost Optimization", "Performance Management"],
    "tags": ["auto-scaling", "dynamic-scaling", "resource-management"],
    "references": [
      "https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/",
      "https://docs.aws.amazon.com/autoscaling/"
    ]
  },
  {
    "term": "Circuit Breaker Pattern",
    "category": "Model Deployment & Operations",
    "aliases": ["Fault Tolerance", "Failure Handling"],
    "definition": "Design pattern that prevents cascading failures by automatically stopping requests to failing services and providing fallback responses.",
    "related": ["Fault Tolerance", "Error Handling", "System Resilience", "Fallback Mechanisms"],
    "tags": ["circuit-breaker", "fault-tolerance", "system-resilience"],
    "references": [
      "https://martinfowler.com/bliki/CircuitBreaker.html",
      "https://docs.microsoft.com/en-us/azure/architecture/patterns/circuit-breaker"
    ]
  },
  {
    "term": "Health Checks",
    "category": "Model Deployment & Operations",
    "aliases": ["Service Health", "Readiness Probes"],
    "definition": "Automated tests that continuously verify model service health, availability, and readiness to handle requests in production environments.",
    "related": ["Service Monitoring", "Health Monitoring", "Availability", "System Status"],
    "tags": ["health-checks", "service-monitoring", "availability-monitoring"],
    "references": [
      "https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
      "https://microservices.io/patterns/observability/health-check-api.html"
    ]
  },
  {
    "term": "Model Artifacts Management",
    "category": "Model Deployment & Operations",
    "aliases": ["Artifact Storage", "Model Asset Management"],
    "definition": "Systems and processes for storing, versioning, and managing model files, metadata, and dependencies throughout the deployment lifecycle.",
    "related": ["Model Versioning", "Asset Management", "Dependency Management", "Storage Systems"],
    "tags": ["artifact-management", "model-storage", "version-control"],
    "references": [
      "https://mlflow.org/docs/latest/model-registry.html",
      "https://dvc.org/doc/use-cases/versioning-data-and-models"
    ]
  },
  {
    "term": "Multi-Model Serving",
    "category": "Model Deployment & Operations",
    "aliases": ["Model Ensemble Serving", "Multiple Model Deployment"],
    "definition": "Infrastructure capability to host and serve multiple models simultaneously, enabling model ensembles, A/B testing, and multi-tenant deployments.",
    "related": ["Ensemble Methods", "A/B Testing", "Multi-Tenancy", "Resource Sharing"],
    "tags": ["multi-model-serving", "ensemble-serving", "multi-tenant"],
    "references": [
      "https://www.tensorflow.org/tfx/serving/serving_config#serving_multiple_models",
      "https://docs.seldon.io/projects/seldon-core/en/latest/analytics/analytics.html"
    ]
  },

  {
    "term": "TPU",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Tensor Processing Unit", "Google TPU"],
    "definition": "Google's custom-designed application-specific integrated circuits (ASICs) optimized for machine learning workloads, offering high performance for training and inference.",
    "related": ["GPU Computing", "Hardware Acceleration", "Specialized Hardware", "ML Acceleration"],
    "tags": ["tpu", "hardware-acceleration", "ml-asic"],
    "references": [
      "https://cloud.google.com/tpu",
      "https://en.wikipedia.org/wiki/Tensor_Processing_Unit"
    ]
  },
  {
    "term": "FP8 Training",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["8-bit Floating Point", "Ultra-Low Precision"],
    "definition": "Training technique using 8-bit floating-point representations to further reduce memory usage and increase training speed while maintaining model quality.",
    "related": ["Mixed Precision Training", "Quantization", "Memory Optimization", "Training Acceleration"],
    "tags": ["fp8-training", "ultra-low-precision", "memory-efficient"],
    "references": [
      "https://arxiv.org/abs/2209.05433",
      "https://developer.nvidia.com/blog/fp8-formats-for-deep-learning/"
    ]
  },
  {
    "term": "ZeRO Optimizer",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["ZeRO", "Zero Redundancy Optimizer"],
    "definition": "Memory optimization technique that eliminates redundancy in optimizer states, gradients, and parameters across distributed training to enable larger model training.",
    "related": ["Distributed Training", "Memory Optimization", "DeepSpeed", "Large Model Training"],
    "tags": ["zero-optimizer", "memory-optimization", "distributed-training"],
    "references": [
      "https://arxiv.org/abs/1910.02054",
      "https://www.deepspeed.ai/tutorials/zero/"
    ]
  },
  {
    "term": "Model Sharding",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Parameter Sharding", "Weight Sharding"],
    "definition": "Technique of splitting large model parameters across multiple devices or nodes to enable training and inference of models too large for single devices.",
    "related": ["Model Parallelism", "Distributed Training", "Large Models", "Parameter Distribution"],
    "tags": ["model-sharding", "parameter-distribution", "large-model-support"],
    "references": [
      "https://huggingface.co/docs/transformers/main_classes/sharded_checkpoint",
      "https://pytorch.org/docs/stable/fsdp.html"
    ]
  },
  {
    "term": "Activation Checkpointing",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Gradient Checkpointing", "Memory Recomputation"],
    "definition": "Memory optimization technique that trades computation for memory by recomputing intermediate activations during backpropagation instead of storing them.",
    "related": ["Memory Optimization", "Gradient Computation", "Training Efficiency", "Resource Management"],
    "tags": ["activation-checkpointing", "memory-recomputation", "training-optimization"],
    "references": [
      "https://arxiv.org/abs/1604.06174",
      "https://pytorch.org/docs/stable/checkpoint.html"
    ]
  },
  {
    "term": "Pipeline Parallelism",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Model Pipeline", "Layer Pipelining"],
    "definition": "Parallelization strategy that divides a model into sequential stages across devices, enabling pipeline execution for improved throughput.",
    "related": ["Model Parallelism", "Distributed Training", "Pipeline Execution", "Throughput Optimization"],
    "tags": ["pipeline-parallelism", "model-pipelining", "throughput-optimization"],
    "references": [
      "https://pytorch.org/docs/stable/pipeline.html",
      "https://arxiv.org/abs/1909.08053"
    ]
  },
  {
    "term": "Inference Engines",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Runtime Engines", "Inference Runtime"],
    "definition": "Specialized software systems optimized for executing trained models efficiently in production, providing high-performance inference capabilities.",
    "related": ["Model Serving", "Runtime Optimization", "Performance Optimization", "Production Deployment"],
    "tags": ["inference-engines", "runtime-optimization", "production-inference"],
    "references": [
      "https://onnxruntime.ai/",
      "https://developer.nvidia.com/tensorrt"
    ]
  },
  {
    "term": "Model Optimization Toolkit",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Optimization Tools", "Model Accelerator"],
    "definition": "Software tools and frameworks that optimize trained models for deployment through techniques like quantization, pruning, and graph optimization.",
    "related": ["Model Optimization", "Quantization", "Pruning", "Deployment Optimization"],
    "tags": ["optimization-toolkit", "model-acceleration", "deployment-optimization"],
    "references": [
      "https://www.tensorflow.org/model_optimization",
      "https://pytorch.org/tutorials/recipes/recipes/tuning_guide.html"
    ]
  },
  {
    "term": "Distributed File Systems",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["DFS", "Distributed Storage"],
    "definition": "Storage systems that distribute data across multiple machines to provide scalable, fault-tolerant storage for large-scale AI workloads and datasets.",
    "related": ["Data Storage", "Scalable Storage", "Fault Tolerance", "Big Data"],
    "tags": ["distributed-storage", "scalable-storage", "fault-tolerant"],
    "references": [
      "https://hadoop.apache.org/docs/r1.2.1/hdfs_design.html",
      "https://en.wikipedia.org/wiki/Distributed_file_system"
    ]
  },
  {
    "term": "Cluster Management",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Resource Management", "Workload Orchestration"],
    "definition": "Systems for managing computational resources across clusters of machines, including job scheduling, resource allocation, and workload distribution.",
    "related": ["Resource Allocation", "Job Scheduling", "Cluster Computing", "Workload Management"],
    "tags": ["cluster-management", "resource-orchestration", "workload-scheduling"],
    "references": [
      "https://kubernetes.io/docs/concepts/overview/",
      "https://slurm.schedmd.com/overview.html"
    ]
  },

  {
    "term": "AI Auditing",
    "category": "Ethics & Governance",
    "aliases": ["Algorithm Auditing", "Model Auditing"],
    "definition": "Systematic examination of AI systems to assess compliance with ethical guidelines, legal requirements, and performance standards.",
    "related": ["Compliance", "Ethical AI", "Model Validation", "Risk Assessment"],
    "tags": ["ai-auditing", "compliance", "ethical-assessment"],
    "references": [
      "https://www.brookings.edu/research/auditing-algorithms-the-existing-landscape-obstacles-and-recommendations/",
      "https://arxiv.org/abs/1811.10154"
    ]
  },
  {
    "term": "AI Impact Assessment",
    "category": "Ethics & Governance",
    "aliases": ["Algorithmic Impact Assessment", "AIA"],
    "definition": "Systematic evaluation of the potential consequences and risks of AI systems on individuals, communities, and society before deployment.",
    "related": ["Risk Assessment", "Social Impact", "Ethical Evaluation", "Impact Analysis"],
    "tags": ["impact-assessment", "risk-evaluation", "social-impact"],
    "references": [
      "https://www.adalovelaceinstitute.org/report/algorithmic-impact-assessment/",
      "https://arxiv.org/abs/1807.10698"
    ]
  },
  {
    "term": "Data Protection by Design",
    "category": "Ethics & Governance",
    "aliases": ["Privacy by Design", "Built-in Privacy"],
    "definition": "Approach that embeds privacy and data protection considerations into the design and architecture of AI systems from the outset.",
    "related": ["Privacy Protection", "GDPR", "Data Privacy", "System Design"],
    "tags": ["privacy-by-design", "data-protection", "built-in-privacy"],
    "references": [
      "https://gdpr.eu/privacy-by-design/",
      "https://iapp.org/resources/article/privacy-by-design-the-7-foundational-principles/"
    ]
  },
  {
    "term": "Algorithmic Accountability",
    "category": "Ethics & Governance",
    "aliases": ["AI Accountability", "System Accountability"],
    "definition": "The principle that individuals and organizations should be responsible for algorithmic decisions and able to explain and justify AI system outcomes.",
    "related": ["Accountability", "Transparency", "Explainable AI", "Responsibility"],
    "tags": ["algorithmic-accountability", "responsibility", "transparency"],
    "references": [
      "https://www.partnershiponai.org/about/#mission",
      "https://arxiv.org/abs/1909.02288"
    ]
  },
  {
    "term": "AI Ethics Frameworks",
    "category": "Ethics & Governance",
    "aliases": ["Ethical Guidelines", "AI Principles"],
    "definition": "Structured sets of principles and guidelines designed to ensure AI development and deployment aligns with ethical values and societal benefits.",
    "related": ["Ethical AI", "AI Principles", "Governance Framework", "Responsible AI"],
    "tags": ["ethics-frameworks", "ai-principles", "ethical-guidelines"],
    "references": [
      "https://www.google.com/about/main/ai-principles/",
      "https://www.partnershiponai.org/tenets/"
    ]
  },
  {
    "term": "Regulatory Compliance",
    "category": "Ethics & Governance",
    "aliases": ["Legal Compliance", "Regulatory Adherence"],
    "definition": "Ensuring AI systems meet legal requirements and regulatory standards across different jurisdictions and application domains.",
    "related": ["Legal Requirements", "Regulation", "Compliance Management", "Governance"],
    "tags": ["regulatory-compliance", "legal-adherence", "compliance-management"],
    "references": [
      "https://www.nist.gov/itl/ai-risk-management-framework",
      "https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=celex%3A52021PC0206"
    ]
  },
  {
    "term": "Stakeholder Engagement",
    "category": "Ethics & Governance",
    "aliases": ["Community Engagement", "Participatory AI"],
    "definition": "Process of involving relevant stakeholders in AI development and governance to ensure diverse perspectives and interests are considered.",
    "related": ["Participatory Design", "Community Input", "Inclusive Development", "Democratic AI"],
    "tags": ["stakeholder-engagement", "participatory-design", "community-involvement"],
    "references": [
      "https://arxiv.org/abs/2009.10250",
      "https://www.partnershiponai.org/about/#mission"
    ]
  },
  {
    "term": "AI Red Teaming",
    "category": "Ethics & Governance",
    "aliases": ["Adversarial Testing", "Safety Testing"],
    "definition": "Systematic testing approach that attempts to find vulnerabilities, biases, and harmful behaviors in AI systems through adversarial scenarios.",
    "related": ["Safety Testing", "Vulnerability Assessment", "Adversarial Testing", "Risk Mitigation"],
    "tags": ["ai-red-teaming", "adversarial-testing", "safety-evaluation"],
    "references": [
      "https://www.anthropic.com/news/red-teaming-language-models",
      "https://arxiv.org/abs/2209.07858"
    ]
  },
  {
    "term": "Digital Rights",
    "category": "Ethics & Governance",
    "aliases": ["AI Rights", "Algorithmic Rights"],
    "definition": "Legal and ethical rights of individuals in the context of AI systems, including rights to explanation, human review, and protection from discrimination.",
    "related": ["Human Rights", "Digital Freedom", "AI Rights", "Individual Protection"],
    "tags": ["digital-rights", "ai-rights", "individual-protection"],
    "references": [
      "https://www.ohchr.org/en/issues/digitalage/pages/digitalageindex.aspx",
      "https://gdpr.eu/what-is-gdpr/"
    ]
  },
  {
    "term": "Ethical Review Boards",
    "category": "Ethics & Governance",
    "aliases": ["AI Ethics Committees", "Institutional Review Boards"],
    "definition": "Organizational bodies responsible for reviewing AI projects and research to ensure ethical compliance and minimize potential harms.",
    "related": ["Ethics Committee", "Institutional Review", "Ethical Oversight", "Research Ethics"],
    "tags": ["ethics-review", "institutional-oversight", "ethical-evaluation"],
    "references": [
      "https://www.ibm.com/topics/ai-ethics",
      "https://www.nature.com/articles/s42256-020-0214-1"
    ]
  },
  {
    "term": "Trustworthy AI",
    "category": "Ethics & Governance",
    "aliases": ["Reliable AI", "Dependable AI"],
    "definition": "AI systems designed to be reliable, safe, fair, and interpretable, earning user and societal trust through transparent and ethical operation.",
    "related": ["AI Safety", "Reliability", "Trustworthiness", "Ethical AI"],
    "tags": ["trustworthy-ai", "reliable-systems", "ethical-design"],
    "references": [
      "https://ec.europa.eu/digital-single-market/en/news/ethics-guidelines-trustworthy-ai",
      "https://www.nist.gov/itl/ai-risk-management-framework"
    ]
  },

  {
    "term": "Precision Medicine AI",
    "category": "Applied AI Domains",
    "aliases": ["Personalized Medicine AI", "Individualized Healthcare"],
    "definition": "AI applications that tailor medical treatment and prevention strategies to individual patient characteristics, genetics, and environmental factors.",
    "related": ["Healthcare AI", "Genomics", "Personalized Treatment", "Medical Diagnosis"],
    "tags": ["precision-medicine", "personalized-healthcare", "individualized-treatment"],
    "references": [
      "https://www.nature.com/articles/s41591-018-0300-7",
      "https://www.nih.gov/precision-medicine-initiative-cohort-program"
    ]
  },
  {
    "term": "Autonomous Trading Systems",
    "category": "Applied AI Domains",
    "aliases": ["AI Trading Bots", "Automated Trading"],
    "definition": "AI systems that execute financial trades automatically based on market analysis, risk assessment, and predefined strategies without human intervention.",
    "related": ["Algorithmic Trading", "Financial AI", "Market Analysis", "Risk Management"],
    "tags": ["autonomous-trading", "ai-trading", "automated-finance"],
    "references": [
      "https://www.investopedia.com/articles/active-trading/101014/basics-algorithmic-trading-concepts-and-examples.asp",
      "https://www.bis.org/publ/qtrpdf/r_qt1809f.htm"
    ]
  },
  {
    "term": "Smart Transportation",
    "category": "Applied AI Domains",
    "aliases": ["Intelligent Transportation", "AI Transportation"],
    "definition": "AI-enabled transportation systems that optimize traffic flow, route planning, and vehicle coordination for improved efficiency and safety.",
    "related": ["Autonomous Vehicles", "Traffic Optimization", "Route Planning", "Transportation Management"],
    "tags": ["smart-transportation", "intelligent-transport", "traffic-ai"],
    "references": [
      "https://www.its.dot.gov/",
      "https://www.mckinsey.com/industries/automotive-and-assembly/our-insights/the-future-of-mobility-is-at-our-doorstep"
    ]
  },
  {
    "term": "Digital Humanities AI",
    "category": "Applied AI Domains",
    "aliases": ["Computational Humanities", "AI for Humanities"],
    "definition": "Application of AI techniques to humanities research including text analysis, cultural heritage preservation, and historical data mining.",
    "related": ["Text Analysis", "Cultural Heritage", "Historical Research", "Digital Archives"],
    "tags": ["digital-humanities", "computational-humanities", "cultural-ai"],
    "references": [
      "https://digitalhumanities.org/",
      "https://www.nature.com/articles/s41599-019-0367-1"
    ]
  },
  {
    "term": "Environmental Monitoring AI",
    "category": "Applied AI Domains",
    "aliases": ["EcoAI", "Environmental Intelligence"],
    "definition": "AI systems for monitoring environmental conditions, tracking climate change, predicting natural disasters, and managing natural resources.",
    "related": ["Climate AI", "Environmental Science", "Remote Sensing", "Sustainability"],
    "tags": ["environmental-monitoring", "eco-ai", "climate-monitoring"],
    "references": [
      "https://www.climatechange.ai/",
      "https://www.nature.com/articles/s41467-020-16811-y"
    ]
  },
  {
    "term": "AI in Gaming",
    "category": "Applied AI Domains",
    "aliases": ["Game AI", "Interactive Entertainment AI"],
    "definition": "AI technologies in video games including non-player character behavior, procedural content generation, and adaptive gameplay experiences.",
    "related": ["Game Development", "NPC Behavior", "Procedural Generation", "Player Modeling"],
    "tags": ["game-ai", "interactive-entertainment", "gaming-intelligence"],
    "references": [
      "https://www.gamedeveloper.com/programming/behavior-trees-for-ai-how-they-work",
      "https://www.nature.com/articles/nature16961"
    ]
  },
  {
    "term": "Social Media AI",
    "category": "Applied AI Domains",
    "aliases": ["Social Intelligence", "Social Network AI"],
    "definition": "AI applications for analyzing social media data, content moderation, trend detection, and understanding social dynamics and behavior patterns.",
    "related": ["Content Moderation AI", "Social Network Analysis", "Trend Detection", "Behavioral Analysis"],
    "tags": ["social-media-ai", "social-intelligence", "content-analysis"],
    "references": [
      "https://www.brookings.edu/research/how-to-deal-with-ai-enabled-disinformation/",
      "https://arxiv.org/abs/2103.14749"
    ]
  },
  {
    "term": "AI for Creative Industries",
    "category": "Applied AI Domains",
    "aliases": ["Creative AI", "Artistic Intelligence"],
    "definition": "AI applications in creative fields including music composition, visual art generation, writing assistance, and creative content production.",
    "related": ["Generative Art", "Music AI", "Creative Writing", "Design Automation"],
    "tags": ["creative-ai", "artistic-intelligence", "creative-automation"],
    "references": [
      "https://www.nature.com/articles/s41598-020-68623-9",
      "https://www.adobe.com/sensei.html"
    ]
  },
  {
    "term": "AI in Manufacturing",
    "category": "Applied AI Domains",
    "aliases": ["Industrial AI", "Manufacturing Intelligence"],
    "definition": "AI applications in manufacturing including quality control, predictive maintenance, supply chain optimization, and production planning.",
    "related": ["Smart Manufacturing", "Predictive Maintenance", "Quality Control", "Industrial Automation"],
    "tags": ["manufacturing-ai", "industrial-intelligence", "production-optimization"],
    "references": [
      "https://www.mckinsey.com/capabilities/operations/our-insights/smart-manufacturing",
      "https://www.ge.com/digital/applications/predix-apm"
    ]
  },
  {
    "term": "Retail AI",
    "category": "Applied AI Domains",
    "aliases": ["Retail Intelligence", "Commerce AI"],
    "definition": "AI applications in retail including demand forecasting, inventory management, personalized shopping experiences, and customer behavior analysis.",
    "related": ["Recommender System", "Demand Forecasting", "Customer Analytics", "Inventory Optimization"],
    "tags": ["retail-ai", "commerce-intelligence", "shopping-optimization"],
    "references": [
      "https://www.mckinsey.com/industries/retail/our-insights/how-retailers-can-keep-up-with-consumers",
      "https://www.salesforce.com/resources/articles/ai-retail/"
    ]
  },
  {
    "term": "Scaling Laws",
    "category": "AI Fundamentals",
    "aliases": ["Neural Scaling Laws", "Power Laws"],
    "definition": "Empirical relationships that describe how model performance improves predictably with increased model size, training data, and computational resources, following power-law distributions.",
    "related": ["Emergent Behavior", "Foundation Model", "Model Scaling", "Computational Resources"],
    "tags": ["scaling-laws", "model-performance", "empirical-relationships"],
    "references": [
      "https://arxiv.org/abs/2001.08361",
      "https://www.anthropic.com/news/scaling-laws-for-neural-language-models"
    ]
  },
  {
    "term": "Test-Time Scaling",
    "category": "AI Fundamentals", 
    "aliases": ["Inference-Time Scaling", "Test-Time Compute"],
    "definition": "The practice of allocating additional computational resources during inference to improve model performance, allowing models to 'think' longer for better results.",
    "related": ["Chain-of-Thought", "Inference Optimization", "Computational Resources", "Reasoning Models"],
    "tags": ["test-time-scaling", "inference-optimization", "computational-resources"],
    "references": [
      "https://arxiv.org/abs/2408.03314",
      "https://openai.com/index/learning-to-reason-with-llms/"
    ]
  },
  {
    "term": "Grokking",
    "category": "AI Fundamentals",
    "aliases": ["Delayed Generalization", "Phase Transition"],
    "definition": "A phenomenon where neural networks suddenly transition from memorization to generalization after extended training, showing delayed understanding of underlying patterns.",
    "related": ["Generalization", "Overfitting", "Phase Transitions", "Learning Dynamics"],
    "tags": ["grokking", "delayed-generalization", "phase-transition"],
    "references": [
      "https://arxiv.org/abs/2201.02177",
      "https://www.anthropic.com/news/grokking-generalization-beyond-overfitting"
    ]
  },
  {
    "term": "Mechanistic Interpretability",
    "category": "AI Fundamentals",
    "aliases": ["Mech Interp", "Neural Circuit Analysis"],
    "definition": "A research approach that reverse-engineers neural networks by identifying and understanding the specific mechanisms and circuits that implement different capabilities.",
    "related": ["Explainable AI", "Neural Networks", "Interpretability", "Circuit Analysis"],
    "tags": ["mechanistic-interpretability", "neural-circuits", "reverse-engineering"],
    "references": [
      "https://distill.pub/2020/circuits/",
      "https://www.anthropic.com/news/mechanistic-interpretability"
    ]
  },
  {
    "term": "Inductive Bias",
    "category": "AI Fundamentals",
    "aliases": ["Learning Bias", "Architectural Bias"],
    "definition": "The set of assumptions that a learning algorithm uses to predict outputs for inputs it has not encountered, often built into model architecture or training procedures.",
    "related": ["Generalization", "Architecture Design", "Prior Knowledge", "Learning Theory"],
    "tags": ["inductive-bias", "learning-assumptions", "generalization"],
    "references": [
      "https://en.wikipedia.org/wiki/Inductive_bias",
      "https://www.yitay.net/blog/emergence-and-scaling"
    ]
  },
  {
    "term": "Capability Control",
    "category": "AI Fundamentals",
    "aliases": ["AI Capability Management", "Capability Governance"],
    "definition": "Methods and frameworks for managing and controlling the development and deployment of AI capabilities to ensure they remain beneficial and aligned with human values.",
    "related": ["AI Safety", "AI Alignment", "Governance", "Risk Management"],
    "tags": ["capability-control", "ai-governance", "safety-management"],
    "references": [
      "https://arxiv.org/abs/2312.06942",
      "https://www.safe.ai/capability-control"
    ]
  },
  {
    "term": "Compute-Optimal Training",
    "category": "AI Fundamentals",
    "aliases": ["Optimal Compute Allocation", "Efficient Training"],
    "definition": "Training strategies that maximize model performance given a fixed computational budget by optimally allocating resources between model size, data, and training time.",
    "related": ["Scaling Laws", "Resource Optimization", "Training Efficiency", "Chinchilla Scaling"],
    "tags": ["compute-optimal", "resource-allocation", "training-efficiency"],
    "references": [
      "https://arxiv.org/abs/2203.15556",
      "https://www.deepmind.com/publications/training-compute-optimal-large-language-models"
    ]
  },
  {
    "term": "Phase Transitions",
    "category": "AI Fundamentals",
    "aliases": ["Critical Transitions", "Sudden Changes"],
    "definition": "Sudden qualitative changes in model behavior or performance that occur at specific scales or training stages, often associated with emergent capabilities.",
    "related": ["Emergent Behavior", "Grokking", "Scaling Laws", "Critical Points"],
    "tags": ["phase-transitions", "sudden-changes", "critical-points"],
    "references": [
      "https://arxiv.org/abs/2206.07682",
      "https://www.assemblyai.com/blog/emergent-abilities-of-large-language-models"
    ]
  },
  {
    "term": "Universality",
    "category": "AI Fundamentals",
    "aliases": ["Universal Computation", "Turing Completeness"],
    "definition": "The property that a computational system can, in principle, simulate any other computational system, fundamental to understanding the theoretical limits of AI.",
    "related": ["Universal Approximation Theorem", "Computational Theory", "Turing Machines", "Theoretical Foundations"],
    "tags": ["universality", "computational-theory", "theoretical-limits"],
    "references": [
      "https://en.wikipedia.org/wiki/Universal_computation",
      "https://www.deeplearningbook.org/contents/mlp.html"
    ]
  },
  {
    "term": "Bitter Lesson",
    "category": "AI Fundamentals",
    "aliases": ["Sutton's Bitter Lesson"],
    "definition": "The observation that general methods leveraging computation and scale consistently outperform methods that incorporate human knowledge and domain-specific tricks.",
    "related": ["Scaling Laws", "General Methods", "Computational Power", "AI History"],
    "tags": ["bitter-lesson", "general-methods", "computation-over-knowledge"],
    "references": [
      "http://www.incompleteideas.net/IncIdeas/BitterLesson.html",
      "https://www.exponentialview.co/p/can-scaling-scale"
    ]
  },

  {
    "term": "Denoising Diffusion Probabilistic Models",
    "category": "Machine Learning Algorithms",
    "aliases": ["DDPM", "Diffusion Models"],
    "definition": "Generative models that learn to reverse a diffusion process by gradually removing noise from data, enabling high-quality sample generation across various domains.",
    "related": ["Diffusion Model", "Generative Model", "Probabilistic Models", "Noise Prediction"],
    "tags": ["ddpm", "diffusion-models", "probabilistic-generation"],
    "references": [
      "https://arxiv.org/abs/2006.11239",
      "https://lilianweng.github.io/posts/2021-07-11-diffusion-models/"
    ]
  },
  {
    "term": "Score-Based Generative Models",
    "category": "Machine Learning Algorithms",
    "aliases": ["Score Matching", "Noise Conditional Score Networks"],
    "definition": "Generative models that learn the score function (gradient of log probability) of data distributions, enabling flexible sampling and generation procedures.",
    "related": ["Diffusion Model", "Stochastic Differential Equations", "Score Function", "Langevin Dynamics"],
    "tags": ["score-based", "score-matching", "gradient-estimation"],
    "references": [
      "https://arxiv.org/abs/2011.13456",
      "https://yang-song.github.io/blog/2021/score/"
    ]
  },
  {
    "term": "Contrastive Learning",
    "category": "Machine Learning Algorithms",
    "aliases": ["Contrastive Training", "Self-Supervised Contrastive Learning"],
    "definition": "A learning approach that teaches models to identify similarities and differences by pulling similar examples together and pushing dissimilar examples apart in representation space.",
    "related": ["Self-Supervised Learning", "Representation Learning", "SimCLR", "Contrastive Loss"],
    "tags": ["contrastive-learning", "self-supervised", "representation-learning"],
    "references": [
      "https://arxiv.org/abs/2002.05709",
      "https://lilianweng.github.io/posts/2021-05-31-contrastive/"
    ]
  },
  {
    "term": "Graph Attention Networks",
    "category": "Machine Learning Algorithms",
    "aliases": ["GAT", "Attention-based GNNs"],
    "definition": "Graph neural networks that use attention mechanisms to weigh the importance of neighboring nodes, enabling adaptive aggregation of information in graph structures.",
    "related": ["Graph Neural Network", "Attention Mechanism", "Graph Learning", "Node Classification"],
    "tags": ["graph-attention", "gnn", "attention-mechanism"],
    "references": [
      "https://arxiv.org/abs/1710.10903",
      "https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.GATConv"
    ]
  },
  {
    "term": "Flow-Based Models",
    "category": "Machine Learning Algorithms",
    "aliases": ["Normalizing Flows", "Invertible Neural Networks"],
    "definition": "Generative models that learn invertible transformations between simple and complex distributions, enabling exact likelihood computation and efficient sampling.",
    "related": ["Generative Model", "Invertible Functions", "Change of Variables", "Exact Likelihood"],
    "tags": ["normalizing-flows", "invertible-networks", "exact-likelihood"],
    "references": [
      "https://arxiv.org/abs/1505.05770",
      "https://lilianweng.github.io/posts/2018-10-13-flow-models/"
    ]
  },
  {
    "term": "Energy-Based Models",
    "category": "Machine Learning Algorithms",
    "aliases": ["EBM", "Energy Functions"],
    "definition": "Models that assign energy values to different configurations, with lower energy corresponding to higher probability, enabling flexible modeling of complex distributions.",
    "related": ["Probabilistic Model", "Energy Function", "Contrastive Divergence", "Boltzmann Machines"],
    "tags": ["energy-based", "energy-function", "probabilistic-modeling"],
    "references": [
      "https://arxiv.org/abs/2101.03288",
      "http://yann.lecun.com/exdb/publis/pdf/lecun-06.pdf"
    ]
  },
  {
    "term": "Adversarial Training",
    "category": "Machine Learning Algorithms",
    "aliases": ["Robust Training", "Adversarial Robustness"],
    "definition": "Training methodology that improves model robustness by training on adversarially perturbed examples designed to fool the model.",
    "related": ["Adversarial Examples", "Robustness", "Security", "Model Defense"],
    "tags": ["adversarial-training", "robustness", "security"],
    "references": [
      "https://arxiv.org/abs/1706.06083",
      "https://adversarial-ml-tutorial.org/"
    ]
  },
  {
    "term": "Implicit Neural Representations",
    "category": "Machine Learning Algorithms",
    "aliases": ["INR", "Neural Fields", "Coordinate Networks"],
    "definition": "Neural networks that represent signals as continuous functions of coordinates, enabling high-fidelity representation of images, 3D shapes, and other structured data.",
    "related": ["Neural Fields", "Continuous Representations", "SIREN", "Coordinate Networks"],
    "tags": ["implicit-neural-representations", "neural-fields", "continuous-functions"],
    "references": [
      "https://arxiv.org/abs/2006.09661",
      "https://www.vincentsitzmann.com/siren/"
    ]
  },
  {
    "term": "Meta-Learning",
    "category": "Machine Learning Algorithms",
    "aliases": ["Learning to Learn", "Few-Shot Meta-Learning"],
    "definition": "Learning algorithms that acquire the ability to learn new tasks quickly by leveraging experience from previous learning episodes.",
    "related": ["Few-shot Learning", "MAML", "Transfer Learning", "Adaptation"],
    "tags": ["meta-learning", "learning-to-learn", "few-shot"],
    "references": [
      "https://arxiv.org/abs/1703.03400",
      "https://lilianweng.github.io/posts/2018-11-30-meta-learning/"
    ]
  },
  {
    "term": "Causal Inference",
    "category": "Machine Learning Algorithms",
    "aliases": ["Causal Discovery", "Causal Machine Learning"],
    "definition": "Methods for identifying and estimating causal relationships from data, going beyond correlation to understand cause-and-effect relationships.",
    "related": ["Causal Graphs", "Confounding", "Treatment Effects", "Pearl's Causal Hierarchy"],
    "tags": ["causal-inference", "causality", "causal-discovery"],
    "references": [
      "https://www.bradyneal.com/causal-inference-course",
      "https://arxiv.org/abs/1911.10500"
    ]
  },

  {
    "term": "Speculative Decoding",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Speculative Sampling", "Assisted Generation"],
    "definition": "An acceleration technique that uses a smaller, faster model to propose tokens which are then verified by a larger model, speeding up generation while maintaining quality.",
    "related": ["Inference Optimization", "Model Acceleration", "Parallel Decoding", "Generation Speed"],
    "tags": ["speculative-decoding", "inference-acceleration", "generation-speed"],
    "references": [
      "https://arxiv.org/abs/2211.17192",
      "https://huggingface.co/blog/assisted-generation"
    ]
  },
  {
    "term": "Reasoning Models",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Slow Thinking Models", "Chain-of-Thought Models"],
    "definition": "Language models specifically trained to perform deliberate, step-by-step reasoning, often using reinforcement learning to improve logical thinking capabilities.",
    "related": ["Chain-of-Thought", "Test-Time Scaling", "Reinforcement Learning from Human Feedback", "OpenAI o1"],
    "tags": ["reasoning-models", "deliberate-thinking", "step-by-step"],
    "references": [
      "https://openai.com/index/learning-to-reason-with-llms/",
      "https://sebastianraschka.com/blog/2025/state-of-llm-reasoning-and-inference-scaling.html"
    ]
  },
  {
    "term": "Mixture of Attention",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["MoA", "Expert Attention"],
    "definition": "A variant of mixture of experts applied to attention mechanisms, where different attention heads act as experts specialized for different types of relationships.",
    "related": ["Mixture of Experts", "Attention Mechanism", "Multi-Head Attention", "Expert Specialization"],
    "tags": ["mixture-of-attention", "expert-attention", "specialized-heads"],
    "references": [
      "https://arxiv.org/abs/2503.07137",
      "https://huggingface.co/blog/moe"
    ]
  },
  {
    "term": "Constitutional AI",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["CAI", "AI Feedback Training"],
    "definition": "A training method that uses AI feedback based on a set of principles (constitution) to train models to be helpful, harmless, and honest without human oversight.",
    "related": ["AI Safety", "Self-Supervision", "AI Feedback", "Reinforcement Learning from AI Feedback"],
    "tags": ["constitutional-ai", "ai-feedback", "self-supervision"],
    "references": [
      "https://arxiv.org/abs/2212.08073",
      "https://www.anthropic.com/news/constitutional-ai-harmlessness-from-ai-feedback"
    ]
  },
  {
    "term": "Tree of Thoughts",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["ToT", "Structured Reasoning"],
    "definition": "A reasoning framework that extends chain-of-thought by exploring multiple reasoning paths in a tree structure, enabling more systematic problem-solving.",
    "related": ["Chain-of-Thought", "Reasoning", "Search Algorithms", "Problem Solving"],
    "tags": ["tree-of-thoughts", "structured-reasoning", "multi-path"],
    "references": [
      "https://arxiv.org/abs/2305.10601",
      "https://github.com/princeton-nlp/tree-of-thought-llm"
    ]
  },
  {
    "term": "Self-Consistency",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Ensemble Reasoning", "Majority Voting"],
    "definition": "A technique that improves reasoning by generating multiple reasoning paths and selecting the most consistent answer, leveraging the wisdom of crowds principle.",
    "related": ["Chain-of-Thought", "Ensemble Methods", "Reasoning", "Multiple Sampling"],
    "tags": ["self-consistency", "ensemble-reasoning", "majority-voting"],
    "references": [
      "https://arxiv.org/abs/2203.11171",
      "https://research.google/blog/language-models-perform-reasoning-via-chain-of-thought/"
    ]
  },
  {
    "term": "Context Length Extension",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Long Context", "Extended Context Windows"],
    "definition": "Techniques to enable language models to process much longer input sequences than they were originally trained on, expanding their working memory.",
    "related": ["Context Window", "Long Context Models", "Memory Limitations", "Attention Optimization"],
    "tags": ["context-extension", "long-context", "memory-expansion"],
    "references": [
      "https://arxiv.org/abs/2309.12307",
      "https://arxiv.org/abs/2104.05394"
    ]
  },
  {
    "term": "Tool Learning",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Tool Use Learning", "API Integration"],
    "definition": "The capability of language models to learn how to effectively use external tools, APIs, and systems to expand their problem-solving abilities.",
    "related": ["Function Calling", "Tool Use", "API Integration", "External Systems"],
    "tags": ["tool-learning", "api-integration", "external-tools"],
    "references": [
      "https://arxiv.org/abs/2302.04761",
      "https://platform.openai.com/docs/guides/function-calling"
    ]
  },
  {
    "term": "Structured Generation",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Constrained Generation", "Format-Controlled Output"],
    "definition": "Techniques to control language model outputs to follow specific formats, schemas, or structures such as JSON, XML, or formal grammars.",
    "related": ["Constrained Decoding", "Format Control", "Structured Output", "Grammar-Guided Generation"],
    "tags": ["structured-generation", "format-control", "constrained-output"],
    "references": [
      "https://arxiv.org/abs/2307.09702",
      "https://github.com/guidance-ai/guidance"
    ]
  },
  {
    "term": "Prefix Tuning",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Prompt Tuning", "Soft Prompting"],
    "definition": "A parameter-efficient fine-tuning method that prepends learnable continuous prompts to the input, allowing task adaptation without modifying model weights.",
    "related": ["Parameter-Efficient Fine-tuning", "Prompt Engineering", "Soft Prompts", "Task Adaptation"],
    "tags": ["prefix-tuning", "soft-prompts", "parameter-efficient"],
    "references": [
      "https://arxiv.org/abs/2101.00190",
      "https://huggingface.co/docs/peft/task_guides/ptuning"
    ]
  },

  {
    "term": "QLoRA",
    "category": "Generative AI",
    "aliases": ["Quantized LoRA", "4-bit LoRA"],
    "definition": "An efficient fine-tuning technique that combines LoRA with 4-bit quantization, enabling fine-tuning of large models on consumer hardware with minimal quality loss.",
    "related": ["LoRA", "Quantization", "Parameter-Efficient Fine-tuning", "Memory Optimization"],
    "tags": ["qlora", "quantized-adaptation", "memory-efficient"],
    "references": [
      "https://arxiv.org/abs/2305.14314",
      "https://github.com/artidoro/qlora"
    ]
  },
  {
    "term": "Direct Preference Optimization",
    "category": "Generative AI",
    "aliases": ["DPO", "Preference-Based Training"],
    "definition": "A training method that directly optimizes for human preferences without requiring a separate reward model, simplifying the alignment process compared to RLHF.",
    "related": ["RLHF", "Human Feedback", "Preference Learning", "AI Alignment"],
    "tags": ["dpo", "preference-optimization", "alignment"],
    "references": [
      "https://arxiv.org/abs/2305.18290",
      "https://huggingface.co/blog/dpo-trl"
    ]
  },
  {
    "term": "Adapter Layers",
    "category": "Generative AI",
    "aliases": ["Adapters", "Lightweight Modules"],
    "definition": "Small neural network modules inserted into pre-trained models to enable task-specific adaptation while keeping the original parameters frozen.",
    "related": ["Parameter-Efficient Fine-tuning", "LoRA", "Transfer Learning", "Task Adaptation"],
    "tags": ["adapter-layers", "lightweight-adaptation", "modular-training"],
    "references": [
      "https://arxiv.org/abs/1902.00751",
      "https://adapterhub.ml/"
    ]
  },
  {
    "term": "Mixture of Experts Routing",
    "category": "Generative AI",
    "aliases": ["Expert Choice Routing", "Token Routing"],
    "definition": "Algorithms that determine how inputs are distributed among expert networks in MoE architectures, critical for load balancing and performance optimization.",
    "related": ["Mixture of Experts", "Load Balancing", "Expert Selection", "Sparse Models"],
    "tags": ["moe-routing", "expert-selection", "load-balancing"],
    "references": [
      "https://arxiv.org/abs/2202.09368",
      "https://research.google/blog/mixture-of-experts-with-expert-choice-routing/"
    ]
  },
  {
    "term": "Instruction Following",
    "category": "Generative AI",
    "aliases": ["Instruction Compliance", "Command Understanding"],
    "definition": "The ability of AI models to understand and execute complex instructions given in natural language, fundamental to creating helpful AI assistants.",
    "related": ["Instruction Tuning", "Task Following", "Natural Language Commands", "AI Assistants"],
    "tags": ["instruction-following", "command-execution", "task-compliance"],
    "references": [
      "https://arxiv.org/abs/2109.01652",
      "https://arxiv.org/abs/2203.02155"
    ]
  },
  {
    "term": "Distillation",
    "category": "Generative AI",
    "aliases": ["Knowledge Distillation", "Model Compression"],
    "definition": "A technique where a smaller 'student' model learns to mimic a larger 'teacher' model, achieving similar performance with reduced computational requirements.",
    "related": ["Model Compression", "Teacher-Student Learning", "Knowledge Transfer", "Efficiency"],
    "tags": ["distillation", "knowledge-transfer", "model-compression"],
    "references": [
      "https://arxiv.org/abs/1503.02531",
      "https://huggingface.co/blog/knowledge-distillation"
    ]
  },
  {
    "term": "Mixture of Depths",
    "category": "Generative AI",
    "aliases": ["MoD", "Adaptive Depth"],
    "definition": "An architecture that dynamically adjusts the computational depth used for different tokens, allocating more computation to tokens that need deeper processing.",
    "related": ["Adaptive Computation", "Conditional Computation", "Dynamic Networks", "Computational Efficiency"],
    "tags": ["mixture-of-depths", "adaptive-depth", "dynamic-computation"],
    "references": [
      "https://arxiv.org/abs/2404.02258",
      "https://huggingface.co/blog/mixture-of-depths"
    ]
  },
  {
    "term": "Multimodal Chain-of-Thought",
    "category": "Generative AI",
    "aliases": ["MM-CoT", "Visual Reasoning"],
    "definition": "Extension of chain-of-thought reasoning to multimodal inputs, enabling step-by-step reasoning that incorporates both text and visual information.",
    "related": ["Chain-of-Thought", "Multimodal AI", "Visual Reasoning", "Cross-modal Understanding"],
    "tags": ["multimodal-cot", "visual-reasoning", "cross-modal"],
    "references": [
      "https://arxiv.org/abs/2302.00923",
      "https://github.com/amazon-science/mm-cot"
    ]
  },
  {
    "term": "Self-Rewarding Models",
    "category": "Generative AI",
    "aliases": ["Self-Supervised Reward", "Auto-Reward"],
    "definition": "Models that learn to evaluate and improve their own outputs through self-generated rewards, reducing dependence on external human feedback.",
    "related": ["Self-Supervision", "Reward Modeling", "Self-Improvement", "Auto-Evaluation"],
    "tags": ["self-rewarding", "auto-evaluation", "self-improvement"],
    "references": [
      "https://arxiv.org/abs/2401.10020",
      "https://huggingface.co/blog/self-rewarding-lms"
    ]
  },
  {
    "term": "Mixture of Agents",
    "category": "Generative AI",
    "aliases": ["MoA", "Agent Ensemble"],
    "definition": "A framework where multiple AI agents with different capabilities collaborate to solve complex tasks, leveraging diverse expertise and perspectives.",
    "related": ["Multi-Agent Systems", "Agent Collaboration", "Ensemble Methods", "Distributed Intelligence"],
    "tags": ["mixture-of-agents", "agent-collaboration", "distributed-intelligence"],
    "references": [
      "https://arxiv.org/abs/2406.04692",
      "https://github.com/togethercomputer/MoA"
    ]
  },

  {
    "term": "Dense Retrieval",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Neural Retrieval", "Semantic Retrieval"],
    "definition": "Information retrieval using neural embeddings to find semantically similar content, moving beyond keyword matching to understand meaning and context.",
    "related": ["Vector Search", "Semantic Search", "Neural Networks", "Embedding Models"],
    "tags": ["dense-retrieval", "semantic-retrieval", "neural-search"],
    "references": [
      "https://arxiv.org/abs/2004.04906",
      "https://huggingface.co/sentence-transformers"
    ]
  },
  {
    "term": "ColBERT",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Contextualized Late Interaction", "Late Interaction Retrieval"],
    "definition": "An efficient retrieval architecture that uses late interaction between query and document representations, enabling both effectiveness and efficiency.",
    "related": ["Dense Retrieval", "BERT", "Efficient Search", "Late Interaction"],
    "tags": ["colbert", "late-interaction", "efficient-retrieval"],
    "references": [
      "https://arxiv.org/abs/2004.12832",
      "https://github.com/stanford-futuredata/ColBERT"
    ]
  },
  {
    "term": "Retrieval-Augmented Generation",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["RAG", "Knowledge-Grounded Generation"],
    "definition": "A framework that enhances language model generation by retrieving relevant external knowledge and incorporating it into the generation process.",
    "related": ["Knowledge Retrieval", "External Knowledge", "Grounding", "Information Integration"],
    "tags": ["rag", "knowledge-augmented", "external-knowledge"],
    "references": [
      "https://arxiv.org/abs/2005.11401",
      "https://huggingface.co/docs/transformers/model_doc/rag"
    ]
  },
  {
    "term": "GraphRAG",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Graph-based RAG", "Knowledge Graph RAG"],
    "definition": "An extension of RAG that uses knowledge graphs to provide structured, relational context for generation, enabling more sophisticated reasoning over connected information.",
    "related": ["Knowledge Graph", "RAG", "Structured Knowledge", "Graph-based Reasoning"],
    "tags": ["graphrag", "structured-rag", "graph-enhanced"],
    "references": [
      "https://arxiv.org/abs/2404.16130",
      "https://github.com/microsoft/graphrag"
    ]
  },
  {
    "term": "Inference",
    "category": "AI Fundamentals",
    "aliases": ["Model Inference", "Prediction"],
    "definition": "The process of using a trained machine learning model to make predictions, classifications, or decisions on new, previously unseen data.",
    "related": ["Model", "Prediction", "Training", "Deployment"],
    "tags": ["inference", "prediction", "model-application"],
    "references": [
      "https://en.wikipedia.org/wiki/Statistical_inference",
      "https://www.ibm.com/topics/machine-learning-inference"
    ]
  },
  {
    "term": "Model",
    "category": "AI Fundamentals",
    "aliases": ["Machine Learning Model", "AI Model"],
    "definition": "A mathematical representation or algorithm that has been trained on data to recognize patterns and make predictions or decisions about new inputs.",
    "related": ["Training", "Algorithm", "Parameters", "Architecture"],
    "tags": ["model", "mathematical-representation", "pattern-recognition"],
    "references": [
      "https://en.wikipedia.org/wiki/Machine_learning_model",
      "https://www.ibm.com/topics/machine-learning-models"
    ]
  },
  {
    "term": "Training Data",
    "category": "AI Fundamentals",
    "aliases": ["Training Set", "Training Dataset"],
    "definition": "A collection of labeled examples used to teach a machine learning algorithm to recognize patterns and make accurate predictions.",
    "related": ["Dataset", "Supervised Learning", "Label", "Feature"],
    "tags": ["training-data", "labeled-examples", "pattern-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Training,_validation,_and_test_sets",
      "https://www.ibm.com/topics/training-data"
    ]
  },
  {
    "term": "Feature",
    "category": "AI Fundamentals",
    "aliases": ["Input Variable", "Attribute", "Predictor"],
    "definition": "An individual measurable property or characteristic of a phenomenon being observed, used as input to machine learning models.",
    "related": ["Feature Engineering", "Input", "Data Preprocessing", "Variable"],
    "tags": ["feature", "input-variable", "measurable-property"],
    "references": [
      "https://en.wikipedia.org/wiki/Feature_(machine_learning)",
      "https://scikit-learn.org/stable/modules/feature_extraction.html"
    ]
  },
  {
    "term": "Label",
    "category": "AI Fundamentals",
    "aliases": ["Target", "Ground Truth", "Output"],
    "definition": "The correct answer or expected output for a given input in supervised learning, used to train models to make accurate predictions.",
    "related": ["Supervised Learning", "Training Data", "Ground Truth", "Target Variable"],
    "tags": ["label", "target-output", "ground-truth"],
    "references": [
      "https://en.wikipedia.org/wiki/Labeled_data",
      "https://www.ibm.com/topics/labeled-data"
    ]
  },
  {
    "term": "Embedding",
    "category": "AI Fundamentals",
    "aliases": ["Vector Embedding", "Dense Representation"],
    "definition": "A dense vector representation of data that captures semantic relationships and enables mathematical operations on complex data types.",
    "related": ["Vector Representation", "Semantic Similarity", "Dimensionality Reduction", "Feature Learning"],
    "tags": ["embedding", "vector-representation", "semantic-encoding"],
    "references": [
      "https://en.wikipedia.org/wiki/Word_embedding",
      "https://www.tensorflow.org/guide/embedding"
    ]
  },
  {
    "term": "Epoch",
    "category": "AI Fundamentals",
    "aliases": ["Training Epoch", "Full Pass"],
    "definition": "One complete pass through the entire training dataset during the training process of a machine learning model.",
    "related": ["Training", "Batch", "Iteration", "Training Loop"],
    "tags": ["epoch", "training-cycle", "dataset-pass"],
    "references": [
      "https://en.wikipedia.org/wiki/Epoch_(machine_learning)",
      "https://www.deeplearningbook.org/contents/optimization.html"
    ]
  },
  {
    "term": "Dataset",
    "category": "AI Fundamentals",
    "aliases": ["Data Collection", "Data Corpus"],
    "definition": "A structured collection of data organized for use in training, validating, or testing machine learning models.",
    "related": ["Training Data", "Data Collection", "Data Preprocessing", "Data Split"],
    "tags": ["dataset", "data-collection", "structured-data"],
    "references": [
      "https://en.wikipedia.org/wiki/Data_set",
      "https://www.kaggle.com/datasets"
    ]
  },
  {
    "term": "Accuracy",
    "category": "AI Fundamentals",
    "aliases": ["Classification Accuracy", "Prediction Accuracy"],
    "definition": "A performance metric that measures the proportion of correct predictions made by a model out of all predictions made.",
    "related": ["Evaluation Metric", "Precision", "Recall", "Performance Measurement"],
    "tags": ["accuracy", "performance-metric", "correct-predictions"],
    "references": [
      "https://en.wikipedia.org/wiki/Accuracy_and_precision",
      "https://scikit-learn.org/stable/modules/model_evaluation.html#accuracy-score"
    ]
  },
  {
    "term": "Precision",
    "category": "AI Fundamentals",
    "aliases": ["Positive Predictive Value"],
    "definition": "A performance metric that measures the proportion of true positive predictions among all positive predictions made by a model.",
    "related": ["Recall", "F1 Score", "True Positive", "Evaluation Metric"],
    "tags": ["precision", "positive-predictive-value", "classification-metric"],
    "references": [
      "https://en.wikipedia.org/wiki/Precision_and_recall",
      "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.precision_score.html"
    ]
  },
  {
    "term": "Recall",
    "category": "AI Fundamentals",
    "aliases": ["Sensitivity", "True Positive Rate"],
    "definition": "A performance metric that measures the proportion of actual positive instances that were correctly identified by the model.",
    "related": ["Precision", "F1 Score", "Sensitivity", "True Positive"],
    "tags": ["recall", "sensitivity", "true-positive-rate"],
    "references": [
      "https://en.wikipedia.org/wiki/Precision_and_recall",
      "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.recall_score.html"
    ]
  },
  {
    "term": "F1 Score",
    "category": "AI Fundamentals",
    "aliases": ["F1 Measure", "F-score"],
    "definition": "A performance metric that combines precision and recall into a single score using their harmonic mean, providing a balanced measure of model performance.",
    "related": ["Precision", "Recall", "Harmonic Mean", "Classification Metrics"],
    "tags": ["f1-score", "harmonic-mean", "balanced-metric"],
    "references": [
      "https://en.wikipedia.org/wiki/F-score",
      "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.f1_score.html"
    ]
  },
  {
    "term": "Bias",
    "category": "AI Fundamentals",
    "aliases": ["Model Bias", "Statistical Bias"],
    "definition": "Systematic error in model predictions that causes consistent deviation from true values, or unfair treatment of certain groups in data.",
    "related": ["Variance", "Bias-Variance Tradeoff", "Fairness", "Systematic Error"],
    "tags": ["bias", "systematic-error", "model-fairness"],
    "references": [
      "https://en.wikipedia.org/wiki/Bias_of_an_estimator",
      "https://www.ibm.com/topics/bias-in-ai"
    ]
  },
  {
    "term": "Variance",
    "category": "AI Fundamentals",
    "aliases": ["Model Variance", "Prediction Variance"],
    "definition": "The amount by which a model's predictions would change if trained on different datasets, measuring sensitivity to training data variations.",
    "related": ["Bias", "Bias-Variance Tradeoff", "Overfitting", "Model Stability"],
    "tags": ["variance", "model-sensitivity", "prediction-variability"],
    "references": [
      "https://en.wikipedia.org/wiki/Bias%E2%80%93variance_tradeoff",
      "https://www.ibm.com/topics/bias-variance-tradeoff"
    ]
  },
  {
    "term": "Optimization",
    "category": "AI Fundamentals",
    "aliases": ["Parameter Optimization", "Model Optimization"],
    "definition": "The process of finding the best set of parameters for a model by minimizing or maximizing an objective function during training.",
    "related": ["Gradient Descent", "Objective Function", "Parameters", "Training"],
    "tags": ["optimization", "parameter-tuning", "objective-minimization"],
    "references": [
      "https://en.wikipedia.org/wiki/Mathematical_optimization",
      "https://www.deeplearningbook.org/contents/optimization.html"
    ]
  },
  {
    "term": "Hyperparameter",
    "category": "AI Fundamentals",
    "aliases": ["Hyperparameter Setting", "Configuration Parameter"],
    "definition": "Configuration settings that control the learning process and model architecture, set before training begins and not learned from data.",
    "related": ["Model Configuration", "Learning Rate", "Hyperparameter Tuning", "Model Architecture"],
    "tags": ["hyperparameter", "configuration", "learning-control"],
    "references": [
      "https://en.wikipedia.org/wiki/Hyperparameter_(machine_learning)",
      "https://scikit-learn.org/stable/modules/grid_search.html"
    ]
  },
  {
    "term": "Evaluation Metric",
    "category": "AI Fundamentals",
    "aliases": ["Performance Metric", "Assessment Measure"],
    "definition": "Quantitative measures used to assess and compare the performance of machine learning models on specific tasks or datasets.",
    "related": ["Model Evaluation", "Performance Assessment", "Accuracy", "Validation"],
    "tags": ["evaluation-metric", "performance-measurement", "model-assessment"],
    "references": [
      "https://scikit-learn.org/stable/modules/model_evaluation.html",
      "https://www.ibm.com/topics/model-evaluation"
    ]
  },
  {
    "term": "K-Nearest Neighbors",
    "category": "Machine Learning Algorithms",
    "aliases": ["KNN", "k-NN", "Nearest Neighbor"],
    "definition": "A non-parametric, instance-based learning algorithm that classifies data points based on the majority class of their k nearest neighbors in the feature space.",
    "related": ["Classification", "Instance-Based Learning", "Distance Metrics", "Lazy Learning"],
    "tags": ["knn", "instance-based", "non-parametric"],
    "references": [
      "https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm",
      "https://scikit-learn.org/stable/modules/neighbors.html"
    ]
  },
  {
    "term": "XGBoost",
    "category": "Machine Learning Algorithms",
    "aliases": ["Extreme Gradient Boosting", "XGB"],
    "definition": "An optimized gradient boosting framework designed for speed and performance, using advanced regularization techniques and efficient tree construction algorithms.",
    "related": ["Gradient Boosting", "Ensemble Methods", "Decision Trees", "Regularization"],
    "tags": ["xgboost", "gradient-boosting", "ensemble"],
    "references": [
      "https://xgboost.readthedocs.io/",
      "https://arxiv.org/abs/1603.02754"
    ]
  },
  {
    "term": "Dimensionality Reduction",
    "category": "Machine Learning Algorithms",
    "aliases": ["Feature Reduction", "Dimension Reduction"],
    "definition": "Techniques that reduce the number of input features while preserving important information, helping to combat the curse of dimensionality and improve model performance.",
    "related": ["Principal Component Analysis", "Feature Selection", "Curse of Dimensionality", "Data Preprocessing"],
    "tags": ["dimensionality-reduction", "feature-reduction", "preprocessing"],
    "references": [
      "https://en.wikipedia.org/wiki/Dimensionality_reduction",
      "https://scikit-learn.org/stable/modules/decomposition.html"
    ]
  },
  {
    "term": "Ensemble Learning",
    "category": "Machine Learning Algorithms",
    "aliases": ["Ensemble Methods", "Model Ensemble"],
    "definition": "Machine learning techniques that combine predictions from multiple models to create a stronger predictor than any individual model alone.",
    "related": ["Bagging", "Boosting", "Random Forest", "Model Combination"],
    "tags": ["ensemble-learning", "model-combination", "meta-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Ensemble_learning",
      "https://scikit-learn.org/stable/modules/ensemble.html"
    ]
  },
  {
    "term": "Transfer Learning",
    "category": "Machine Learning Algorithms",
    "aliases": ["Domain Adaptation", "Knowledge Transfer"],
    "definition": "A machine learning technique where a model developed for one task is reused as the starting point for a model on a related task, leveraging pre-learned features.",
    "related": ["Fine-tuning", "Pre-trained Models", "Domain Adaptation", "Feature Extraction"],
    "tags": ["transfer-learning", "knowledge-transfer", "pre-trained"],
    "references": [
      "https://en.wikipedia.org/wiki/Transfer_learning",
      "https://www.tensorflow.org/tutorials/images/transfer_learning"
    ]
  },
  {
    "term": "Prompt",
    "category": "Generative AI",
    "aliases": ["Input Prompt", "Text Prompt", "Query"],
    "definition": "A text input or instruction given to an AI model to guide its generation, serving as the starting point for the model's response or creative output.",
    "related": ["Prompt Engineering", "Input", "Text Generation", "Model Interaction"],
    "tags": ["prompt", "input-instruction", "model-guidance"],
    "references": [
      "https://platform.openai.com/docs/guides/prompt-engineering",
      "https://www.promptingguide.ai/"
    ]
  },
  {
    "term": "Text Generation",
    "category": "Generative AI",
    "aliases": ["Natural Language Generation", "NLG", "Text Synthesis"],
    "definition": "The process of automatically creating human-like text using AI models, including stories, articles, code, and conversational responses.",
    "related": ["Language Model", "Content Creation", "Natural Language Processing", "Autoregressive Generation"],
    "tags": ["text-generation", "language-generation", "content-creation"],
    "references": [
      "https://en.wikipedia.org/wiki/Natural_language_generation",
      "https://huggingface.co/docs/transformers/tasks/text_generation"
    ]
  },
  {
    "term": "Image Generation",
    "category": "Generative AI",
    "aliases": ["Image Synthesis", "Visual Generation", "Generative Imagery"],
    "definition": "The creation of new images using AI models, either from text descriptions, random noise, or other images as input.",
    "related": ["Diffusion Model", "Text-to-Image Generation", "GAN", "Computer Vision"],
    "tags": ["image-generation", "visual-synthesis", "creative-ai"],
    "references": [
      "https://stability.ai/stable-diffusion",
      "https://openai.com/dall-e-3"
    ]
  },
  {
    "term": "Temperature (in sampling)",
    "category": "Generative AI",
    "aliases": ["Sampling Temperature", "Generation Temperature"],
    "definition": "A parameter that controls the randomness and creativity in text generation, with higher values producing more diverse but potentially less coherent outputs.",
    "related": ["Sampling", "Text Generation", "Randomness Control", "Output Diversity"],
    "tags": ["temperature", "sampling-parameter", "randomness-control"],
    "references": [
      "https://platform.openai.com/docs/api-reference/completions/create#completions/create-temperature",
      "https://huggingface.co/blog/how-to-generate"
    ]
  },
  {
    "term": "Top-K Sampling",
    "category": "Generative AI",
    "aliases": ["Top-K", "K-sampling"],
    "definition": "A text generation technique that samples the next token from only the K most likely candidates, balancing quality and diversity in generated text.",
    "related": ["Sampling", "Text Generation", "Top-P Sampling", "Token Selection"],
    "tags": ["top-k-sampling", "token-selection", "generation-strategy"],
    "references": [
      "https://arxiv.org/abs/1904.09751",
      "https://huggingface.co/blog/how-to-generate#top-k-sampling"
    ]
  },
  {
    "term": "Top-P (Nucleus) Sampling",
    "category": "Generative AI",
    "aliases": ["Nucleus Sampling", "Top-P", "P-sampling"],
    "definition": "A dynamic sampling method that selects tokens from the smallest set whose cumulative probability exceeds a threshold P, adapting to context.",
    "related": ["Sampling", "Text Generation", "Top-K Sampling", "Dynamic Selection"],
    "tags": ["top-p-sampling", "nucleus-sampling", "dynamic-selection"],
    "references": [
      "https://arxiv.org/abs/1904.09751",
      "https://huggingface.co/blog/how-to-generate#nucleus-sampling"
    ]
  },
  {
    "term": "Multimodal Model",
    "category": "Generative AI",
    "aliases": ["Cross-Modal Model", "Multi-Modal AI"],
    "definition": "AI models that can process and generate content across multiple modalities such as text, images, audio, and video in a unified framework.",
    "related": ["Multimodal AI", "Cross-Modal Learning", "Vision-Language Models", "CLIP"],
    "tags": ["multimodal", "cross-modal", "unified-model"],
    "references": [
      "https://openai.com/research/clip",
      "https://arxiv.org/abs/2103.00020"
    ]
  },
  {
    "term": "Safety Alignment",
    "category": "Generative AI",
    "aliases": ["AI Alignment", "Model Alignment", "Value Alignment"],
    "definition": "The process of ensuring AI models behave according to human values and intentions, producing helpful, harmless, and honest outputs.",
    "related": ["AI Safety", "Constitutional AI", "RLHF", "Value Learning"],
    "tags": ["safety-alignment", "value-alignment", "ai-safety"],
    "references": [
      "https://www.anthropic.com/news/constitutional-ai-harmlessness-from-ai-feedback",
      "https://arxiv.org/abs/2212.08073"
    ]
  },
  {
    "term": "Content Filtering",
    "category": "Generative AI",
    "aliases": ["Output Filtering", "Safety Filtering", "Content Moderation"],
    "definition": "Systems and techniques used to detect and prevent AI models from generating inappropriate, harmful, or policy-violating content.",
    "related": ["Safety Systems", "Content Moderation", "Harmful Content Detection", "Output Control"],
    "tags": ["content-filtering", "safety-systems", "output-control"],
    "references": [
      "https://platform.openai.com/docs/guides/moderation",
      "https://www.anthropic.com/news/ai-safety-via-debate"
    ]
  },
  {
    "term": "Decoder",
    "category": "Generative AI",
    "aliases": ["Decoder Network", "Generation Module"],
    "definition": "A neural network component that generates output sequences from encoded representations, central to many generative models and transformers.",
    "related": ["Encoder-Decoder", "Transformer", "Sequence Generation", "Neural Architecture"],
    "tags": ["decoder", "sequence-generation", "neural-component"],
    "references": [
      "https://arxiv.org/abs/1706.03762",
      "https://www.tensorflow.org/text/tutorials/transformer"
    ]
  },
  {
    "term": "Embedding Space",
    "category": "Generative AI",
    "aliases": ["Vector Space", "Representation Space", "Latent Space"],
    "definition": "A high-dimensional continuous space where data is represented as dense vectors, enabling semantic operations and similarity calculations.",
    "related": ["Vector Embedding", "Semantic Similarity", "Latent Representation", "Vector Operations"],
    "tags": ["embedding-space", "vector-space", "semantic-representation"],
    "references": [
      "https://www.tensorflow.org/guide/embedding",
      "https://distill.pub/2016/misread-tsne/"
    ]
  },
  {
    "term": "Reasoning",
    "category": "AI Agents & Autonomy",
    "aliases": ["Logical Reasoning", "Inference", "Deduction"],
    "definition": "The cognitive process by which AI agents draw conclusions, make inferences, and solve problems using logical thinking and available knowledge.",
    "related": ["Decision-Making", "Planning", "Problem Solving", "Chain-of-Thought"],
    "tags": ["reasoning", "logical-thinking", "inference"],
    "references": [
      "https://en.wikipedia.org/wiki/Automated_reasoning",
      "https://plato.stanford.edu/entries/reasoning-automated/"
    ]
  },
  {
    "term": "Decision-Making",
    "category": "AI Agents & Autonomy",
    "aliases": ["Decision Process", "Choice Selection"],
    "definition": "The process by which an AI agent evaluates alternatives and selects actions to achieve its goals, often under uncertainty.",
    "related": ["Reasoning", "Utility Function", "Policy", "Action Selection"],
    "tags": ["decision-making", "choice-selection", "action-choice"],
    "references": [
      "https://en.wikipedia.org/wiki/Decision_theory",
      "https://www.cs.cmu.edu/~./15-381/slides/decision-theory.pdf"
    ]
  },
  {
    "term": "Environment Perception",
    "category": "AI Agents & Autonomy",
    "aliases": ["Sensing", "Environmental Awareness", "Perception"],
    "definition": "The ability of an AI agent to gather and interpret information about its environment through sensors or data inputs.",
    "related": ["Sensor Fusion", "State Representation", "Observation", "Environmental Modeling"],
    "tags": ["environment-perception", "sensing", "awareness"],
    "references": [
      "https://en.wikipedia.org/wiki/Machine_perception",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Action Space",
    "category": "AI Agents & Autonomy",
    "aliases": ["Action Set", "Available Actions"],
    "definition": "The complete set of all possible actions that an agent can take in a given environment or state.",
    "related": ["State Space", "Policy", "Decision-Making", "Agent Actions"],
    "tags": ["action-space", "available-actions", "agent-capabilities"],
    "references": [
      "https://en.wikipedia.org/wiki/Action_space",
      "https://spinningup.openai.com/en/latest/spinningup/rl_intro.html"
    ]
  },
  {
    "term": "State",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent State", "Environment State", "System State"],
    "definition": "A complete description of the current situation or condition of an agent and its environment at a specific point in time.",
    "related": ["State Space", "State Representation", "Environment Model", "Observation"],
    "tags": ["state", "system-condition", "environment-status"],
    "references": [
      "https://en.wikipedia.org/wiki/State_(computer_science)",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/mdp.pdf"
    ]
  },
  {
    "term": "Policy",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Policy", "Action Policy", "Decision Strategy"],
    "definition": "A strategy or mapping that defines what action an agent should take in each possible state to achieve its objectives.",
    "related": ["Decision-Making", "Action Selection", "Strategy", "Reinforcement Learning"],
    "tags": ["policy", "strategy", "action-mapping"],
    "references": [
      "https://en.wikipedia.org/wiki/Policy_(computer_science)",
      "https://spinningup.openai.com/en/latest/spinningup/rl_intro.html#policies"
    ]
  },
  {
    "term": "Task Decomposition",
    "category": "AI Agents & Autonomy",
    "aliases": ["Problem Decomposition", "Hierarchical Planning"],
    "definition": "The process of breaking down complex tasks into smaller, more manageable subtasks that can be solved independently or sequentially.",
    "related": ["Hierarchical Planning", "Subtask Identification", "Problem Solving", "Modular Design"],
    "tags": ["task-decomposition", "problem-breakdown", "hierarchical-planning"],
    "references": [
      "https://en.wikipedia.org/wiki/Decomposition_(computer_science)",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/planning.pdf"
    ]
  },
  {
    "term": "Event-Driven Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Event-Based Agent", "Reactive System"],
    "definition": "An agent that responds to specific events or triggers in its environment rather than continuously monitoring or acting.",
    "related": ["Event-Driven Architecture", "Reactive Agent", "Trigger-Based Systems", "Event Processing"],
    "tags": ["event-driven", "reactive-system", "trigger-based"],
    "references": [
      "https://en.wikipedia.org/wiki/Event-driven_architecture",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Belief-Desire-Intention (BDI)",
    "category": "AI Agents & Autonomy",
    "aliases": ["BDI Model", "BDI Architecture"],
    "definition": "A cognitive agent architecture that models rational agents through beliefs about the world, desires as goals, and intentions as committed plans.",
    "related": ["Cognitive Architecture", "Agent Modeling", "Rational Agents", "Mental States"],
    "tags": ["bdi", "cognitive-architecture", "agent-modeling"],
    "references": [
      "https://en.wikipedia.org/wiki/Belief%E2%80%93desire%E2%80%93intention_software_model",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/bdi.pdf"
    ]
  },
  {
    "term": "Dialogue Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Conversational Agent", "Chatbot", "Virtual Assistant"],
    "definition": "An AI agent designed to engage in natural language conversations with humans, understanding queries and providing appropriate responses.",
    "related": ["Natural Language Processing", "Conversational AI", "Human-Agent Interaction", "Chat Interface"],
    "tags": ["dialogue-agent", "conversational-ai", "chat-interface"],
    "references": [
      "https://en.wikipedia.org/wiki/Chatbot",
      "https://www.microsoft.com/en-us/research/project/conversational-ai/"
    ]
  },
  {
    "term": "Tool-Use (Toolformer)",
    "category": "AI Agents & Autonomy",
    "aliases": ["Tool Usage", "External Tool Integration", "API Calling"],
    "definition": "The capability of AI agents to discover, select, and effectively use external tools, APIs, or systems to extend their problem-solving abilities.",
    "related": ["Function Calling", "API Integration", "External Systems", "Capability Extension"],
    "tags": ["tool-use", "external-tools", "capability-extension"],
    "references": [
      "https://arxiv.org/abs/2302.04761",
      "https://platform.openai.com/docs/guides/function-calling"
    ]
  },
  {
    "term": "Autonomous Orchestration",
    "category": "AI Agents & Autonomy",
    "aliases": ["Self-Orchestration", "Autonomous Coordination"],
    "definition": "The ability of AI systems to self-organize and coordinate complex workflows or processes without external supervision or control.",
    "related": ["Self-Organization", "Autonomous Systems", "Workflow Management", "Coordination"],
    "tags": ["autonomous-orchestration", "self-coordination", "autonomous-workflow"],
    "references": [
      "https://arxiv.org/abs/2308.10379",
      "https://www.ibm.com/topics/workflow-automation"
    ]
  },
  {
    "term": "Simulation Environment",
    "category": "AI Agents & Autonomy",
    "aliases": ["Virtual Environment", "Test Environment", "Simulated World"],
    "definition": "A virtual or computational environment where AI agents can be trained, tested, and evaluated safely before deployment in real-world scenarios.",
    "related": ["Agent Training", "Virtual Testing", "Safe Experimentation", "Environment Modeling"],
    "tags": ["simulation-environment", "virtual-testing", "agent-training"],
    "references": [
      "https://gym.openai.com/",
      "https://unity.com/products/machine-learning-agents"
    ]
  },
  {
    "term": "Agent Interoperability",
    "category": "AI Agents & Autonomy",
    "aliases": ["Multi-Agent Compatibility", "Agent Integration"],
    "definition": "The ability of different AI agents to work together, communicate, and share resources effectively across different systems and platforms.",
    "related": ["Multi-Agent Systems", "Agent Communication", "System Integration", "Compatibility"],
    "tags": ["agent-interoperability", "system-integration", "agent-compatibility"],
    "references": [
      "https://www.fipa.org/repository/aclspecs.html",
      "https://arxiv.org/abs/2402.14916"
    ]
  },
  {
    "term": "Long-Term Memory",
    "category": "AI Agents & Autonomy",
    "aliases": ["Persistent Memory", "Historical Memory", "Experience Storage"],
    "definition": "The ability of AI agents to store, retain, and access information and experiences over extended periods, enabling learning from past interactions.",
    "related": ["Memory Systems", "Experience Replay", "Knowledge Retention", "Learning History"],
    "tags": ["long-term-memory", "persistent-storage", "experience-retention"],
    "references": [
      "https://arxiv.org/abs/2307.09288",
      "https://langchain-ai.github.io/langgraph/concepts/memory/"
    ]
  },
  {
    "term": "Vector Embedding",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Dense Embedding", "Vector Representation"],
    "definition": "Dense numerical vector representations that capture semantic meaning and relationships of data in high-dimensional space, enabling mathematical operations on complex information.",
    "related": ["Dense Vector", "Semantic Search", "Vector Database", "Similarity Search"],
    "tags": ["vector-embedding", "semantic-representation", "dense-vectors"],
    "references": [
      "https://www.tensorflow.org/guide/embedding",
      "https://huggingface.co/blog/getting-started-with-embeddings"
    ]
  },
  {
    "term": "Similarity Search",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Nearest Neighbor Search", "Vector Similarity"],
    "definition": "The process of finding items most similar to a query in vector space, typically using distance metrics like cosine similarity or Euclidean distance.",
    "related": ["Vector Search", "Cosine Similarity", "Nearest Neighbor", "Vector Database"],
    "tags": ["similarity-search", "nearest-neighbor", "vector-comparison"],
    "references": [
      "https://www.pinecone.io/learn/what-is-similarity-search/",
      "https://en.wikipedia.org/wiki/Nearest_neighbor_search"
    ]
  },
  {
    "term": "Dense Vector",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Dense Representation", "Continuous Vector"],
    "definition": "High-dimensional vectors with mostly non-zero values that provide rich, continuous representations of data for semantic understanding and similarity computation.",
    "related": ["Vector Embedding", "Sparse Vector", "Continuous Representation", "High-Dimensional Data"],
    "tags": ["dense-vector", "continuous-representation", "high-dimensional"],
    "references": [
      "https://arxiv.org/abs/2004.04906",
      "https://www.elastic.co/guide/en/elasticsearch/reference/current/dense-vector.html"
    ]
  },
  {
    "term": "Sparse Vector",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Sparse Representation", "Bag-of-Words Vector"],
    "definition": "High-dimensional vectors with mostly zero values, typically representing discrete features like word counts or TF-IDF weights in traditional information retrieval.",
    "related": ["Dense Vector", "TF-IDF", "Bag-of-Words", "Traditional IR"],
    "tags": ["sparse-vector", "discrete-representation", "traditional-ir"],
    "references": [
      "https://en.wikipedia.org/wiki/Sparse_matrix",
      "https://scikit-learn.org/stable/modules/feature_extraction.html#sparse-data"
    ]
  },
  {
    "term": "Document Indexing",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Text Indexing", "Information Indexing"],
    "definition": "The process of creating structured data representations of documents to enable fast and efficient retrieval based on content and metadata.",
    "related": ["Inverted Index", "Search Index", "Document Processing", "Information Retrieval"],
    "tags": ["document-indexing", "search-optimization", "data-structure"],
    "references": [
      "https://en.wikipedia.org/wiki/Search_engine_indexing",
      "https://www.elastic.co/guide/en/elasticsearch/reference/current/documents-indices.html"
    ]
  },
  {
    "term": "Chunking",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Document Chunking", "Text Segmentation"],
    "definition": "The process of breaking large documents into smaller, manageable pieces that can be effectively processed, indexed, and retrieved by AI systems.",
    "related": ["Document Processing", "Text Segmentation", "Information Retrieval", "Context Management"],
    "tags": ["chunking", "document-segmentation", "text-processing"],
    "references": [
      "https://python.langchain.com/docs/modules/data_connection/document_transformers/",
      "https://arxiv.org/abs/2307.03172"
    ]
  },
  {
    "term": "Query Expansion",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Query Enhancement", "Term Expansion"],
    "definition": "Techniques for automatically expanding search queries with additional relevant terms to improve retrieval effectiveness and recall.",
    "related": ["Information Retrieval", "Search Optimization", "Relevance Improvement", "Term Suggestion"],
    "tags": ["query-expansion", "search-enhancement", "retrieval-improvement"],
    "references": [
      "https://en.wikipedia.org/wiki/Query_expansion",
      "https://arxiv.org/abs/2104.08663"
    ]
  },
  {
    "term": "Context Injection",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Context Addition", "Information Injection"],
    "definition": "The process of adding relevant contextual information to queries or model inputs to improve understanding and response quality.",
    "related": ["Context Enhancement", "Information Augmentation", "Query Enhancement", "RAG"],
    "tags": ["context-injection", "information-augmentation", "context-enhancement"],
    "references": [
      "https://arxiv.org/abs/2407.01219",
      "https://www.anthropic.com/news/contextual-retrieval"
    ]
  },
  {
    "term": "Inverted Index",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Reverse Index", "Postings List"],
    "definition": "A data structure that maps each unique term in a collection to a list of documents containing that term, enabling efficient text search.",
    "related": ["Document Indexing", "Search Engine", "Information Retrieval", "Term Lookup"],
    "tags": ["inverted-index", "search-structure", "term-mapping"],
    "references": [
      "https://en.wikipedia.org/wiki/Inverted_index",
      "https://nlp.stanford.edu/IR-book/html/htmledition/a-first-take-at-building-an-inverted-index-1.html"
    ]
  },
  {
    "term": "Re-ranking",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Result Reordering", "Relevance Reranking"],
    "definition": "A two-stage retrieval process that refines and reorders initial search results using more sophisticated ranking models to improve relevance.",
    "related": ["Ranking Models", "Search Optimization", "Relevance Scoring", "Information Retrieval"],
    "tags": ["re-ranking", "relevance-optimization", "result-refinement"],
    "references": [
      "https://arxiv.org/abs/2101.05667",
      "https://www.sbert.net/examples/applications/retrieve_rerank/README.html"
    ]
  },
  {
    "term": "Corpus",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Document Collection", "Text Corpus"],
    "definition": "A large and structured collection of texts or documents used for linguistic analysis, machine learning training, or information retrieval.",
    "related": ["Document Collection", "Dataset", "Text Collection", "Training Data"],
    "tags": ["corpus", "document-collection", "text-dataset"],
    "references": [
      "https://en.wikipedia.org/wiki/Text_corpus",
      "https://www.nltk.org/book/ch02.html"
    ]
  },
  {
    "term": "Memory Store",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Information Store", "Knowledge Store"],
    "definition": "A system for persistently storing and efficiently accessing structured or unstructured information for AI applications and knowledge management.",
    "related": ["Knowledge Base", "Data Storage", "Information Management", "Persistent Memory"],
    "tags": ["memory-store", "information-storage", "knowledge-management"],
    "references": [
      "https://redis.io/docs/stack/search/",
      "https://www.mongodb.com/atlas/database"
    ]
  },
  {
    "term": "Real-Time Retrieval",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Live Retrieval", "Instant Search"],
    "definition": "Information retrieval systems that provide immediate access to current data with minimal latency, supporting real-time applications and decision-making.",
    "related": ["Real-Time Processing", "Low Latency", "Instant Search", "Live Data"],
    "tags": ["real-time-retrieval", "instant-access", "low-latency"],
    "references": [
      "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-your-data.html",
      "https://solr.apache.org/guide/solr/latest/query-guide/real-time-get.html"
    ]
  },
  {
    "term": "Knowledge Triples",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["RDF Triples", "Subject-Predicate-Object"],
    "definition": "Structured representations of knowledge in the form of subject-predicate-object statements, forming the basic building blocks of knowledge graphs.",
    "related": ["Knowledge Graph", "RDF", "Semantic Web", "Triple Store"],
    "tags": ["knowledge-triples", "rdf-triples", "structured-knowledge"],
    "references": [
      "https://www.w3.org/TR/rdf11-concepts/",
      "https://en.wikipedia.org/wiki/Semantic_triple"
    ]
  },
  {
    "term": "Knowledge Ingestion",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Data Ingestion", "Knowledge Import"],
    "definition": "The process of importing, parsing, and integrating knowledge from various sources into a knowledge management system or database.",
    "related": ["Data Integration", "ETL", "Knowledge Import", "Data Pipeline"],
    "tags": ["knowledge-ingestion", "data-import", "knowledge-integration"],
    "references": [
      "https://neo4j.com/docs/getting-started/data-import/",
      "https://www.mongodb.com/docs/atlas/data-federation/"
    ]
  },
  {
    "term": "Context Window",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Context Length", "Input Window"],
    "definition": "The maximum amount of text or tokens that a language model can process in a single input, determining the scope of context available for processing.",
    "related": ["Token Limit", "Input Constraints", "Context Management", "Model Limitations"],
    "tags": ["context-window", "input-limit", "context-constraint"],
    "references": [
      "https://platform.openai.com/docs/models/gpt-4",
      "https://arxiv.org/abs/2104.05394"
    ]
  },
  {
    "term": "Document Store",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Document Repository", "File Store"],
    "definition": "A storage system specifically designed for managing, organizing, and retrieving documents and unstructured content in various formats.",
    "related": ["Document Management", "Content Storage", "File Repository", "Unstructured Data"],
    "tags": ["document-store", "content-repository", "document-management"],
    "references": [
      "https://www.mongodb.com/document-databases",
      "https://aws.amazon.com/documentdb/"
    ]
  },
  {
    "term": "Hybrid Search",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Combined Search", "Multi-Modal Search"],
    "definition": "A search approach that combines multiple retrieval methods such as keyword-based and semantic search to improve overall search effectiveness.",
    "related": ["Semantic Search", "Keyword Search", "Search Fusion", "Multi-Modal Retrieval"],
    "tags": ["hybrid-search", "search-combination", "multi-modal-search"],
    "references": [
      "https://www.elastic.co/guide/en/elasticsearch/reference/current/knn-search.html",
      "https://arxiv.org/abs/2210.11934"
    ]
  },
  {
    "term": "Inference",
    "category": "AI Fundamentals",
    "aliases": ["Model Inference", "Prediction"],
    "definition": "The process of using a trained machine learning model to make predictions, classifications, or decisions on new, previously unseen data.",
    "related": ["Model", "Prediction", "Training", "Deployment"],
    "tags": ["inference", "prediction", "model-application"],
    "references": [
      "https://en.wikipedia.org/wiki/Statistical_inference",
      "https://www.ibm.com/topics/machine-learning-inference"
    ]
  },
  {
    "term": "Model",
    "category": "AI Fundamentals",
    "aliases": ["Machine Learning Model", "AI Model"],
    "definition": "A mathematical representation or algorithm that has been trained on data to recognize patterns and make predictions or decisions about new inputs.",
    "related": ["Training", "Algorithm", "Parameters", "Architecture"],
    "tags": ["model", "mathematical-representation", "pattern-recognition"],
    "references": [
      "https://en.wikipedia.org/wiki/Machine_learning_model",
      "https://www.ibm.com/topics/machine-learning-models"
    ]
  },
  {
    "term": "Training Data",
    "category": "AI Fundamentals",
    "aliases": ["Training Set", "Training Dataset"],
    "definition": "A collection of labeled examples used to teach a machine learning algorithm to recognize patterns and make accurate predictions.",
    "related": ["Dataset", "Supervised Learning", "Label", "Feature"],
    "tags": ["training-data", "labeled-examples", "pattern-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Training,_validation,_and_test_sets",
      "https://www.ibm.com/topics/training-data"
    ]
  },
  {
    "term": "Feature",
    "category": "AI Fundamentals",
    "aliases": ["Input Variable", "Attribute", "Predictor"],
    "definition": "An individual measurable property or characteristic of a phenomenon being observed, used as input to machine learning models.",
    "related": ["Feature Engineering", "Input", "Data Preprocessing", "Variable"],
    "tags": ["feature", "input-variable", "measurable-property"],
    "references": [
      "https://en.wikipedia.org/wiki/Feature_(machine_learning)",
      "https://scikit-learn.org/stable/modules/feature_extraction.html"
    ]
  },
  {
    "term": "Label",
    "category": "AI Fundamentals",
    "aliases": ["Target", "Ground Truth", "Output"],
    "definition": "The correct answer or expected output for a given input in supervised learning, used to train models to make accurate predictions.",
    "related": ["Supervised Learning", "Training Data", "Ground Truth", "Target Variable"],
    "tags": ["label", "target-output", "ground-truth"],
    "references": [
      "https://en.wikipedia.org/wiki/Labeled_data",
      "https://www.ibm.com/topics/labeled-data"
    ]
  },
  {
    "term": "Embedding",
    "category": "AI Fundamentals",
    "aliases": ["Vector Embedding", "Dense Representation"],
    "definition": "A dense vector representation of data that captures semantic relationships and enables mathematical operations on complex data types.",
    "related": ["Vector Representation", "Semantic Similarity", "Dimensionality Reduction", "Feature Learning"],
    "tags": ["embedding", "vector-representation", "semantic-encoding"],
    "references": [
      "https://en.wikipedia.org/wiki/Word_embedding",
      "https://www.tensorflow.org/guide/embedding"
    ]
  },
  {
    "term": "Epoch",
    "category": "AI Fundamentals",
    "aliases": ["Training Epoch", "Full Pass"],
    "definition": "One complete pass through the entire training dataset during the training process of a machine learning model.",
    "related": ["Training", "Batch", "Iteration", "Training Loop"],
    "tags": ["epoch", "training-cycle", "dataset-pass"],
    "references": [
      "https://en.wikipedia.org/wiki/Epoch_(machine_learning)",
      "https://www.deeplearningbook.org/contents/optimization.html"
    ]
  },
  {
    "term": "Dataset",
    "category": "AI Fundamentals",
    "aliases": ["Data Collection", "Data Corpus"],
    "definition": "A structured collection of data organized for use in training, validating, or testing machine learning models.",
    "related": ["Training Data", "Data Collection", "Data Preprocessing", "Data Split"],
    "tags": ["dataset", "data-collection", "structured-data"],
    "references": [
      "https://en.wikipedia.org/wiki/Data_set",
      "https://www.kaggle.com/datasets"
    ]
  },
  {
    "term": "Accuracy",
    "category": "AI Fundamentals",
    "aliases": ["Classification Accuracy", "Prediction Accuracy"],
    "definition": "A performance metric that measures the proportion of correct predictions made by a model out of all predictions made.",
    "related": ["Evaluation Metric", "Precision", "Recall", "Performance Measurement"],
    "tags": ["accuracy", "performance-metric", "correct-predictions"],
    "references": [
      "https://en.wikipedia.org/wiki/Accuracy_and_precision",
      "https://scikit-learn.org/stable/modules/model_evaluation.html#accuracy-score"
    ]
  },
  {
    "term": "Precision",
    "category": "AI Fundamentals",
    "aliases": ["Positive Predictive Value"],
    "definition": "A performance metric that measures the proportion of true positive predictions among all positive predictions made by a model.",
    "related": ["Recall", "F1 Score", "True Positive", "Evaluation Metric"],
    "tags": ["precision", "positive-predictive-value", "classification-metric"],
    "references": [
      "https://en.wikipedia.org/wiki/Precision_and_recall",
      "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.precision_score.html"
    ]
  },
  {
    "term": "Recall",
    "category": "AI Fundamentals",
    "aliases": ["Sensitivity", "True Positive Rate"],
    "definition": "A performance metric that measures the proportion of actual positive instances that were correctly identified by the model.",
    "related": ["Precision", "F1 Score", "Sensitivity", "True Positive"],
    "tags": ["recall", "sensitivity", "true-positive-rate"],
    "references": [
      "https://en.wikipedia.org/wiki/Precision_and_recall",
      "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.recall_score.html"
    ]
  },
  {
    "term": "F1 Score",
    "category": "AI Fundamentals",
    "aliases": ["F1 Measure", "F-score"],
    "definition": "A performance metric that combines precision and recall into a single score using their harmonic mean, providing a balanced measure of model performance.",
    "related": ["Precision", "Recall", "Harmonic Mean", "Classification Metrics"],
    "tags": ["f1-score", "harmonic-mean", "balanced-metric"],
    "references": [
      "https://en.wikipedia.org/wiki/F-score",
      "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.f1_score.html"
    ]
  },
  {
    "term": "Bias",
    "category": "AI Fundamentals",
    "aliases": ["Model Bias", "Statistical Bias"],
    "definition": "Systematic error in model predictions that causes consistent deviation from true values, or unfair treatment of certain groups in data.",
    "related": ["Variance", "Bias-Variance Tradeoff", "Fairness", "Systematic Error"],
    "tags": ["bias", "systematic-error", "model-fairness"],
    "references": [
      "https://en.wikipedia.org/wiki/Bias_of_an_estimator",
      "https://www.ibm.com/topics/bias-in-ai"
    ]
  },
  {
    "term": "Variance",
    "category": "AI Fundamentals",
    "aliases": ["Model Variance", "Prediction Variance"],
    "definition": "The amount by which a model's predictions would change if trained on different datasets, measuring sensitivity to training data variations.",
    "related": ["Bias", "Bias-Variance Tradeoff", "Overfitting", "Model Stability"],
    "tags": ["variance", "model-sensitivity", "prediction-variability"],
    "references": [
      "https://en.wikipedia.org/wiki/Bias%E2%80%93variance_tradeoff",
      "https://www.ibm.com/topics/bias-variance-tradeoff"
    ]
  },
  {
    "term": "Optimization",
    "category": "AI Fundamentals",
    "aliases": ["Parameter Optimization", "Model Optimization"],
    "definition": "The process of finding the best set of parameters for a model by minimizing or maximizing an objective function during training.",
    "related": ["Gradient Descent", "Objective Function", "Parameters", "Training"],
    "tags": ["optimization", "parameter-tuning", "objective-minimization"],
    "references": [
      "https://en.wikipedia.org/wiki/Mathematical_optimization",
      "https://www.deeplearningbook.org/contents/optimization.html"
    ]
  },
  {
    "term": "Hyperparameter",
    "category": "AI Fundamentals",
    "aliases": ["Hyperparameter Setting", "Configuration Parameter"],
    "definition": "Configuration settings that control the learning process and model architecture, set before training begins and not learned from data.",
    "related": ["Model Configuration", "Learning Rate", "Hyperparameter Tuning", "Model Architecture"],
    "tags": ["hyperparameter", "configuration", "learning-control"],
    "references": [
      "https://en.wikipedia.org/wiki/Hyperparameter_(machine_learning)",
      "https://scikit-learn.org/stable/modules/grid_search.html"
    ]
  },
  {
    "term": "Evaluation Metric",
    "category": "AI Fundamentals",
    "aliases": ["Performance Metric", "Assessment Measure"],
    "definition": "Quantitative measures used to assess and compare the performance of machine learning models on specific tasks or datasets.",
    "related": ["Model Evaluation", "Performance Assessment", "Accuracy", "Validation"],
    "tags": ["evaluation-metric", "performance-measurement", "model-assessment"],
    "references": [
      "https://scikit-learn.org/stable/modules/model_evaluation.html",
      "https://www.ibm.com/topics/model-evaluation"
    ]
  },
  {
    "term": "K-Nearest Neighbors",
    "category": "Machine Learning Algorithms",
    "aliases": ["KNN", "k-NN", "Nearest Neighbor"],
    "definition": "A non-parametric, instance-based learning algorithm that classifies data points based on the majority class of their k nearest neighbors in the feature space.",
    "related": ["Classification", "Instance-Based Learning", "Distance Metrics", "Lazy Learning"],
    "tags": ["knn", "instance-based", "non-parametric"],
    "references": [
      "https://en.wikipedia.org/wiki/K-nearest_neighbors_algorithm",
      "https://scikit-learn.org/stable/modules/neighbors.html"
    ]
  },
  {
    "term": "XGBoost",
    "category": "Machine Learning Algorithms",
    "aliases": ["Extreme Gradient Boosting", "XGB"],
    "definition": "An optimized gradient boosting framework designed for speed and performance, using advanced regularization techniques and efficient tree construction algorithms.",
    "related": ["Gradient Boosting", "Ensemble Methods", "Decision Trees", "Regularization"],
    "tags": ["xgboost", "gradient-boosting", "ensemble"],
    "references": [
      "https://xgboost.readthedocs.io/",
      "https://arxiv.org/abs/1603.02754"
    ]
  },
  {
    "term": "Dimensionality Reduction",
    "category": "Machine Learning Algorithms",
    "aliases": ["Feature Reduction", "Dimension Reduction"],
    "definition": "Techniques that reduce the number of input features while preserving important information, helping to combat the curse of dimensionality and improve model performance.",
    "related": ["Principal Component Analysis", "Feature Selection", "Curse of Dimensionality", "Data Preprocessing"],
    "tags": ["dimensionality-reduction", "feature-reduction", "preprocessing"],
    "references": [
      "https://en.wikipedia.org/wiki/Dimensionality_reduction",
      "https://scikit-learn.org/stable/modules/decomposition.html"
    ]
  },
  {
    "term": "Ensemble Learning",
    "category": "Machine Learning Algorithms",
    "aliases": ["Ensemble Methods", "Model Ensemble"],
    "definition": "Machine learning techniques that combine predictions from multiple models to create a stronger predictor than any individual model alone.",
    "related": ["Bagging", "Boosting", "Random Forest", "Model Combination"],
    "tags": ["ensemble-learning", "model-combination", "meta-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Ensemble_learning",
      "https://scikit-learn.org/stable/modules/ensemble.html"
    ]
  },
  {
    "term": "Transfer Learning",
    "category": "Machine Learning Algorithms",
    "aliases": ["Domain Adaptation", "Knowledge Transfer"],
    "definition": "A machine learning technique where a model developed for one task is reused as the starting point for a model on a related task, leveraging pre-learned features.",
    "related": ["Fine-tuning", "Pre-trained Models", "Domain Adaptation", "Feature Extraction"],
    "tags": ["transfer-learning", "knowledge-transfer", "pre-trained"],
    "references": [
      "https://en.wikipedia.org/wiki/Transfer_learning",
      "https://www.tensorflow.org/tutorials/images/transfer_learning"
    ]
  },
  {
    "term": "Prompt",
    "category": "Generative AI",
    "aliases": ["Input Prompt", "Text Prompt", "Query"],
    "definition": "A text input or instruction given to an AI model to guide its generation, serving as the starting point for the model's response or creative output.",
    "related": ["Prompt Engineering", "Input", "Text Generation", "Model Interaction"],
    "tags": ["prompt", "input-instruction", "model-guidance"],
    "references": [
      "https://platform.openai.com/docs/guides/prompt-engineering",
      "https://www.promptingguide.ai/"
    ]
  },
  {
    "term": "Text Generation",
    "category": "Generative AI",
    "aliases": ["Natural Language Generation", "NLG", "Text Synthesis"],
    "definition": "The process of automatically creating human-like text using AI models, including stories, articles, code, and conversational responses.",
    "related": ["Language Model", "Content Creation", "Natural Language Processing", "Autoregressive Generation"],
    "tags": ["text-generation", "language-generation", "content-creation"],
    "references": [
      "https://en.wikipedia.org/wiki/Natural_language_generation",
      "https://huggingface.co/docs/transformers/tasks/text_generation"
    ]
  },
  {
    "term": "Image Generation",
    "category": "Generative AI",
    "aliases": ["Image Synthesis", "Visual Generation", "Generative Imagery"],
    "definition": "The creation of new images using AI models, either from text descriptions, random noise, or other images as input.",
    "related": ["Diffusion Model", "Text-to-Image Generation", "GAN", "Computer Vision"],
    "tags": ["image-generation", "visual-synthesis", "creative-ai"],
    "references": [
      "https://stability.ai/stable-diffusion",
      "https://openai.com/dall-e-3"
    ]
  },
  {
    "term": "Temperature (in sampling)",
    "category": "Generative AI",
    "aliases": ["Sampling Temperature", "Generation Temperature"],
    "definition": "A parameter that controls the randomness and creativity in text generation, with higher values producing more diverse but potentially less coherent outputs.",
    "related": ["Sampling", "Text Generation", "Randomness Control", "Output Diversity"],
    "tags": ["temperature", "sampling-parameter", "randomness-control"],
    "references": [
      "https://platform.openai.com/docs/api-reference/completions/create#completions/create-temperature",
      "https://huggingface.co/blog/how-to-generate"
    ]
  },
  {
    "term": "Top-K Sampling",
    "category": "Generative AI",
    "aliases": ["Top-K", "K-sampling"],
    "definition": "A text generation technique that samples the next token from only the K most likely candidates, balancing quality and diversity in generated text.",
    "related": ["Sampling", "Text Generation", "Top-P Sampling", "Token Selection"],
    "tags": ["top-k-sampling", "token-selection", "generation-strategy"],
    "references": [
      "https://arxiv.org/abs/1904.09751",
      "https://huggingface.co/blog/how-to-generate#top-k-sampling"
    ]
  },
  {
    "term": "Top-P (Nucleus) Sampling",
    "category": "Generative AI",
    "aliases": ["Nucleus Sampling", "Top-P", "P-sampling"],
    "definition": "A dynamic sampling method that selects tokens from the smallest set whose cumulative probability exceeds a threshold P, adapting to context.",
    "related": ["Sampling", "Text Generation", "Top-K Sampling", "Dynamic Selection"],
    "tags": ["top-p-sampling", "nucleus-sampling", "dynamic-selection"],
    "references": [
      "https://arxiv.org/abs/1904.09751",
      "https://huggingface.co/blog/how-to-generate#nucleus-sampling"
    ]
  },
  {
    "term": "Multimodal Model",
    "category": "Generative AI",
    "aliases": ["Cross-Modal Model", "Multi-Modal AI"],
    "definition": "AI models that can process and generate content across multiple modalities such as text, images, audio, and video in a unified framework.",
    "related": ["Multimodal AI", "Cross-Modal Learning", "Vision-Language Models", "CLIP"],
    "tags": ["multimodal", "cross-modal", "unified-model"],
    "references": [
      "https://openai.com/research/clip",
      "https://arxiv.org/abs/2103.00020"
    ]
  },
  {
    "term": "Safety Alignment",
    "category": "Generative AI",
    "aliases": ["AI Alignment", "Model Alignment", "Value Alignment"],
    "definition": "The process of ensuring AI models behave according to human values and intentions, producing helpful, harmless, and honest outputs.",
    "related": ["AI Safety", "Constitutional AI", "RLHF", "Value Learning"],
    "tags": ["safety-alignment", "value-alignment", "ai-safety"],
    "references": [
      "https://www.anthropic.com/news/constitutional-ai-harmlessness-from-ai-feedback",
      "https://arxiv.org/abs/2212.08073"
    ]
  },
  {
    "term": "Content Filtering",
    "category": "Generative AI",
    "aliases": ["Output Filtering", "Safety Filtering", "Content Moderation"],
    "definition": "Systems and techniques used to detect and prevent AI models from generating inappropriate, harmful, or policy-violating content.",
    "related": ["Safety Systems", "Content Moderation", "Harmful Content Detection", "Output Control"],
    "tags": ["content-filtering", "safety-systems", "output-control"],
    "references": [
      "https://platform.openai.com/docs/guides/moderation",
      "https://www.anthropic.com/news/ai-safety-via-debate"
    ]
  },
  {
    "term": "Decoder",
    "category": "Generative AI",
    "aliases": ["Decoder Network", "Generation Module"],
    "definition": "A neural network component that generates output sequences from encoded representations, central to many generative models and transformers.",
    "related": ["Encoder-Decoder", "Transformer", "Sequence Generation", "Neural Architecture"],
    "tags": ["decoder", "sequence-generation", "neural-component"],
    "references": [
      "https://arxiv.org/abs/1706.03762",
      "https://www.tensorflow.org/text/tutorials/transformer"
    ]
  },
  {
    "term": "Embedding Space",
    "category": "Generative AI",
    "aliases": ["Vector Space", "Representation Space", "Latent Space"],
    "definition": "A high-dimensional continuous space where data is represented as dense vectors, enabling semantic operations and similarity calculations.",
    "related": ["Vector Embedding", "Semantic Similarity", "Latent Representation", "Vector Operations"],
    "tags": ["embedding-space", "vector-space", "semantic-representation"],
    "references": [
      "https://www.tensorflow.org/guide/embedding",
      "https://distill.pub/2016/misread-tsne/"
    ]
  },
  {
    "term": "Reasoning",
    "category": "AI Agents & Autonomy",
    "aliases": ["Logical Reasoning", "Inference", "Deduction"],
    "definition": "The cognitive process by which AI agents draw conclusions, make inferences, and solve problems using logical thinking and available knowledge.",
    "related": ["Decision-Making", "Planning", "Problem Solving", "Chain-of-Thought"],
    "tags": ["reasoning", "logical-thinking", "inference"],
    "references": [
      "https://en.wikipedia.org/wiki/Automated_reasoning",
      "https://plato.stanford.edu/entries/reasoning-automated/"
    ]
  },
  {
    "term": "Decision-Making",
    "category": "AI Agents & Autonomy",
    "aliases": ["Decision Process", "Choice Selection"],
    "definition": "The process by which an AI agent evaluates alternatives and selects actions to achieve its goals, often under uncertainty.",
    "related": ["Reasoning", "Utility Function", "Policy", "Action Selection"],
    "tags": ["decision-making", "choice-selection", "action-choice"],
    "references": [
      "https://en.wikipedia.org/wiki/Decision_theory",
      "https://www.cs.cmu.edu/~./15-381/slides/decision-theory.pdf"
    ]
  },
  {
    "term": "Environment Perception",
    "category": "AI Agents & Autonomy",
    "aliases": ["Sensing", "Environmental Awareness", "Perception"],
    "definition": "The ability of an AI agent to gather and interpret information about its environment through sensors or data inputs.",
    "related": ["Sensor Fusion", "State Representation", "Observation", "Environmental Modeling"],
    "tags": ["environment-perception", "sensing", "awareness"],
    "references": [
      "https://en.wikipedia.org/wiki/Machine_perception",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Action Space",
    "category": "AI Agents & Autonomy",
    "aliases": ["Action Set", "Available Actions"],
    "definition": "The complete set of all possible actions that an agent can take in a given environment or state.",
    "related": ["State Space", "Policy", "Decision-Making", "Agent Actions"],
    "tags": ["action-space", "available-actions", "agent-capabilities"],
    "references": [
      "https://en.wikipedia.org/wiki/Action_space",
      "https://spinningup.openai.com/en/latest/spinningup/rl_intro.html"
    ]
  },
  {
    "term": "State",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent State", "Environment State", "System State"],
    "definition": "A complete description of the current situation or condition of an agent and its environment at a specific point in time.",
    "related": ["State Space", "State Representation", "Environment Model", "Observation"],
    "tags": ["state", "system-condition", "environment-status"],
    "references": [
      "https://en.wikipedia.org/wiki/State_(computer_science)",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/mdp.pdf"
    ]
  },
  {
    "term": "Policy",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Policy", "Action Policy", "Decision Strategy"],
    "definition": "A strategy or mapping that defines what action an agent should take in each possible state to achieve its objectives.",
    "related": ["Decision-Making", "Action Selection", "Strategy", "Reinforcement Learning"],
    "tags": ["policy", "strategy", "action-mapping"],
    "references": [
      "https://en.wikipedia.org/wiki/Policy_(computer_science)",
      "https://spinningup.openai.com/en/latest/spinningup/rl_intro.html#policies"
    ]
  },
  {
    "term": "Task Decomposition",
    "category": "AI Agents & Autonomy",
    "aliases": ["Problem Decomposition", "Hierarchical Planning"],
    "definition": "The process of breaking down complex tasks into smaller, more manageable subtasks that can be solved independently or sequentially.",
    "related": ["Hierarchical Planning", "Subtask Identification", "Problem Solving", "Modular Design"],
    "tags": ["task-decomposition", "problem-breakdown", "hierarchical-planning"],
    "references": [
      "https://en.wikipedia.org/wiki/Decomposition_(computer_science)",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/planning.pdf"
    ]
  },
  {
    "term": "Event-Driven Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Event-Based Agent", "Reactive System"],
    "definition": "An agent that responds to specific events or triggers in its environment rather than continuously monitoring or acting.",
    "related": ["Event-Driven Architecture", "Reactive Agent", "Trigger-Based Systems", "Event Processing"],
    "tags": ["event-driven", "reactive-system", "trigger-based"],
    "references": [
      "https://en.wikipedia.org/wiki/Event-driven_architecture",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Belief-Desire-Intention (BDI)",
    "category": "AI Agents & Autonomy",
    "aliases": ["BDI Model", "BDI Architecture"],
    "definition": "A cognitive agent architecture that models rational agents through beliefs about the world, desires as goals, and intentions as committed plans.",
    "related": ["Cognitive Architecture", "Agent Modeling", "Rational Agents", "Mental States"],
    "tags": ["bdi", "cognitive-architecture", "agent-modeling"],
    "references": [
      "https://en.wikipedia.org/wiki/Belief%E2%80%93desire%E2%80%93intention_software_model",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/bdi.pdf"
    ]
  },
  {
    "term": "Dialogue Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Conversational Agent", "Chatbot", "Virtual Assistant"],
    "definition": "An AI agent designed to engage in natural language conversations with humans, understanding queries and providing appropriate responses.",
    "related": ["Natural Language Processing", "Conversational AI", "Human-Agent Interaction", "Chat Interface"],
    "tags": ["dialogue-agent", "conversational-ai", "chat-interface"],
    "references": [
      "https://en.wikipedia.org/wiki/Chatbot",
      "https://www.microsoft.com/en-us/research/project/conversational-ai/"
    ]
  },
  {
    "term": "Tool-Use (Toolformer)",
    "category": "AI Agents & Autonomy",
    "aliases": ["Tool Usage", "External Tool Integration", "API Calling"],
    "definition": "The capability of AI agents to discover, select, and effectively use external tools, APIs, or systems to extend their problem-solving abilities.",
    "related": ["Function Calling", "API Integration", "External Systems", "Capability Extension"],
    "tags": ["tool-use", "external-tools", "capability-extension"],
    "references": [
      "https://arxiv.org/abs/2302.04761",
      "https://platform.openai.com/docs/guides/function-calling"
    ]
  },
  {
    "term": "Autonomous Orchestration",
    "category": "AI Agents & Autonomy",
    "aliases": ["Self-Orchestration", "Autonomous Coordination"],
    "definition": "The ability of AI systems to self-organize and coordinate complex workflows or processes without external supervision or control.",
    "related": ["Self-Organization", "Autonomous Systems", "Workflow Management", "Coordination"],
    "tags": ["autonomous-orchestration", "self-coordination", "autonomous-workflow"],
    "references": [
      "https://arxiv.org/abs/2308.10379",
      "https://www.ibm.com/topics/workflow-automation"
    ]
  },
  {
    "term": "Simulation Environment",
    "category": "AI Agents & Autonomy",
    "aliases": ["Virtual Environment", "Test Environment", "Simulated World"],
    "definition": "A virtual or computational environment where AI agents can be trained, tested, and evaluated safely before deployment in real-world scenarios.",
    "related": ["Agent Training", "Virtual Testing", "Safe Experimentation", "Environment Modeling"],
    "tags": ["simulation-environment", "virtual-testing", "agent-training"],
    "references": [
      "https://gym.openai.com/",
      "https://unity.com/products/machine-learning-agents"
    ]
  },
  {
    "term": "Agent Interoperability",
    "category": "AI Agents & Autonomy",
    "aliases": ["Multi-Agent Compatibility", "Agent Integration"],
    "definition": "The ability of different AI agents to work together, communicate, and share resources effectively across different systems and platforms.",
    "related": ["Multi-Agent Systems", "Agent Communication", "System Integration", "Compatibility"],
    "tags": ["agent-interoperability", "system-integration", "agent-compatibility"],
    "references": [
      "https://www.fipa.org/repository/aclspecs.html",
      "https://arxiv.org/abs/2402.14916"
    ]
  },
  {
    "term": "Agent-Based System",
    "category": "AI Fundamentals",
    "aliases": ["Multi-Agent Framework", "Agent Architecture"],
    "definition": "A computational system composed of multiple autonomous agents that interact with each other and their environment to achieve individual or collective goals.",
    "related": ["AI Agent", "Multi-Agent System", "Distributed AI", "Autonomous System"],
    "tags": ["agent-based", "distributed-system", "autonomous-agents"],
    "references": [
      "https://en.wikipedia.org/wiki/Agent-based_model",
      "https://www.sciencedirect.com/topics/computer-science/agent-based-system"
    ]
  },
  {
    "term": "Orchestration",
    "category": "AI Fundamentals",
    "aliases": ["System Orchestration", "Workflow Coordination"],
    "definition": "The automated coordination and management of complex workflows, processes, or system components to achieve desired outcomes efficiently.",
    "related": ["Workflow Management", "System Coordination", "Process Automation", "Agent Orchestration"],
    "tags": ["orchestration", "workflow-management", "coordination"],
    "references": [
      "https://en.wikipedia.org/wiki/Orchestration_(computing)",
      "https://www.ibm.com/topics/orchestration"
    ]
  },
  {
    "term": "Context Propagation",
    "category": "AI Fundamentals",
    "aliases": ["Context Passing", "Context Flow"],
    "definition": "The process of maintaining and passing contextual information through different components or stages of a system to ensure coherent behavior.",
    "related": ["Context Management", "Information Flow", "State Management", "System Integration"],
    "tags": ["context-propagation", "information-flow", "system-integration"],
    "references": [
      "https://opentelemetry.io/docs/concepts/context-propagation/",
      "https://microservices.io/patterns/observability/distributed-tracing.html"
    ]
  },
  {
    "term": "Observability",
    "category": "AI Fundamentals",
    "aliases": ["System Observability", "Operational Visibility"],
    "definition": "The ability to understand the internal state and behavior of a system through external outputs, enabling monitoring, debugging, and optimization.",
    "related": ["Monitoring", "System Visibility", "Performance Tracking", "Debugging"],
    "tags": ["observability", "monitoring", "system-visibility"],
    "references": [
      "https://en.wikipedia.org/wiki/Observability",
      "https://opentelemetry.io/docs/concepts/observability-primer/"
    ]
  },
  {
    "term": "Long-Lived Agents",
    "category": "AI Agents & Autonomy",
    "aliases": ["Persistent Agents", "Continuous Agents"],
    "definition": "AI agents designed to operate continuously over extended periods, maintaining state and learning from experiences across multiple interactions and sessions.",
    "related": ["Agent Memory", "Persistent Memory", "Continuous Learning", "Stateful Agent"],
    "tags": ["long-lived", "persistent-agents", "continuous-operation"],
    "references": [
      "https://arxiv.org/abs/2307.09288",
      "https://www.anthropic.com/news/claude-3-model-card"
    ]
  },
  {
    "term": "Autonomous Behavior",
    "category": "AI Agents & Autonomy",
    "aliases": ["Self-Directed Behavior", "Independent Action"],
    "definition": "The ability of AI systems to act independently without direct human control, making decisions and taking actions based on their programming and environmental inputs.",
    "related": ["Autonomous System", "Self-Direction", "Independent Decision-Making", "Autonomous Agents"],
    "tags": ["autonomous-behavior", "self-direction", "independent-action"],
    "references": [
      "https://en.wikipedia.org/wiki/Autonomous_agent",
      "https://www.rand.org/topics/autonomous-systems.html"
    ]
  },
  {
    "term": "Message-Based Communication",
    "category": "AI Agents & Autonomy",
    "aliases": ["Message Passing", "Asynchronous Communication"],
    "definition": "A communication paradigm where agents or system components exchange information through discrete messages, enabling loose coupling and scalable interactions.",
    "related": ["Agent Communication", "Message Passing", "Distributed Systems", "Inter-Agent Communication"],
    "tags": ["message-based", "communication-protocol", "distributed-communication"],
    "references": [
      "https://en.wikipedia.org/wiki/Message_passing",
      "https://www.fipa.org/repository/aclspecs.html"
    ]
  },
  {
    "term": "Stateful Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["State-Maintaining Agent", "Memory-Enabled Agent"],
    "definition": "An AI agent that maintains internal state and memory across interactions, enabling context-aware responses and learning from past experiences.",
    "related": ["Agent Memory", "State Management", "Context Preservation", "Persistent Memory"],
    "tags": ["stateful", "memory-enabled", "context-aware"],
    "references": [
      "https://langchain-ai.github.io/langgraph/concepts/memory/",
      "https://arxiv.org/abs/2307.09288"
    ]
  },
  {
    "term": "Adaptive Behavior",
    "category": "AI Agents & Autonomy",
    "aliases": ["Behavioral Adaptation", "Dynamic Adjustment"],
    "definition": "The ability of AI agents to modify their behavior, strategies, or responses based on changing environments, feedback, or new experiences.",
    "related": ["Learning", "Behavioral Flexibility", "Environmental Adaptation", "Dynamic Systems"],
    "tags": ["adaptive-behavior", "behavioral-flexibility", "dynamic-adjustment"],
    "references": [
      "https://en.wikipedia.org/wiki/Adaptive_behavior",
      "https://www.nature.com/articles/s41586-019-1724-z"
    ]
  },
  {
    "term": "Agent Lifecycle Management",
    "category": "Model Deployment & Operations",
    "aliases": ["Agent LCM", "Agent Management"],
    "definition": "The systematic management of AI agents throughout their operational lifecycle, including deployment, monitoring, updating, scaling, and decommissioning.",
    "related": ["Model Deployment", "Agent Monitoring", "MLOps", "System Lifecycle"],
    "tags": ["lifecycle-management", "agent-operations", "deployment-management"],
    "references": [
      "https://kubernetes.io/docs/concepts/workloads/controllers/deployment/",
      "https://www.ibm.com/topics/application-lifecycle-management"
    ]
  },
  {
    "term": "Configuration-Driven Behavior",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Config-Based Behavior", "Parameter-Driven Systems"],
    "definition": "An architectural approach where AI system behavior is controlled through external configuration files or parameters, enabling dynamic modification without code changes.",
    "related": ["Hyperparameter", "System Configuration", "Dynamic Behavior", "External Configuration"],
    "tags": ["configuration-driven", "dynamic-behavior", "external-control"],
    "references": [
      "https://12factor.net/config",
      "https://kubernetes.io/docs/concepts/configuration/"
    ]
  },
  {
    "term": "Plugin Architecture",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Modular Architecture", "Extension Framework"],
    "definition": "A software design pattern that allows core functionality to be extended through loosely-coupled, interchangeable modules or plugins, enabling flexible AI system capabilities.",
    "related": ["Modular Design", "Extension Framework", "Component Architecture", "Tool Use"],
    "tags": ["plugin-architecture", "modular-design", "extensible-systems"],
    "references": [
      "https://en.wikipedia.org/wiki/Plug-in_(computing)",
      "https://martinfowler.com/articles/plugins.html"
    ]
  },
  {
    "term": "Observability Hooks",
    "category": "Model Deployment & Operations",
    "aliases": ["Monitoring Hooks", "Instrumentation Points"],
    "definition": "Predefined integration points in AI systems that enable external monitoring, logging, and observability tools to collect metrics and trace system behavior.",
    "related": ["Observability", "System Monitoring", "Instrumentation", "Performance Tracking"],
    "tags": ["observability-hooks", "monitoring-integration", "instrumentation"],
    "references": [
      "https://opentelemetry.io/docs/concepts/instrumentation/",
      "https://docs.datadoghq.com/tracing/guide/custom_instrumentation/"
    ]
  },
  {
    "term": "LLM Integration",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Large Language Model Integration", "Language Model Integration"],
    "definition": "The process and patterns for incorporating large language models into broader AI systems, applications, or workflows, including API integration and orchestration.",
    "related": ["Large Language Model", "API Integration", "System Integration", "Model Serving"],
    "tags": ["llm-integration", "language-model-integration", "api-integration"],
    "references": [
      "https://platform.openai.com/docs/guides/gpt",
      "https://docs.anthropic.com/claude/docs/integrating-claude"
    ]
  },
  {
    "term": "Event Rehydration",
    "category": "Data Engineering for AI",
    "aliases": ["Event Replay", "State Reconstruction"],
    "definition": "The process of reconstructing system state or agent memory by replaying historical events or interactions, enabling recovery and analysis of past behaviors.",
    "related": ["Event Sourcing", "State Recovery", "Replay Systems", "Historical Analysis"],
    "tags": ["event-rehydration", "state-reconstruction", "replay-systems"],
    "references": [
      "https://martinfowler.com/eaaDev/EventSourcing.html",
      "https://docs.microsoft.com/en-us/azure/architecture/patterns/event-sourcing"
    ]
  },
  {
    "term": "Sidecar Pattern",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Sidecar Deployment", "Companion Service"],
    "definition": "A deployment pattern where auxiliary functionality runs alongside the main application in a separate container or process, commonly used for monitoring, security, or communication in AI systems.",
    "related": ["Microservices", "Container Deployment", "Service Mesh", "Distributed Systems"],
    "tags": ["sidecar-pattern", "deployment-pattern", "microservices"],
    "references": [
      "https://docs.microsoft.com/en-us/azure/architecture/patterns/sidecar",
      "https://istio.io/latest/docs/concepts/what-is-istio/#what-is-a-service-mesh"
    ]
  },
  {
    "term": "Generalization",
    "category": "AI Fundamentals",
    "aliases": ["Model Generalization", "Learning Generalization"],
    "definition": "The ability of a machine learning model to perform well on new, unseen data that differs from the training data, indicating the model has learned underlying patterns rather than memorizing examples.",
    "related": ["Overfitting", "Underfitting", "Bias-Variance Tradeoff", "Test Data"],
    "tags": ["generalization", "model-performance", "learning-theory"],
    "references": [
      "https://en.wikipedia.org/wiki/Generalization_error",
      "https://www.deeplearningbook.org/contents/regularization.html"
    ]
  },
  {
    "term": "Encoder",
    "category": "Deep Learning Architectures",
    "aliases": ["Encoder Network", "Encoding Module"],
    "definition": "A neural network component that transforms input data into a compressed, meaningful representation, typically the first part of an encoder-decoder architecture.",
    "related": ["Decoder", "Encoder-Decoder", "Transformer", "Representation Learning"],
    "tags": ["encoder", "representation-learning", "neural-component"],
    "references": [
      "https://arxiv.org/abs/1706.03762",
      "https://www.tensorflow.org/text/tutorials/transformer"
    ]
  },
  {
    "term": "Pre-training",
    "category": "Generative AI",
    "aliases": ["Model Pre-training", "Initial Training"],
    "definition": "The initial phase of training large models on vast amounts of unlabeled data to learn general patterns and representations before fine-tuning on specific tasks.",
    "related": ["Fine-tuning", "Transfer Learning", "Foundation Model", "Self-Supervised Learning"],
    "tags": ["pre-training", "foundation-training", "general-learning"],
    "references": [
      "https://arxiv.org/abs/1810.04805",
      "https://huggingface.co/docs/transformers/pretraining"
    ]
  },
  {
    "term": "Synthetic Data",
    "category": "Generative AI",
    "aliases": ["Artificial Data", "Generated Data"],
    "definition": "Artificially created data that mimics real-world data characteristics, generated using AI models to augment training datasets or protect privacy.",
    "related": ["Data Augmentation", "Privacy Protection", "Generative Model", "Training Data"],
    "tags": ["synthetic-data", "data-generation", "privacy-preserving"],
    "references": [
      "https://en.wikipedia.org/wiki/Synthetic_data",
      "https://arxiv.org/abs/2205.06564"
    ]
  },
  {
    "term": "Style Transfer",
    "category": "Generative AI",
    "aliases": ["Neural Style Transfer", "Artistic Style Transfer"],
    "definition": "A technique that applies the artistic style of one image to the content of another, creating new images that combine content and style elements.",
    "related": ["Image Generation", "Computer Vision", "Neural Networks", "Creative AI"],
    "tags": ["style-transfer", "image-synthesis", "artistic-ai"],
    "references": [
      "https://arxiv.org/abs/1508.06576",
      "https://www.tensorflow.org/tutorials/generative/style_transfer"
    ]
  },
  {
    "term": "Positional Encoding",
    "category": "Deep Learning Architectures",
    "aliases": ["Position Embedding", "Sequence Positioning"],
    "definition": "A technique used in transformer models to inject information about the position of tokens in a sequence, enabling the model to understand word order and sequence structure.",
    "related": ["Transformer", "Attention Mechanism", "Sequence Modeling", "Token Position"],
    "tags": ["positional-encoding", "sequence-modeling", "transformer-component"],
    "references": [
      "https://arxiv.org/abs/1706.03762",
      "https://kazemnejad.com/blog/transformer_architecture_positional_encoding/"
    ]
  },
  {
    "term": "Language Modeling",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Statistical Language Modeling", "LM"],
    "definition": "The task of predicting the probability of word sequences in natural language, forming the foundation for many NLP applications including text generation and completion.",
    "related": ["Language Model", "N-gram", "Autoregressive Model", "Text Generation"],
    "tags": ["language-modeling", "probability-distribution", "sequence-prediction"],
    "references": [
      "https://web.stanford.edu/~jurafsky/slp3/3.pdf",
      "https://huggingface.co/docs/transformers/tasks/language_modeling"
    ]
  },
  {
    "term": "Self-Attention",
    "category": "Deep Learning Architectures",
    "aliases": ["Intra-Attention", "Self-Attention Mechanism"],
    "definition": "An attention mechanism that relates different positions within a single sequence to compute a representation of that sequence, fundamental to transformer architectures.",
    "related": ["Attention Mechanism", "Transformer", "Multi-Head Attention", "Query-Key-Value"],
    "tags": ["self-attention", "attention-mechanism", "sequence-modeling"],
    "references": [
      "https://arxiv.org/abs/1706.03762",
      "https://lilianweng.github.io/posts/2018-06-24-attention/"
    ]
  },
  {
    "term": "Safety & Guardrails",
    "category": "Ethics & Governance",
    "aliases": ["AI Safety Guardrails", "Safety Measures"],
    "definition": "Technical and procedural measures implemented to ensure AI systems operate safely and within acceptable boundaries, preventing harmful or unintended behaviors.",
    "related": ["AI Safety", "Content Filtering", "Model Alignment", "Risk Mitigation"],
    "tags": ["safety-guardrails", "risk-mitigation", "safe-ai"],
    "references": [
      "https://www.anthropic.com/news/constitutional-ai-harmlessness-from-ai-feedback",
      "https://platform.openai.com/docs/guides/safety-best-practices"
    ]
  },
  {
    "term": "System Prompt",
    "category": "Generative AI",
    "aliases": ["System Message", "System Instruction"],
    "definition": "Initial instructions or context provided to an AI model that define its role, behavior, and operational parameters for a conversation or task session.",
    "related": ["Prompt Engineering", "User Prompt", "Context Setting", "Instruction Following"],
    "tags": ["system-prompt", "context-setting", "behavior-control"],
    "references": [
      "https://platform.openai.com/docs/guides/prompt-engineering/strategy-write-clear-instructions",
      "https://docs.anthropic.com/claude/docs/system-prompts"
    ]
  },
  {
    "term": "User Prompt",
    "category": "Generative AI",
    "aliases": ["User Input", "User Query"],
    "definition": "The input or question provided by a user to an AI system, typically containing the specific request or task the user wants the AI to perform.",
    "related": ["System Prompt", "Prompt Engineering", "User Input", "Query Processing"],
    "tags": ["user-prompt", "user-input", "query"],
    "references": [
      "https://platform.openai.com/docs/guides/prompt-engineering",
      "https://www.promptingguide.ai/introduction/basics"
    ]
  },
  {
    "term": "Token Limit",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Context Limit", "Input Limit"],
    "definition": "The maximum number of tokens that a language model can process in a single input or maintain in its context window, determining the scope of information it can consider.",
    "related": ["Context Window", "Token", "Model Limitations", "Input Constraints"],
    "tags": ["token-limit", "context-constraint", "model-limitation"],
    "references": [
      "https://platform.openai.com/docs/models/gpt-4",
      "https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them"
    ]
  },
  {
    "term": "Parameter Count",
    "category": "AI Fundamentals",
    "aliases": ["Model Parameters", "Model Size"],
    "definition": "The total number of trainable parameters in a neural network or AI model, typically measured in millions (M) or billions (B), indicating model complexity and capacity.",
    "related": ["Model Architecture", "Model Complexity", "Scaling Laws", "Computational Requirements"],
    "tags": ["parameter-count", "model-size", "model-complexity"],
    "references": [
      "https://huggingface.co/docs/transformers/model_summary",
      "https://arxiv.org/abs/2001.08361"
    ]
  },
  {
    "term": "Validation Data",
    "category": "AI Fundamentals",
    "aliases": ["Validation Set", "Dev Set"],
    "definition": "A subset of data used during training to tune hyperparameters and evaluate model performance, helping to prevent overfitting while maintaining an unbiased test set.",
    "related": ["Training Data", "Test Data", "Cross-Validation", "Model Evaluation"],
    "tags": ["validation-data", "model-evaluation", "hyperparameter-tuning"],
    "references": [
      "https://en.wikipedia.org/wiki/Training,_validation,_and_test_sets",
      "https://scikit-learn.org/stable/modules/cross_validation.html"
    ]
  },
  {
    "term": "Test Data",
    "category": "AI Fundamentals",
    "aliases": ["Test Set", "Hold-out Set"],
    "definition": "A subset of data held back from training and validation, used only for final evaluation to provide an unbiased assessment of model performance.",
    "related": ["Training Data", "Validation Data", "Model Evaluation", "Generalization"],
    "tags": ["test-data", "model-evaluation", "unbiased-assessment"],
    "references": [
      "https://en.wikipedia.org/wiki/Training,_validation,_and_test_sets",
      "https://www.ibm.com/topics/training-data"
    ]
  },
  {
    "term": "Model Evaluation",
    "category": "AI Fundamentals",
    "aliases": ["Performance Assessment", "Model Assessment"],
    "definition": "The process of measuring and assessing how well a machine learning model performs using various metrics and validation techniques.",
    "related": ["Evaluation Metric", "Test Data", "Validation Data", "Performance Metrics"],
    "tags": ["model-evaluation", "performance-assessment", "validation"],
    "references": [
      "https://scikit-learn.org/stable/modules/model_evaluation.html",
      "https://www.ibm.com/topics/model-evaluation"
    ]
  },
  {
    "term": "Confusion Matrix",
    "category": "AI Fundamentals",
    "aliases": ["Error Matrix", "Contingency Table"],
    "definition": "A table used to evaluate classification model performance, showing the counts of true vs predicted classifications for each class.",
    "related": ["Classification", "Precision", "Recall", "F1 Score"],
    "tags": ["confusion-matrix", "classification-evaluation", "performance-visualization"],
    "references": [
      "https://en.wikipedia.org/wiki/Confusion_matrix",
      "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html"
    ]
  },
  {
    "term": "ROC Curve",
    "category": "AI Fundamentals",
    "aliases": ["Receiver Operating Characteristic", "ROC"],
    "definition": "A graphical plot that illustrates the diagnostic ability of a binary classifier by plotting true positive rate against false positive rate at various threshold settings.",
    "related": ["AUC Score", "Classification", "Binary Classification", "Performance Metrics"],
    "tags": ["roc-curve", "classification-evaluation", "performance-visualization"],
    "references": [
      "https://en.wikipedia.org/wiki/Receiver_operating_characteristic",
      "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.roc_curve.html"
    ]
  },
  {
    "term": "AUC Score",
    "category": "AI Fundamentals",
    "aliases": ["Area Under Curve", "AUC-ROC"],
    "definition": "A performance metric that measures the area under the ROC curve, providing a single score to evaluate binary classification model performance across all thresholds.",
    "related": ["ROC Curve", "Classification", "Performance Metrics", "Binary Classification"],
    "tags": ["auc-score", "classification-metric", "performance-measurement"],
    "references": [
      "https://en.wikipedia.org/wiki/Receiver_operating_characteristic#Area_under_the_curve",
      "https://scikit-learn.org/stable/modules/generated/sklearn.metrics.auc.html"
    ]
  },
  {
    "term": "Label Encoding",
    "category": "Data Engineering for AI",
    "aliases": ["Categorical Encoding", "Ordinal Encoding"],
    "definition": "A preprocessing technique that converts categorical variables into numerical format by assigning each unique category a numerical label.",
    "related": ["One-Hot Encoding", "Data Preprocessing", "Categorical Data", "Feature Engineering"],
    "tags": ["label-encoding", "categorical-encoding", "data-preprocessing"],
    "references": [
      "https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.LabelEncoder.html",
      "https://pandas.pydata.org/docs/reference/api/pandas.factorize.html"
    ]
  },
  {
    "term": "One-Hot Encoding",
    "category": "Data Engineering for AI",
    "aliases": ["Binary Encoding", "Dummy Variables"],
    "definition": "A preprocessing technique that converts categorical variables into binary vectors, creating a new binary column for each unique category.",
    "related": ["Label Encoding", "Data Preprocessing", "Categorical Data", "Feature Engineering"],
    "tags": ["one-hot-encoding", "binary-encoding", "categorical-preprocessing"],
    "references": [
      "https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.OneHotEncoder.html",
      "https://pandas.pydata.org/docs/reference/api/pandas.get_dummies.html"
    ]
  },
  {
    "term": "Data Normalization",
    "category": "Data Engineering for AI",
    "aliases": ["Min-Max Scaling", "Feature Scaling"],
    "definition": "A preprocessing technique that scales numerical features to a fixed range (typically 0-1) to ensure all features contribute equally to model training.",
    "related": ["Data Standardization", "Feature Scaling", "Data Preprocessing", "Numerical Features"],
    "tags": ["data-normalization", "feature-scaling", "preprocessing"],
    "references": [
      "https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MinMaxScaler.html",
      "https://en.wikipedia.org/wiki/Feature_scaling"
    ]
  },
  {
    "term": "Data Standardization",
    "category": "Data Engineering for AI",
    "aliases": ["Z-Score Normalization", "Standard Scaling"],
    "definition": "A preprocessing technique that transforms features to have zero mean and unit variance, making features comparable regardless of their original scale.",
    "related": ["Data Normalization", "Feature Scaling", "Data Preprocessing", "Z-Score"],
    "tags": ["data-standardization", "z-score-normalization", "feature-scaling"],
    "references": [
      "https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html",
      "https://en.wikipedia.org/wiki/Standard_score"
    ]
  },
  {
    "term": "Cost Function",
    "category": "AI Fundamentals",
    "aliases": ["Objective Function", "Error Function"],
    "definition": "A mathematical function that measures the difference between predicted and actual values across the entire dataset, used to guide model optimization during training.",
    "related": ["Loss Function", "Optimization", "Gradient Descent", "Model Training"],
    "tags": ["cost-function", "optimization", "error-measurement"],
    "references": [
      "https://en.wikipedia.org/wiki/Loss_function",
      "https://www.deeplearningbook.org/contents/ml.html"
    ]
  },
  {
    "term": "Learning Rate",
    "category": "AI Fundamentals",
    "aliases": ["Step Size", "Alpha"],
    "definition": "A hyperparameter that controls how much model weights are adjusted during training, determining the size of steps taken toward the minimum of the loss function.",
    "related": ["Gradient Descent", "Optimization", "Hyperparameter", "Training"],
    "tags": ["learning-rate", "optimization-parameter", "training-control"],
    "references": [
      "https://en.wikipedia.org/wiki/Learning_rate",
      "https://www.deeplearningbook.org/contents/optimization.html"
    ]
  },
  {
    "term": "Batch Size",
    "category": "AI Fundamentals",
    "aliases": ["Mini-batch Size", "Training Batch"],
    "definition": "The number of training examples processed together in one forward/backward pass during model training, affecting training speed and memory usage.",
    "related": ["Mini-Batch", "Gradient Descent", "Training", "Memory Management"],
    "tags": ["batch-size", "training-parameter", "memory-management"],
    "references": [
      "https://en.wikipedia.org/wiki/Stochastic_gradient_descent#Mini-batch_gradient_descent",
      "https://www.deeplearningbook.org/contents/optimization.html"
    ]
  },
  {
    "term": "L1 Regularization",
    "category": "Machine Learning Algorithms",
    "aliases": ["Lasso Regularization", "L1 Penalty"],
    "definition": "A regularization technique that adds the sum of absolute values of parameters to the loss function, promoting sparsity by driving some weights to exactly zero.",
    "related": ["L2 Regularization", "Regularization", "Feature Selection", "Overfitting"],
    "tags": ["l1-regularization", "lasso", "sparsity"],
    "references": [
      "https://en.wikipedia.org/wiki/Lasso_(statistics)",
      "https://scikit-learn.org/stable/modules/linear_model.html#lasso"
    ]
  },
  {
    "term": "L2 Regularization",
    "category": "Machine Learning Algorithms",
    "aliases": ["Ridge Regularization", "L2 Penalty"],
    "definition": "A regularization technique that adds the sum of squared parameters to the loss function, preventing overfitting by penalizing large weights.",
    "related": ["L1 Regularization", "Regularization", "Ridge Regression", "Overfitting"],
    "tags": ["l2-regularization", "ridge", "weight-penalty"],
    "references": [
      "https://en.wikipedia.org/wiki/Ridge_regression",
      "https://scikit-learn.org/stable/modules/linear_model.html#ridge-regression"
    ]
  },
  {
    "term": "Online Learning",
    "category": "Machine Learning Algorithms",
    "aliases": ["Incremental Learning", "Sequential Learning"],
    "definition": "A learning paradigm where models are updated continuously as new data arrives, without retraining on the entire dataset from scratch.",
    "related": ["Incremental Learning", "Streaming Data", "Adaptive Learning", "Real-time Learning"],
    "tags": ["online-learning", "incremental-learning", "continuous-adaptation"],
    "references": [
      "https://en.wikipedia.org/wiki/Online_machine_learning",
      "https://scikit-learn.org/stable/modules/scaling_strategies.html#incremental-learning"
    ]
  },
  {
    "term": "Concept Drift",
    "category": "Model Deployment & Operations",
    "aliases": ["Statistical Drift", "Population Drift"],
    "definition": "A phenomenon where the statistical properties of the target variable change over time, causing model performance to degrade as the underlying data patterns shift.",
    "related": ["Data Drift", "Model Drift", "Distribution Shift", "Model Monitoring"],
    "tags": ["concept-drift", "distribution-shift", "model-degradation"],
    "references": [
      "https://en.wikipedia.org/wiki/Concept_drift",
      "https://www.evidentlyai.com/blog/machine-learning-monitoring-concept-drift"
    ]
  },
  {
    "term": "One-Shot Learning",
    "category": "Generative AI",
    "aliases": ["Single Example Learning"],
    "definition": "A machine learning approach where models learn to recognize or generate content from just one training example, mimicking human ability to learn from minimal data.",
    "related": ["Few-shot Learning", "Zero-shot Learning", "Meta-learning", "Transfer Learning"],
    "tags": ["one-shot-learning", "minimal-data", "single-example"],
    "references": [
      "https://en.wikipedia.org/wiki/One-shot_learning",
      "https://arxiv.org/abs/1606.04080"
    ]
  },
  {
    "term": "Domain Adaptation",
    "category": "Generative AI",
    "aliases": ["Cross-Domain Transfer", "Domain Transfer"],
    "definition": "A technique that enables models trained on one domain (source) to perform well on a different but related domain (target) with minimal additional training.",
    "related": ["Transfer Learning", "Fine-tuning", "Cross-Domain Learning", "Adaptation"],
    "tags": ["domain-adaptation", "cross-domain", "transfer-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Domain_adaptation",
      "https://arxiv.org/abs/1409.7495"
    ]
  },
  {
    "term": "Latent Variable Model",
    "category": "Generative AI",
    "aliases": ["Latent Variable Framework", "Hidden Variable Model"],
    "definition": "A statistical model that relates observed variables to unobserved (latent) variables, enabling modeling of complex data through simpler hidden representations.",
    "related": ["Latent Space", "VAE", "Hidden Variables", "Probabilistic Model"],
    "tags": ["latent-variable", "hidden-variables", "probabilistic-modeling"],
    "references": [
      "https://en.wikipedia.org/wiki/Latent_variable_model",
      "https://arxiv.org/abs/1312.6114"
    ]
  },
  {
    "term": "Denoising",
    "category": "Generative AI",
    "aliases": ["Noise Removal", "Signal Cleaning"],
    "definition": "The process of removing noise or unwanted artifacts from data, commonly used in autoencoders and diffusion models to learn clean representations.",
    "related": ["Denoising Autoencoder", "Diffusion Model", "Noise Reduction", "Signal Processing"],
    "tags": ["denoising", "noise-removal", "signal-cleaning"],
    "references": [
      "https://en.wikipedia.org/wiki/Denoising",
      "https://arxiv.org/abs/2006.11239"
    ]
  },
  {
    "term": "Image Synthesis",
    "category": "Generative AI",
    "aliases": ["Image Generation", "Synthetic Image Creation"],
    "definition": "The process of creating new, realistic images using computational methods, often through generative models like GANs or diffusion models.",
    "related": ["Image Generation", "Text-to-Image Generation", "GAN", "Diffusion Model"],
    "tags": ["image-synthesis", "image-creation", "visual-generation"],
    "references": [
      "https://en.wikipedia.org/wiki/Computer_graphics",
      "https://arxiv.org/abs/1406.2661"
    ]
  },
  {
    "term": "Text-to-Speech",
    "category": "Generative AI",
    "aliases": ["TTS", "Speech Synthesis"],
    "definition": "Technology that converts written text into spoken words, using AI models to generate natural-sounding human speech from textual input.",
    "related": ["Speech Synthesis", "Voice Generation", "Audio Generation", "Natural Language Processing"],
    "tags": ["text-to-speech", "speech-synthesis", "voice-generation"],
    "references": [
      "https://en.wikipedia.org/wiki/Speech_synthesis",
      "https://cloud.google.com/text-to-speech"
    ]
  },
  {
    "term": "Text Completion",
    "category": "Generative AI",
    "aliases": ["Auto-completion", "Text Continuation"],
    "definition": "The task of automatically continuing or completing partial text input, predicting what comes next based on context and learned patterns.",
    "related": ["Text Generation", "Autoregressive Model", "Language Model", "Predictive Text"],
    "tags": ["text-completion", "auto-completion", "predictive-text"],
    "references": [
      "https://platform.openai.com/docs/guides/text-generation",
      "https://huggingface.co/docs/transformers/tasks/text_generation"
    ]
  },
  {
    "term": "Paraphrasing",
    "category": "Generative AI",
    "aliases": ["Text Rewriting", "Sentence Rephrasing"],
    "definition": "The task of rewriting text content while preserving its original meaning, expressing the same ideas using different words and sentence structures.",
    "related": ["Text Generation", "Natural Language Processing", "Content Rewriting", "Semantic Preservation"],
    "tags": ["paraphrasing", "text-rewriting", "semantic-preservation"],
    "references": [
      "https://en.wikipedia.org/wiki/Paraphrase",
      "https://huggingface.co/tasks/text2text-generation"
    ]
  },
  {
    "term": "Story Generation",
    "category": "Generative AI",
    "aliases": ["Narrative Generation", "Creative Writing AI"],
    "definition": "The automated creation of coherent narratives, stories, or creative content using AI models trained on literary works and storytelling patterns.",
    "related": ["Text Generation", "Creative AI", "Narrative AI", "Content Creation"],
    "tags": ["story-generation", "narrative-creation", "creative-writing"],
    "references": [
      "https://arxiv.org/abs/1805.04833",
      "https://www.openai.com/research/gpt-3-apps"
    ]
  },
  {
    "term": "Red Teaming",
    "category": "Ethics & Governance",
    "aliases": ["Adversarial Testing", "Security Testing"],
    "definition": "A systematic approach to testing AI systems by attempting to find vulnerabilities, biases, or harmful behaviors through adversarial scenarios and stress testing.",
    "related": ["AI Safety", "Adversarial Testing", "Security Evaluation", "Safety Testing"],
    "tags": ["red-teaming", "adversarial-testing", "safety-evaluation"],
    "references": [
      "https://www.anthropic.com/news/red-teaming-language-models",
      "https://arxiv.org/abs/2209.07858"
    ]
  },
  {
    "term": "Cross-Attention",
    "category": "Deep Learning Architectures",
    "aliases": ["Cross-Modal Attention", "Inter-Sequence Attention"],
    "definition": "An attention mechanism that computes attention between two different sequences or modalities, enabling models to relate information across different inputs.",
    "related": ["Self-Attention", "Attention Mechanism", "Multimodal Models", "Encoder-Decoder"],
    "tags": ["cross-attention", "inter-sequence", "multimodal-attention"],
    "references": [
      "https://arxiv.org/abs/1706.03762",
      "https://lilianweng.github.io/posts/2018-06-24-attention/"
    ]
  },
  {
    "term": "Byte-Pair Encoding",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["BPE", "Subword Tokenization"],
    "definition": "A tokenization method that creates a vocabulary of subword units by iteratively merging the most frequent pairs of characters or character sequences.",
    "related": ["Tokenization", "Subword Tokenization", "Vocabulary", "Text Processing"],
    "tags": ["byte-pair-encoding", "subword-tokenization", "vocabulary-building"],
    "references": [
      "https://arxiv.org/abs/1508.07909",
      "https://huggingface.co/docs/tokenizers/api/models#tokenizers.models.BPE"
    ]
  },
  {
    "term": "Causal Language Modeling",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Autoregressive Language Modeling", "Next-Token Prediction"],
    "definition": "A language modeling approach where the model predicts the next token in a sequence based only on previous tokens, maintaining causal order.",
    "related": ["Language Modeling", "Autoregressive Model", "GPT", "Text Generation"],
    "tags": ["causal-language-modeling", "autoregressive", "next-token-prediction"],
    "references": [
      "https://huggingface.co/docs/transformers/tasks/language_modeling",
      "https://arxiv.org/abs/1706.03762"
    ]
  },
  {
    "term": "Masked Language Modeling",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["MLM", "Fill-in-the-Blank"],
    "definition": "A pre-training objective where random tokens in a sequence are masked and the model learns to predict the original tokens based on surrounding context.",
    "related": ["BERT", "Pre-training", "Language Modeling", "Bidirectional Context"],
    "tags": ["masked-language-modeling", "bert-pretraining", "bidirectional"],
    "references": [
      "https://arxiv.org/abs/1810.04805",
      "https://huggingface.co/docs/transformers/tasks/masked_language_modeling"
    ]
  },
  {
    "term": "Stop Sequences",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Stop Tokens", "End Sequences"],
    "definition": "Predefined tokens or character sequences that signal a language model to stop generating text, controlling output length and format.",
    "related": ["Text Generation", "Generation Control", "Token", "Output Formatting"],
    "tags": ["stop-sequences", "generation-control", "output-termination"],
    "references": [
      "https://platform.openai.com/docs/api-reference/completions/create#completions/create-stop",
      "https://huggingface.co/blog/how-to-generate"
    ]
  },
  {
    "term": "Greedy Decoding",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Greedy Search", "Greedy Sampling"],
    "definition": "A text generation strategy that always selects the token with the highest probability at each step, producing deterministic but potentially repetitive outputs.",
    "related": ["Beam Search", "Sampling Techniques", "Text Generation", "Decoding Strategy"],
    "tags": ["greedy-decoding", "deterministic-generation", "highest-probability"],
    "references": [
      "https://huggingface.co/blog/how-to-generate#greedy-search",
      "https://arxiv.org/abs/1904.09751"
    ]
  },
  {
    "term": "Beam Search",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Beam Decoding"],
    "definition": "A text generation strategy that maintains multiple candidate sequences simultaneously, selecting the most likely overall sequence rather than just the next token.",
    "related": ["Greedy Decoding", "Text Generation", "Sequence Generation", "Search Algorithm"],
    "tags": ["beam-search", "sequence-search", "multiple-candidates"],
    "references": [
      "https://en.wikipedia.org/wiki/Beam_search",
      "https://huggingface.co/blog/how-to-generate#beam-search"
    ]
  },
  {
    "term": "Knowledge Cutoff",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Training Cutoff", "Data Cutoff"],
    "definition": "The date after which a language model has no knowledge of events or information, representing the boundary of its training data.",
    "related": ["Training Data", "Model Limitations", "Temporal Knowledge", "Information Currency"],
    "tags": ["knowledge-cutoff", "training-boundary", "temporal-limitation"],
    "references": [
      "https://platform.openai.com/docs/models/gpt-4",
      "https://help.openai.com/en/articles/6783457-what-is-chatgpt-s-knowledge-cutoff"
    ]
  },
  {
    "term": "Embedding Store",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Vector Store", "Embedding Repository"],
    "definition": "A specialized storage system for managing and querying vector embeddings, enabling efficient similarity search and retrieval operations.",
    "related": ["Vector Database", "Vector Embedding", "Similarity Search", "Storage System"],
    "tags": ["embedding-store", "vector-storage", "similarity-search"],
    "references": [
      "https://www.pinecone.io/learn/vector-database/",
      "https://weaviate.io/developers/weaviate/concepts/storage"
    ]
  },
  {
    "term": "Adapter Tuning",
    "category": "Natural Language Processing (NLP)",
    "aliases": ["Adapter-based Fine-tuning", "Lightweight Adaptation"],
    "definition": "A parameter-efficient alternative to full fine-tuning that inserts small adapter modules into pre-trained models, enabling task adaptation with minimal parameter updates.",
    "related": ["Fine-tuning", "Parameter-Efficient Fine-tuning", "Adapter Layers", "Transfer Learning"],
    "tags": ["adapter-tuning", "parameter-efficient", "lightweight-adaptation"],
    "references": [
      "https://arxiv.org/abs/1902.00751",
      "https://adapterhub.ml/"
    ]
  },
  {
    "term": "Session Memory",
    "category": "AI Agents & Autonomy",
    "aliases": ["Conversation Memory", "Dialogue State"],
    "definition": "The ability of AI systems to maintain context and information within a single conversation or session, enabling coherent multi-turn interactions.",
    "related": ["Long-Term Memory", "Context Management", "Dialogue Agent", "Conversational AI"],
    "tags": ["session-memory", "conversation-context", "dialogue-state"],
    "references": [
      "https://langchain-ai.github.io/langgraph/concepts/memory/",
      "https://www.anthropic.com/news/claude-3-model-card"
    ]
  },
  {
    "term": "Few-Shot Prompt Templates",
    "category": "Generative AI",
    "aliases": ["Example Templates", "Demonstration Templates"],
    "definition": "Structured prompt formats that include examples of desired input-output pairs to guide model behavior in few-shot learning scenarios.",
    "related": ["Few-shot Learning", "Prompt Engineering", "Template Design", "In-context Learning"],
    "tags": ["prompt-templates", "few-shot-examples", "template-design"],
    "references": [
      "https://www.promptingguide.ai/techniques/fewshot",
      "https://arxiv.org/abs/2005.14165"
    ]
  },
  {
    "term": "Autonomous Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Self-Governing Agent", "Independent Agent"],
    "definition": "An AI agent capable of operating independently without direct human control, making decisions and taking actions based on its programming, sensors, and environmental inputs.",
    "related": ["AI Agent", "Autonomous System", "Self-Direction", "Independent Decision-Making"],
    "tags": ["autonomous-agent", "self-governing", "independent-operation"],
    "references": [
      "https://en.wikipedia.org/wiki/Autonomous_agent",
      "https://www.rand.org/topics/autonomous-systems.html"
    ]
  },
  {
    "term": "Cognitive Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Intelligent Agent", "Thinking Agent"],
    "definition": "An AI agent that employs cognitive processes such as reasoning, learning, and memory to make decisions and solve problems in complex environments.",
    "related": ["Cognitive Architecture", "Reasoning", "Learning Agent", "Intelligent Behavior"],
    "tags": ["cognitive-agent", "intelligent-behavior", "cognitive-processing"],
    "references": [
      "https://en.wikipedia.org/wiki/Cognitive_architecture",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/bdi.pdf"
    ]
  },
  {
    "term": "Agent Architecture",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Design", "Agent Framework"],
    "definition": "The structural design and organization of an AI agent's components, including its reasoning mechanisms, memory systems, and interaction interfaces.",
    "related": ["Cognitive Architecture", "System Design", "Agent Framework", "Architectural Patterns"],
    "tags": ["agent-architecture", "system-design", "agent-framework"],
    "references": [
      "https://en.wikipedia.org/wiki/Software_agent#Agent_architectures",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Reflex Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Simple Reflex Agent", "Stimulus-Response Agent"],
    "definition": "An AI agent that selects actions based solely on current percepts using condition-action rules, without considering history or future consequences.",
    "related": ["Reactive Agent", "Condition-Action Rules", "Immediate Response", "Simple Behavior"],
    "tags": ["reflex-agent", "condition-action", "immediate-response"],
    "references": [
      "https://en.wikipedia.org/wiki/Reactive_agent",
      "https://www.javatpoint.com/agents-in-artificial-intelligence"
    ]
  },
  {
    "term": "Utility-Based Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Utility Agent", "Preference-Based Agent"],
    "definition": "An AI agent that selects actions based on utility functions that measure the desirability of outcomes, enabling rational decision-making under uncertainty.",
    "related": ["Utility Function", "Rational Agent", "Decision Theory", "Preference Optimization"],
    "tags": ["utility-based", "rational-decision", "preference-optimization"],
    "references": [
      "https://en.wikipedia.org/wiki/Utility",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Learning Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Adaptive Agent", "Self-Improving Agent"],
    "definition": "An AI agent capable of improving its performance over time through experience, incorporating learning mechanisms to adapt to new situations and environments.",
    "related": ["Machine Learning", "Adaptive Behavior", "Experience-Based Learning", "Self-Improvement"],
    "tags": ["learning-agent", "adaptive-behavior", "self-improvement"],
    "references": [
      "https://en.wikipedia.org/wiki/Machine_learning",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Environment Perception",
    "category": "AI Agents & Autonomy",
    "aliases": ["Environmental Sensing", "Perception System"],
    "definition": "The ability of an AI agent to gather and interpret information about its environment through sensors, observations, or data inputs.",
    "related": ["Sensor Fusion", "Environmental Awareness", "State Representation", "Observation"],
    "tags": ["environment-perception", "sensing", "environmental-awareness"],
    "references": [
      "https://en.wikipedia.org/wiki/Machine_perception",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Action",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Action", "Effector Output"],
    "definition": "The output or behavior executed by an AI agent to affect its environment, typically through actuators or system interfaces.",
    "related": ["Action Space", "Actuators", "Agent Behavior", "Environmental Impact"],
    "tags": ["action", "agent-output", "environmental-interaction"],
    "references": [
      "https://en.wikipedia.org/wiki/Action_(philosophy)",
      "https://spinningup.openai.com/en/latest/spinningup/rl_intro.html"
    ]
  },
  {
    "term": "Context Awareness",
    "category": "AI Agents & Autonomy",
    "aliases": ["Contextual Understanding", "Situational Context"],
    "definition": "The ability of an AI agent to understand and respond appropriately to the current context, including environmental conditions, user state, and situational factors.",
    "related": ["Situational Awareness", "Context Management", "Environmental Understanding", "Adaptive Behavior"],
    "tags": ["context-awareness", "situational-understanding", "adaptive-response"],
    "references": [
      "https://en.wikipedia.org/wiki/Context_awareness",
      "https://www.ibm.com/topics/context-aware-computing"
    ]
  },
  {
    "term": "Situational Awareness",
    "category": "AI Agents & Autonomy",
    "aliases": ["Environmental Awareness", "Situation Assessment"],
    "definition": "The perception and comprehension of environmental elements and events with respect to time and space, and the projection of their status in the near future.",
    "related": ["Context Awareness", "Environment Perception", "State Assessment", "Predictive Awareness"],
    "tags": ["situational-awareness", "environmental-comprehension", "predictive-assessment"],
    "references": [
      "https://en.wikipedia.org/wiki/Situation_awareness",
      "https://www.researchgate.net/publication/220604413_Situation_Awareness_in_Multi-Agent_Systems"
    ]
  },
  {
    "term": "Self-Learning",
    "category": "AI Agents & Autonomy",
    "aliases": ["Autonomous Learning", "Self-Directed Learning"],
    "definition": "The capability of an AI agent to acquire new knowledge and skills independently through interaction with its environment, without explicit programming or supervision.",
    "related": ["Learning Agent", "Unsupervised Learning", "Experience-Based Learning", "Autonomous Improvement"],
    "tags": ["self-learning", "autonomous-learning", "independent-improvement"],
    "references": [
      "https://en.wikipedia.org/wiki/Unsupervised_learning",
      "https://www.nature.com/articles/s41586-019-1724-z"
    ]
  },
  {
    "term": "Goal Prioritization",
    "category": "AI Agents & Autonomy",
    "aliases": ["Goal Ranking", "Objective Prioritization"],
    "definition": "The process by which an AI agent orders and selects among multiple competing goals or objectives based on importance, urgency, or utility.",
    "related": ["Goal-Oriented Agent", "Decision-Making", "Resource Allocation", "Multi-Objective Optimization"],
    "tags": ["goal-prioritization", "objective-ranking", "resource-allocation"],
    "references": [
      "https://en.wikipedia.org/wiki/Goal_setting",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/planning.pdf"
    ]
  },
  {
    "term": "Agent Protocols",
    "category": "AI Agents & Autonomy",
    "aliases": ["Communication Protocols", "Agent Standards"],
    "definition": "Standardized rules and formats that govern how AI agents communicate, interact, and exchange information with each other and their environment.",
    "related": ["Agent Communication", "Message Passing", "Interoperability", "Communication Standards"],
    "tags": ["agent-protocols", "communication-standards", "interoperability"],
    "references": [
      "https://www.fipa.org/repository/aclspecs.html",
      "https://en.wikipedia.org/wiki/Communication_protocol"
    ]
  },
  {
    "term": "Environment Simulation",
    "category": "AI Agents & Autonomy",
    "aliases": ["Virtual Environment", "Simulated World"],
    "definition": "A computational model that replicates real-world environments for training, testing, and evaluating AI agents in controlled, safe conditions.",
    "related": ["Simulation Environment", "Virtual Testing", "Agent Training", "Safe Experimentation"],
    "tags": ["environment-simulation", "virtual-world", "agent-testing"],
    "references": [
      "https://gym.openai.com/",
      "https://unity.com/products/machine-learning-agents"
    ]
  },
  {
    "term": "Agent Mesh",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Network", "Distributed Agent Framework"],
    "definition": "A network architecture where multiple AI agents are interconnected in a mesh topology, enabling distributed communication and coordination.",
    "related": ["Multi-Agent System", "Distributed Systems", "Network Topology", "Agent Communication"],
    "tags": ["agent-mesh", "distributed-network", "mesh-topology"],
    "references": [
      "https://docs.solace.com/PubSub-Basics/Event-Mesh-Concepts.htm",
      "https://en.wikipedia.org/wiki/Mesh_networking"
    ]
  },
  {
    "term": "Message Passing",
    "category": "AI Agents & Autonomy",
    "aliases": ["Inter-Agent Messaging", "Agent Communication"],
    "definition": "A communication paradigm where AI agents exchange discrete messages to coordinate actions, share information, and collaborate on tasks.",
    "related": ["Message-Based Communication", "Agent Protocols", "Distributed Communication", "Asynchronous Communication"],
    "tags": ["message-passing", "inter-agent-communication", "distributed-messaging"],
    "references": [
      "https://en.wikipedia.org/wiki/Message_passing",
      "https://www.fipa.org/repository/aclspecs.html"
    ]
  },
  {
    "term": "Pub/Sub Communication",
    "category": "AI Agents & Autonomy",
    "aliases": ["Publish-Subscribe", "Event-Based Communication"],
    "definition": "A messaging pattern where agents publish events to topics and subscribe to topics of interest, enabling loose coupling and scalable communication.",
    "related": ["Message Passing", "Event-Driven Architecture", "Asynchronous Communication", "Distributed Systems"],
    "tags": ["pub-sub", "event-driven", "distributed-messaging"],
    "references": [
      "https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern",
      "https://docs.solace.com/PubSub-Basics/Core-Concepts.htm"
    ]
  },
  {
    "term": "Stateless Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Non-Persistent Agent", "Memory-Free Agent"],
    "definition": "An AI agent that does not retain information between interactions, treating each request independently without maintaining session or historical context.",
    "related": ["Stateful Agent", "Session Management", "Context Independence", "Functional Programming"],
    "tags": ["stateless", "context-independent", "session-free"],
    "references": [
      "https://en.wikipedia.org/wiki/Stateless_protocol",
      "https://www.ibm.com/topics/stateful-vs-stateless"
    ]
  },
  {
    "term": "Embodied Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Physical Agent", "Robotic Agent"],
    "definition": "An AI agent that has a physical form or representation in the real world, capable of interacting with the physical environment through sensors and actuators.",
    "related": ["Robotics", "Physical Interaction", "Sensor Fusion", "Actuator Control"],
    "tags": ["embodied-agent", "physical-interaction", "robotic-agent"],
    "references": [
      "https://en.wikipedia.org/wiki/Embodied_cognition",
      "https://www.robotics.org/content-detail.cfm/Industrial-Robotics-Industry-Insights/What-is-Robotics/content_id/4538"
    ]
  },
  {
    "term": "Agent Lifecycle",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Management Lifecycle", "Agent Lifespan"],
    "definition": "The complete operational phases of an AI agent from creation and initialization through active operation to decommissioning and cleanup.",
    "related": ["Agent Lifecycle Management", "System Lifecycle", "Agent Deployment", "Resource Management"],
    "tags": ["agent-lifecycle", "lifecycle-management", "agent-operations"],
    "references": [
      "https://kubernetes.io/docs/concepts/workloads/controllers/deployment/",
      "https://www.ibm.com/topics/application-lifecycle-management"
    ]
  },
  {
    "term": "Agent Registry",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Directory", "Service Registry"],
    "definition": "A centralized repository that maintains information about available AI agents, their capabilities, and how to access them, enabling agent discovery and coordination.",
    "related": ["Service Discovery", "Agent Management", "Directory Service", "Agent Coordination"],
    "tags": ["agent-registry", "service-discovery", "agent-directory"],
    "references": [
      "https://microservices.io/patterns/service-registry.html",
      "https://kubernetes.io/docs/concepts/services-networking/service/"
    ]
  },
  {
    "term": "Sidecar Agent Pattern",
    "category": "AI Agents & Autonomy",
    "aliases": ["Companion Agent", "Auxiliary Agent"],
    "definition": "A deployment pattern where a helper agent runs alongside a main agent or application, providing supporting services like monitoring, security, or communication.",
    "related": ["Sidecar Pattern", "Microservices", "Agent Deployment", "Service Mesh"],
    "tags": ["sidecar-agent", "companion-service", "deployment-pattern"],
    "references": [
      "https://docs.microsoft.com/en-us/azure/architecture/patterns/sidecar",
      "https://istio.io/latest/docs/concepts/what-is-istio/#what-is-a-service-mesh"
    ]
  },
  {
    "term": "Blackboard Architecture",
    "category": "AI Agents & Autonomy",
    "aliases": ["Blackboard System", "Shared Knowledge Space"],
    "definition": "An architectural pattern where multiple agents collaborate by reading from and writing to a shared knowledge repository (blackboard), enabling flexible problem-solving approaches.",
    "related": ["Knowledge Sharing", "Collaborative Problem Solving", "Shared Memory", "Multi-Agent Coordination"],
    "tags": ["blackboard-architecture", "shared-knowledge", "collaborative-solving"],
    "references": [
      "https://en.wikipedia.org/wiki/Blackboard_system",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/blackboard.pdf"
    ]
  },
  {
    "term": "Intent Propagation",
    "category": "AI Agents & Autonomy",
    "aliases": ["Goal Propagation", "Intent Sharing"],
    "definition": "The process of communicating and sharing intentions or goals across multiple agents in a system, enabling coordinated behavior and collaborative planning.",
    "related": ["Goal Sharing", "Agent Coordination", "Collaborative Planning", "Distributed Goals"],
    "tags": ["intent-propagation", "goal-sharing", "collaborative-planning"],
    "references": [
      "https://arxiv.org/abs/2308.10379",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/planning.pdf"
    ]
  },
  {
    "term": "Agent Orchestration Platform",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Management Platform", "Multi-Agent Platform"],
    "definition": "A comprehensive software platform that provides tools and infrastructure for deploying, managing, and coordinating multiple AI agents in complex workflows.",
    "related": ["Agent Orchestration", "Platform Management", "Multi-Agent System", "Workflow Automation"],
    "tags": ["orchestration-platform", "agent-management", "workflow-platform"],
    "references": [
      "https://langchain-ai.github.io/langgraph/",
      "https://www.ibm.com/topics/workflow-automation"
    ]
  },
  {
    "term": "LLM Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Language Model Agent", "GPT-based Agent"],
    "definition": "An AI agent that uses large language models as its core reasoning and decision-making component, leveraging natural language understanding for autonomous behavior.",
    "related": ["Large Language Model", "Language-Based Agent", "Conversational Agent", "Natural Language Processing"],
    "tags": ["llm-agent", "language-based", "conversational-agent"],
    "references": [
      "https://arxiv.org/abs/2308.11432",
      "https://www.anthropic.com/news/claude-3-model-card"
    ]
  },
  {
    "term": "Retrieval-Augmented Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["RAG Agent", "Knowledge-Enhanced Agent"],
    "definition": "An AI agent that combines its reasoning capabilities with external knowledge retrieval, accessing relevant information to enhance decision-making and responses.",
    "related": ["Retrieval-Augmented Generation", "Knowledge Retrieval", "External Knowledge", "Information-Enhanced Agent"],
    "tags": ["rag-agent", "knowledge-enhanced", "retrieval-augmented"],
    "references": [
      "https://arxiv.org/abs/2005.11401",
      "https://langchain-ai.github.io/langgraph/tutorials/rag/langgraph_self_rag/"
    ]
  },
  {
    "term": "LangChain Agents",
    "category": "AI Agents & Autonomy",
    "aliases": ["LangChain Framework Agents"],
    "definition": "AI agents built using the LangChain framework, which provides tools for creating language model-powered applications with reasoning, memory, and tool use capabilities.",
    "related": ["LangChain", "Tool Use", "Agent Framework", "Language Model Integration"],
    "tags": ["langchain-agents", "framework-based", "tool-enabled"],
    "references": [
      "https://python.langchain.com/docs/modules/agents/",
      "https://langchain-ai.github.io/langgraph/"
    ]
  },
  {
    "term": "AutoGPT",
    "category": "AI Agents & Autonomy",
    "aliases": ["Autonomous GPT", "Self-Directed GPT"],
    "definition": "An autonomous AI agent system that uses GPT models to break down goals into sub-tasks, execute them independently, and learn from the results without human intervention.",
    "related": ["Autonomous Agent", "Goal Decomposition", "Self-Directed Behavior", "Task Automation"],
    "tags": ["autogpt", "autonomous-gpt", "self-directed"],
    "references": [
      "https://github.com/Significant-Gravitas/AutoGPT",
      "https://arxiv.org/abs/2306.02224"
    ]
  },
  {
    "term": "Prompt-as-Policy",
    "category": "AI Agents & Autonomy",
    "aliases": ["Prompt-Based Policy", "Natural Language Policy"],
    "definition": "An approach where agent behavior and decision-making policies are defined through natural language prompts rather than traditional programming or rule systems.",
    "related": ["Policy", "Prompt Engineering", "Language-Based Control", "Natural Language Programming"],
    "tags": ["prompt-as-policy", "language-based-control", "natural-language-policy"],
    "references": [
      "https://arxiv.org/abs/2302.04761",
      "https://www.anthropic.com/news/claude-3-model-card"
    ]
  },
  {
    "term": "Chain-of-Thought Execution",
    "category": "AI Agents & Autonomy",
    "aliases": ["CoT Execution", "Step-by-Step Execution"],
    "definition": "An agent execution pattern that breaks down complex tasks into explicit reasoning steps, enabling transparent and verifiable decision-making processes.",
    "related": ["Chain-of-Thought", "Reasoning", "Step-by-Step Processing", "Transparent Decision-Making"],
    "tags": ["cot-execution", "step-by-step", "transparent-reasoning"],
    "references": [
      "https://arxiv.org/abs/2201.11903",
      "https://www.promptingguide.ai/techniques/cot"
    ]
  },
  {
    "term": "Multi-Hop Reasoning",
    "category": "AI Agents & Autonomy",
    "aliases": ["Multi-Step Reasoning", "Iterative Reasoning"],
    "definition": "A reasoning process where agents make multiple logical steps or hops through information to reach conclusions, often involving intermediate reasoning states.",
    "related": ["Reasoning", "Complex Problem Solving", "Iterative Processing", "Knowledge Navigation"],
    "tags": ["multi-hop-reasoning", "iterative-reasoning", "complex-problem-solving"],
    "references": [
      "https://arxiv.org/abs/1909.09536",
      "https://arxiv.org/abs/2305.10601"
    ]
  },
  {
    "term": "Agent Memory Store",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Memory System", "Persistent Agent Memory"],
    "definition": "A storage system specifically designed for maintaining agent memories, experiences, and learned knowledge across sessions and interactions.",
    "related": ["Agent Memory", "Persistent Memory", "Memory Systems", "Knowledge Storage"],
    "tags": ["agent-memory-store", "persistent-storage", "memory-system"],
    "references": [
      "https://langchain-ai.github.io/langgraph/concepts/memory/",
      "https://arxiv.org/abs/2307.09288"
    ]
  },
  {
    "term": "Observation-Action Loop",
    "category": "AI Agents & Autonomy",
    "aliases": ["Sense-Act Cycle", "Perception-Action Loop"],
    "definition": "The fundamental cycle where an agent observes its environment, processes the information, makes decisions, and takes actions, then repeats the process.",
    "related": ["Agent Behavior", "Control Loop", "Reactive Behavior", "Continuous Operation"],
    "tags": ["observation-action-loop", "control-cycle", "agent-behavior"],
    "references": [
      "https://en.wikipedia.org/wiki/Control_loop",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Feedback Loop",
    "category": "AI Agents & Autonomy",
    "aliases": ["Reinforcement Loop", "Learning Feedback"],
    "definition": "A system where agent actions produce results that influence future decisions, enabling learning and adaptation through experience and outcome evaluation.",
    "related": ["Reinforcement Learning", "Learning Agent", "Adaptive Behavior", "Performance Improvement"],
    "tags": ["feedback-loop", "reinforcement-learning", "adaptive-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Feedback",
      "https://spinningup.openai.com/en/latest/spinningup/rl_intro.html"
    ]
  },
  {
    "term": "Deliberative Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Planning Agent", "Model-Based Agent"],
    "definition": "An AI agent that maintains an internal model of the world and uses planning and reasoning to decide on actions, considering future consequences of current decisions.",
    "related": ["Planning", "Model-Based Reasoning", "Goal-Oriented Agent", "Cognitive Agent"],
    "tags": ["deliberative-agent", "planning-based", "model-based-reasoning"],
    "references": [
      "https://en.wikipedia.org/wiki/Intelligent_agent#Deliberative_agents",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Hybrid Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Layered Agent", "Combined Agent Architecture"],
    "definition": "An AI agent that combines multiple reasoning approaches, typically integrating reactive and deliberative behaviors to balance responsiveness with planning capabilities.",
    "related": ["Reactive Agent", "Deliberative Agent", "Agent Architecture", "Layered Architecture"],
    "tags": ["hybrid-agent", "combined-architecture", "multi-layer"],
    "references": [
      "https://en.wikipedia.org/wiki/Intelligent_agent#Hybrid_agents",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Rule-Based Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Expert System Agent", "Knowledge-Based Agent"],
    "definition": "An AI agent that makes decisions based on a predefined set of if-then rules, using expert knowledge encoded as conditional statements to guide behavior.",
    "related": ["Expert System", "Rule-Based System", "Condition-Action Rules", "Knowledge Base"],
    "tags": ["rule-based-agent", "expert-system", "knowledge-based"],
    "references": [
      "https://en.wikipedia.org/wiki/Rule-based_system",
      "https://www.britannica.com/technology/expert-system"
    ]
  },
  {
    "term": "Heuristic Policy",
    "category": "AI Agents & Autonomy",
    "aliases": ["Rule-of-Thumb Policy", "Heuristic Strategy"],
    "definition": "A decision-making strategy that uses practical shortcuts or rules of thumb to guide agent behavior, providing good-enough solutions efficiently.",
    "related": ["Heuristic", "Policy", "Problem-Solving Shortcuts", "Practical Decision-Making"],
    "tags": ["heuristic-policy", "practical-shortcuts", "efficient-decisions"],
    "references": [
      "https://en.wikipedia.org/wiki/Heuristic",
      "https://plato.stanford.edu/entries/heuristics/"
    ]
  },
  {
    "term": "Condition-Action Rule",
    "category": "AI Agents & Autonomy",
    "aliases": ["If-Then Rule", "Production Rule"],
    "definition": "A logical construct that specifies what action an agent should take when certain conditions are met, forming the basis of rule-based agent behavior.",
    "related": ["Rule-Based Agent", "Production System", "Expert System", "Conditional Logic"],
    "tags": ["condition-action", "if-then-rules", "conditional-logic"],
    "references": [
      "https://en.wikipedia.org/wiki/Production_rule_system",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/production-systems.pdf"
    ]
  },
  {
    "term": "Goal Stack",
    "category": "AI Agents & Autonomy",
    "aliases": ["Goal Hierarchy", "Objective Stack"],
    "definition": "A data structure that maintains an ordered list of goals or objectives for an agent, typically using a stack-based approach for goal management and achievement.",
    "related": ["Goal-Oriented Agent", "Planning", "Goal Management", "Hierarchical Planning"],
    "tags": ["goal-stack", "goal-management", "hierarchical-objectives"],
    "references": [
      "https://en.wikipedia.org/wiki/Goal_stack_planning",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/planning.pdf"
    ]
  },
  {
    "term": "Event Loop",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Runtime Loop", "Main Loop"],
    "definition": "The core execution cycle of an agent that continuously processes events, updates state, makes decisions, and executes actions in a structured loop.",
    "related": ["Agent Runtime", "Execution Cycle", "Event Processing", "Continuous Operation"],
    "tags": ["event-loop", "runtime-cycle", "continuous-execution"],
    "references": [
      "https://en.wikipedia.org/wiki/Event_loop",
      "https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/"
    ]
  },
  {
    "term": "Trigger Condition",
    "category": "AI Agents & Autonomy",
    "aliases": ["Activation Condition", "Event Trigger"],
    "definition": "A specific condition or event that causes an agent to initiate a particular behavior, action, or reasoning process.",
    "related": ["Event-Driven Agent", "Condition-Action Rule", "Event Processing", "Reactive Behavior"],
    "tags": ["trigger-condition", "activation-trigger", "event-driven"],
    "references": [
      "https://en.wikipedia.org/wiki/Event-driven_programming",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Reactive Loop",
    "category": "AI Agents & Autonomy",
    "aliases": ["Stimulus-Response Loop", "Reflex Loop"],
    "definition": "A tight coupling between perception and action where an agent immediately responds to environmental stimuli without deliberation or planning.",
    "related": ["Reactive Agent", "Reflex Agent", "Immediate Response", "Stimulus-Response"],
    "tags": ["reactive-loop", "immediate-response", "stimulus-response"],
    "references": [
      "https://en.wikipedia.org/wiki/Reactive_agent",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/032707agents.pdf"
    ]
  },
  {
    "term": "Agent Scheduler",
    "category": "AI Agents & Autonomy",
    "aliases": ["Task Scheduler", "Agent Orchestrator"],
    "definition": "A system component that manages the execution order and timing of agent tasks, ensuring efficient resource utilization and priority-based execution.",
    "related": ["Task Scheduling", "Resource Management", "Agent Coordination", "Execution Control"],
    "tags": ["agent-scheduler", "task-scheduling", "execution-control"],
    "references": [
      "https://en.wikipedia.org/wiki/Scheduling_(computing)",
      "https://kubernetes.io/docs/concepts/scheduling-eviction/"
    ]
  },
  {
    "term": "Asynchronous Decision-Making",
    "category": "AI Agents & Autonomy",
    "aliases": ["Non-Blocking Decisions", "Concurrent Decision Processing"],
    "definition": "A decision-making approach where agents can process multiple decisions concurrently without blocking on individual decision completion.",
    "related": ["Asynchronous Processing", "Concurrent Systems", "Non-Blocking Operations", "Parallel Decision-Making"],
    "tags": ["asynchronous-decisions", "concurrent-processing", "non-blocking"],
    "references": [
      "https://en.wikipedia.org/wiki/Asynchronous_I/O",
      "https://docs.python.org/3/library/asyncio.html"
    ]
  },
  {
    "term": "Policy Inference",
    "category": "AI Agents & Autonomy",
    "aliases": ["Policy Execution", "Strategy Inference"],
    "definition": "The process by which an agent applies its learned or programmed policy to determine the best action given the current state or situation.",
    "related": ["Policy", "Decision-Making", "Action Selection", "Strategy Application"],
    "tags": ["policy-inference", "strategy-application", "action-selection"],
    "references": [
      "https://spinningup.openai.com/en/latest/spinningup/rl_intro.html#policies",
      "https://en.wikipedia.org/wiki/Policy_(computer_science)"
    ]
  },
  {
    "term": "Runtime Context Switching",
    "category": "AI Agents & Autonomy",
    "aliases": ["Context Switching", "State Switching"],
    "definition": "The ability of an agent to switch between different operational contexts or modes during execution, adapting behavior based on changing circumstances.",
    "related": ["Context Management", "State Management", "Adaptive Behavior", "Dynamic Reconfiguration"],
    "tags": ["context-switching", "state-switching", "dynamic-adaptation"],
    "references": [
      "https://en.wikipedia.org/wiki/Context_switch",
      "https://www.ibm.com/topics/context-switching"
    ]
  },
  {
    "term": "Temporal Planning",
    "category": "AI Agents & Autonomy",
    "aliases": ["Time-Based Planning", "Temporal Reasoning"],
    "definition": "Planning approaches that explicitly consider time constraints, durations, and temporal relationships between actions and events.",
    "related": ["Planning", "Temporal Logic", "Time Constraints", "Scheduling"],
    "tags": ["temporal-planning", "time-based-planning", "temporal-reasoning"],
    "references": [
      "https://en.wikipedia.org/wiki/Temporal_logic",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/temporal-planning.pdf"
    ]
  },
  {
    "term": "Interrupt Handling",
    "category": "AI Agents & Autonomy",
    "aliases": ["Exception Handling", "Event Interruption"],
    "definition": "The mechanism by which an agent responds to unexpected events or high-priority interrupts that require immediate attention or action.",
    "related": ["Event Handling", "Priority Management", "Exception Processing", "Real-Time Response"],
    "tags": ["interrupt-handling", "exception-processing", "priority-response"],
    "references": [
      "https://en.wikipedia.org/wiki/Interrupt",
      "https://www.embedded.com/introduction-to-interrupt-handling/"
    ]
  },
  {
    "term": "Agent Prioritization",
    "category": "AI Agents & Autonomy",
    "aliases": ["Task Prioritization", "Priority Management"],
    "definition": "The process of assigning and managing priorities among agent tasks, goals, or actions to ensure important activities receive appropriate attention and resources.",
    "related": ["Priority Queue", "Resource Allocation", "Task Scheduling", "Goal Prioritization"],
    "tags": ["agent-prioritization", "priority-management", "resource-allocation"],
    "references": [
      "https://en.wikipedia.org/wiki/Priority_queue",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/planning.pdf"
    ]
  },
  {
    "term": "Feedback-Driven Adaptation",
    "category": "AI Agents & Autonomy",
    "aliases": ["Adaptive Feedback", "Feedback-Based Learning"],
    "definition": "An adaptation mechanism where agents modify their behavior based on feedback from their actions and environmental responses.",
    "related": ["Feedback Loop", "Adaptive Behavior", "Learning Agent", "Performance Improvement"],
    "tags": ["feedback-adaptation", "adaptive-learning", "performance-feedback"],
    "references": [
      "https://en.wikipedia.org/wiki/Adaptive_system",
      "https://spinningup.openai.com/en/latest/spinningup/rl_intro.html"
    ]
  },
  {
    "term": "Self-Supervised Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Self-Learning Agent", "Autonomous Learning Agent"],
    "definition": "An agent that learns from its own experiences and interactions without external supervision, using self-generated labels and feedback.",
    "related": ["Self-Supervised Learning", "Learning Agent", "Autonomous Learning", "Experience-Based Learning"],
    "tags": ["self-supervised", "autonomous-learning", "self-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Self-supervised_learning",
      "https://arxiv.org/abs/1902.06162"
    ]
  },
  {
    "term": "On-Policy Learning",
    "category": "AI Agents & Autonomy",
    "aliases": ["On-Policy Method"],
    "definition": "A reinforcement learning approach where the agent learns about and improves the same policy that it uses to select actions during interaction with the environment.",
    "related": ["Off-Policy Learning", "Reinforcement Learning", "Policy Learning", "Learning Agent"],
    "tags": ["on-policy", "policy-learning", "same-policy-learning"],
    "references": [
      "https://spinningup.openai.com/en/latest/spinningup/rl_intro2.html#on-policy-vs-off-policy",
      "https://en.wikipedia.org/wiki/Reinforcement_learning"
    ]
  },
  {
    "term": "Off-Policy Learning",
    "category": "AI Agents & Autonomy",
    "aliases": ["Off-Policy Method"],
    "definition": "A reinforcement learning approach where the agent learns about a target policy while following a different behavior policy for action selection.",
    "related": ["On-Policy Learning", "Reinforcement Learning", "Policy Learning", "Q-Learning"],
    "tags": ["off-policy", "policy-learning", "different-policy-learning"],
    "references": [
      "https://spinningup.openai.com/en/latest/spinningup/rl_intro2.html#on-policy-vs-off-policy",
      "https://en.wikipedia.org/wiki/Q-learning"
    ]
  },
  {
    "term": "Interactive Learning",
    "category": "AI Agents & Autonomy",
    "aliases": ["Human-in-the-Loop Learning", "Interactive ML"],
    "definition": "A learning paradigm where agents learn through interactive sessions with humans or other agents, incorporating feedback and guidance during the learning process.",
    "related": ["Human-in-the-Loop", "Active Learning", "Collaborative Learning", "Feedback Learning"],
    "tags": ["interactive-learning", "human-feedback", "collaborative-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Interactive_machine_learning",
      "https://arxiv.org/abs/1908.00741"
    ]
  },
  {
    "term": "Agent Fitness",
    "category": "AI Agents & Autonomy",
    "aliases": ["Evolutionary Fitness", "Agent Performance Score"],
    "definition": "A measure of an agent's performance or success in evolutionary AI systems, used to guide selection and reproduction in genetic algorithms and evolutionary approaches.",
    "related": ["Evolutionary Algorithm", "Genetic Algorithm", "Performance Measurement", "Selection Pressure"],
    "tags": ["agent-fitness", "evolutionary-ai", "performance-measurement"],
    "references": [
      "https://en.wikipedia.org/wiki/Fitness_function",
      "https://en.wikipedia.org/wiki/Evolutionary_algorithm"
    ]
  },
  {
    "term": "Agent Coalition",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Alliance", "Collaborative Group"],
    "definition": "A temporary or permanent group of agents that collaborate to achieve common goals that individual agents cannot accomplish alone.",
    "related": ["Multi-Agent System", "Collaboration", "Coalition Formation", "Cooperative Behavior"],
    "tags": ["agent-coalition", "collaborative-group", "cooperative-behavior"],
    "references": [
      "https://en.wikipedia.org/wiki/Coalition_game_theory",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/coalition.pdf"
    ]
  },
  {
    "term": "Negotiation Protocols",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Negotiation", "Bargaining Protocols"],
    "definition": "Structured communication processes that enable agents to reach agreements through offers, counteroffers, and compromise in multi-agent scenarios.",
    "related": ["Agent Communication", "Conflict Resolution", "Agreement Formation", "Multi-Agent Coordination"],
    "tags": ["negotiation-protocols", "agreement-formation", "conflict-resolution"],
    "references": [
      "https://en.wikipedia.org/wiki/Automated_negotiation",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/negotiation.pdf"
    ]
  },
  {
    "term": "Decentralized Coordination",
    "category": "AI Agents & Autonomy",
    "aliases": ["Distributed Coordination", "Peer-to-Peer Coordination"],
    "definition": "Coordination mechanisms where agents collaborate without a central authority, using distributed algorithms to achieve collective behavior.",
    "related": ["Distributed Systems", "Peer-to-Peer", "Collective Behavior", "Consensus Mechanism"],
    "tags": ["decentralized-coordination", "distributed-control", "peer-coordination"],
    "references": [
      "https://en.wikipedia.org/wiki/Decentralized_system",
      "https://arxiv.org/abs/2308.10379"
    ]
  },
  {
    "term": "Distributed Agent Graph",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Network Graph", "Multi-Agent Network"],
    "definition": "A graph-based representation of agent relationships and interactions in a distributed system, showing communication paths and dependencies.",
    "related": ["Multi-Agent System", "Network Topology", "Agent Communication", "Distributed Systems"],
    "tags": ["distributed-graph", "agent-network", "relationship-mapping"],
    "references": [
      "https://en.wikipedia.org/wiki/Network_topology",
      "https://arxiv.org/abs/2402.14916"
    ]
  },
  {
    "term": "Agent Contract",
    "category": "AI Agents & Autonomy",
    "aliases": ["Service Contract", "Agent Agreement"],
    "definition": "A formal specification that defines the obligations, capabilities, and interaction protocols between agents or between agents and systems.",
    "related": ["Service Level Agreement", "Interface Contract", "Agent Protocols", "Formal Specification"],
    "tags": ["agent-contract", "service-agreement", "formal-specification"],
    "references": [
      "https://en.wikipedia.org/wiki/Design_by_contract",
      "https://www.fipa.org/repository/aclspecs.html"
    ]
  },
  {
    "term": "Inter-Agent Trust",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Trust", "Trust Management"],
    "definition": "A measure of confidence that one agent has in another agent's reliability, competence, and intentions, crucial for effective multi-agent collaboration.",
    "related": ["Reputation Systems", "Trust Management", "Agent Reliability", "Collaborative Systems"],
    "tags": ["inter-agent-trust", "trust-management", "agent-reliability"],
    "references": [
      "https://en.wikipedia.org/wiki/Computational_trust",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/trust.pdf"
    ]
  },
  {
    "term": "Emergent Strategy",
    "category": "AI Agents & Autonomy",
    "aliases": ["Emergent Coordination", "Self-Organizing Strategy"],
    "definition": "Collective strategies that arise spontaneously from agent interactions without central planning, often leading to unexpected but effective coordination patterns.",
    "related": ["Emergent Behavior", "Self-Organization", "Collective Intelligence", "Swarm Intelligence"],
    "tags": ["emergent-strategy", "self-organizing", "collective-behavior"],
    "references": [
      "https://en.wikipedia.org/wiki/Emergence",
      "https://www.nature.com/articles/s41467-020-16811-y"
    ]
  },
  {
    "term": "Semantic Messaging",
    "category": "AI Agents & Autonomy",
    "aliases": ["Meaning-Based Communication", "Semantic Communication"],
    "definition": "Communication between agents that preserves and conveys semantic meaning rather than just syntactic structure, enabling richer understanding and interaction.",
    "related": ["Agent Communication", "Semantic Understanding", "Knowledge Sharing", "Ontology"],
    "tags": ["semantic-messaging", "meaning-based", "semantic-communication"],
    "references": [
      "https://www.fipa.org/repository/aclspecs.html",
      "https://en.wikipedia.org/wiki/Semantic_communication"
    ]
  },
  {
    "term": "Intention Signaling",
    "category": "AI Agents & Autonomy",
    "aliases": ["Intent Communication", "Purpose Signaling"],
    "definition": "The communication of an agent's intentions or planned actions to other agents, enabling better coordination and conflict avoidance.",
    "related": ["Intent Propagation", "Agent Communication", "Coordination", "Goal Sharing"],
    "tags": ["intention-signaling", "intent-communication", "coordination"],
    "references": [
      "https://arxiv.org/abs/2308.10379",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/planning.pdf"
    ]
  },
  {
    "term": "Turn-Taking",
    "category": "AI Agents & Autonomy",
    "aliases": ["Dialogue Turn Management", "Conversation Management"],
    "definition": "The mechanism by which conversational agents manage speaking turns in dialogue, ensuring smooth and natural conversational flow.",
    "related": ["Dialogue Agent", "Conversation Management", "Natural Language Processing", "Interactive Communication"],
    "tags": ["turn-taking", "conversation-management", "dialogue-control"],
    "references": [
      "https://en.wikipedia.org/wiki/Turn-taking",
      "https://www.microsoft.com/en-us/research/project/conversational-ai/"
    ]
  },
  {
    "term": "Message Routing",
    "category": "AI Agents & Autonomy",
    "aliases": ["Communication Routing", "Agent Message Delivery"],
    "definition": "The process of directing messages between agents through network paths, ensuring efficient and reliable communication in distributed agent systems.",
    "related": ["Message Passing", "Network Routing", "Communication Protocols", "Distributed Systems"],
    "tags": ["message-routing", "communication-routing", "distributed-messaging"],
    "references": [
      "https://en.wikipedia.org/wiki/Routing",
      "https://docs.solace.com/PubSub-Basics/Core-Concepts.htm"
    ]
  },
  {
    "term": "Agent Middleware",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Communication Middleware", "Agent Platform Layer"],
    "definition": "Software that provides common services and capabilities for agent communication, coordination, and management in distributed agent systems.",
    "related": ["Middleware", "Agent Platform", "Communication Infrastructure", "Distributed Systems"],
    "tags": ["agent-middleware", "communication-infrastructure", "platform-layer"],
    "references": [
      "https://en.wikipedia.org/wiki/Middleware",
      "https://www.fipa.org/repository/standardspecs.html"
    ]
  },
  {
    "term": "Topic Subscription",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Subscription", "Event Subscription"],
    "definition": "The mechanism by which agents subscribe to specific topics or event types to receive relevant messages and updates in publish-subscribe systems.",
    "related": ["Pub/Sub Communication", "Event-Driven Architecture", "Message Filtering", "Selective Communication"],
    "tags": ["topic-subscription", "event-subscription", "selective-communication"],
    "references": [
      "https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern",
      "https://docs.solace.com/PubSub-Basics/Core-Concepts.htm"
    ]
  },
  {
    "term": "Command vs Query Pattern",
    "category": "AI Agents & Autonomy",
    "aliases": ["CQRS for Agents", "Command-Query Separation"],
    "definition": "An architectural pattern where agent operations are separated into commands (that change state) and queries (that read state), improving clarity and performance.",
    "related": ["CQRS", "Agent Architecture", "State Management", "Command Pattern"],
    "tags": ["command-query", "architectural-pattern", "state-separation"],
    "references": [
      "https://en.wikipedia.org/wiki/Command%E2%80%93query_separation",
      "https://martinfowler.com/bliki/CQRS.html"
    ]
  },
  {
    "term": "Theory of Mind",
    "category": "AI Agents & Autonomy",
    "aliases": ["ToM", "Mental State Attribution"],
    "definition": "The cognitive ability to understand that others have beliefs, desires, and intentions that may differ from one's own, crucial for sophisticated agent interaction.",
    "related": ["Cognitive Modeling", "Social Intelligence", "Mental Models", "Agent Understanding"],
    "tags": ["theory-of-mind", "social-cognition", "mental-modeling"],
    "references": [
      "https://en.wikipedia.org/wiki/Theory_of_mind",
      "https://arxiv.org/abs/2212.09512"
    ]
  },
  {
    "term": "Symbol Grounding",
    "category": "AI Agents & Autonomy",
    "aliases": ["Grounding Problem", "Symbol-Reality Connection"],
    "definition": "The process of connecting abstract symbols or representations to real-world objects and experiences, enabling meaningful interaction with the physical world.",
    "related": ["Embodied Agent", "Physical Interaction", "Semantic Understanding", "Real-World Connection"],
    "tags": ["symbol-grounding", "real-world-connection", "embodied-cognition"],
    "references": [
      "https://en.wikipedia.org/wiki/Symbol_grounding_problem",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/embodied.pdf"
    ]
  },
  {
    "term": "World Modeling",
    "category": "AI Agents & Autonomy",
    "aliases": ["Environment Modeling", "World Representation"],
    "definition": "The process by which agents build and maintain internal representations of their environment, including objects, relationships, and dynamics.",
    "related": ["Environment Model", "State Representation", "Internal Model", "Predictive Modeling"],
    "tags": ["world-modeling", "environment-representation", "internal-model"],
    "references": [
      "https://arxiv.org/abs/1803.10122",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15781-s16/www/slides/world-models.pdf"
    ]
  },
  {
    "term": "Mental Model",
    "category": "AI Agents & Autonomy",
    "aliases": ["Cognitive Model", "Internal Representation"],
    "definition": "An agent's internal representation of how the world works, including causal relationships, object properties, and behavioral expectations.",
    "related": ["World Modeling", "Cognitive Architecture", "Internal Representation", "Causal Understanding"],
    "tags": ["mental-model", "cognitive-representation", "internal-understanding"],
    "references": [
      "https://en.wikipedia.org/wiki/Mental_model",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/mental-models.pdf"
    ]
  },
  {
    "term": "Embodied Simulation",
    "category": "AI Agents & Autonomy",
    "aliases": ["Physical Simulation", "Embodied Modeling"],
    "definition": "The use of physical or sensorimotor simulations to understand and predict interactions in the physical world, particularly relevant for embodied agents.",
    "related": ["Embodied Agent", "Physical Simulation", "Sensorimotor Learning", "Body Schema"],
    "tags": ["embodied-simulation", "physical-modeling", "sensorimotor"],
    "references": [
      "https://en.wikipedia.org/wiki/Embodied_simulation",
      "https://www.nature.com/articles/s41598-020-68623-9"
    ]
  },
  {
    "term": "Situated Cognition",
    "category": "AI Agents & Autonomy",
    "aliases": ["Situated Intelligence", "Context-Dependent Cognition"],
    "definition": "The theory that cognitive processes are deeply dependent on the physical and social context in which they occur, emphasizing environment-cognition coupling.",
    "related": ["Embodied Cognition", "Context Awareness", "Environmental Coupling", "Situated Action"],
    "tags": ["situated-cognition", "context-dependent", "environmental-coupling"],
    "references": [
      "https://en.wikipedia.org/wiki/Situated_cognition",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/situated.pdf"
    ]
  },
  {
    "term": "Affordances",
    "category": "AI Agents & Autonomy",
    "aliases": ["Action Possibilities", "Environmental Opportunities"],
    "definition": "The action possibilities that the environment offers to an agent, representing what the agent can do with objects or in situations based on its capabilities.",
    "related": ["Embodied Agent", "Action Space", "Environmental Interaction", "Capability Mapping"],
    "tags": ["affordances", "action-possibilities", "environmental-interaction"],
    "references": [
      "https://en.wikipedia.org/wiki/Affordance",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15381-s07/www/slides/affordances.pdf"
    ]
  },
  {
    "term": "Agent Sandbox",
    "category": "AI Agents & Autonomy",
    "aliases": ["Isolated Agent Environment", "Agent Testing Environment"],
    "definition": "A secure, isolated environment where agents can be safely tested, debugged, and evaluated without affecting production systems or external resources.",
    "related": ["Testing Environment", "Security Isolation", "Safe Execution", "Development Environment"],
    "tags": ["agent-sandbox", "isolated-testing", "safe-environment"],
    "references": [
      "https://en.wikipedia.org/wiki/Sandbox_(computer_security)",
      "https://kubernetes.io/docs/concepts/security/pod-security-standards/"
    ]
  },
  {
    "term": "Agent as a Service",
    "category": "AI Agents & Autonomy",
    "aliases": ["AaaS", "Remote Agent Execution"],
    "definition": "A deployment model where AI agents are provided as cloud-based services, accessible remotely through APIs, enabling scalable and distributed agent functionality.",
    "related": ["Cloud Computing", "Service-Oriented Architecture", "Remote Execution", "API Services"],
    "tags": ["agent-as-service", "cloud-agents", "remote-execution"],
    "references": [
      "https://en.wikipedia.org/wiki/Software_as_a_service",
      "https://aws.amazon.com/what-is/saas/"
    ]
  },
  {
    "term": "Agent Packaging",
    "category": "AI Agents & Autonomy",
    "aliases": ["Containerized Agents", "Agent Deployment Package"],
    "definition": "The process of bundling agent code, dependencies, and configuration into deployable packages, often using containerization technologies for consistent deployment.",
    "related": ["Docker", "Containerization", "Deployment Package", "Agent Deployment"],
    "tags": ["agent-packaging", "containerization", "deployment-package"],
    "references": [
      "https://docs.docker.com/get-started/",
      "https://kubernetes.io/docs/concepts/containers/"
    ]
  },
  {
    "term": "Hot Reloading",
    "category": "AI Agents & Autonomy",
    "aliases": ["Dynamic Reloading", "Runtime Updates"],
    "definition": "The capability to update agent logic, configuration, or behavior while the agent is running, without requiring system restart or downtime.",
    "related": ["Dynamic Configuration", "Runtime Updates", "Zero-Downtime Deployment", "Live Updates"],
    "tags": ["hot-reloading", "dynamic-updates", "runtime-modification"],
    "references": [
      "https://en.wikipedia.org/wiki/Hot_swapping",
      "https://webpack.js.org/concepts/hot-module-replacement/"
    ]
  },
  {
    "term": "Telemetry Hooks",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Telemetry", "Monitoring Hooks"],
    "definition": "Built-in monitoring and data collection points within agents that enable gathering of performance metrics, behavior data, and operational insights.",
    "related": ["Observability Hooks", "Performance Monitoring", "Data Collection", "Agent Monitoring"],
    "tags": ["telemetry-hooks", "performance-monitoring", "data-collection"],
    "references": [
      "https://opentelemetry.io/docs/concepts/",
      "https://docs.datadoghq.com/tracing/guide/custom_instrumentation/"
    ]
  },
  {
    "term": "Agent Observability",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Monitoring", "Agent Visibility"],
    "definition": "The ability to understand and monitor the internal state, behavior, and performance of AI agents through metrics, logs, and traces.",
    "related": ["Observability", "System Monitoring", "Performance Tracking", "Agent Debugging"],
    "tags": ["agent-observability", "monitoring", "system-visibility"],
    "references": [
      "https://opentelemetry.io/docs/concepts/observability-primer/",
      "https://www.honeycomb.io/what-is-observability"
    ]
  },
  {
    "term": "Runtime Instrumentation",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Instrumentation", "Dynamic Instrumentation"],
    "definition": "The addition of monitoring and measurement code to agent systems at runtime, enabling detailed performance analysis and behavior tracking.",
    "related": ["Instrumentation", "Performance Profiling", "Runtime Monitoring", "Dynamic Analysis"],
    "tags": ["runtime-instrumentation", "performance-profiling", "dynamic-monitoring"],
    "references": [
      "https://en.wikipedia.org/wiki/Instrumentation_(computer_programming)",
      "https://docs.datadoghq.com/tracing/guide/custom_instrumentation/"
    ]
  },
  {
    "term": "Decoupled Deployment",
    "category": "AI Agents & Autonomy",
    "aliases": ["Independent Deployment", "Loosely Coupled Deployment"],
    "definition": "A deployment strategy where agent components can be deployed independently without affecting other parts of the system, enabling flexible updates and scaling.",
    "related": ["Microservices", "Independent Deployment", "Loose Coupling", "Service Independence"],
    "tags": ["decoupled-deployment", "independent-deployment", "loose-coupling"],
    "references": [
      "https://microservices.io/patterns/deployment/multiple-services-per-host.html",
      "https://martinfowler.com/articles/microservices.html"
    ]
  },
  {
    "term": "Edge-Deployed Agent",
    "category": "AI Agents & Autonomy",
    "aliases": ["Edge Agent", "Local Agent"],
    "definition": "An AI agent deployed at the edge of the network, close to data sources or users, enabling low-latency processing and reduced bandwidth usage.",
    "related": ["Edge Computing", "Local Processing", "Distributed Deployment", "Low Latency"],
    "tags": ["edge-agent", "edge-deployment", "local-processing"],
    "references": [
      "https://en.wikipedia.org/wiki/Edge_computing",
      "https://www.nvidia.com/en-us/glossary/data-science/edge-ai/"
    ]
  },
  {
    "term": "Agent Debugging Interface",
    "category": "AI Agents & Autonomy",
    "aliases": ["Agent Debugger", "Debug Interface"],
    "definition": "Tools and interfaces that enable developers to inspect, debug, and troubleshoot agent behavior, including state examination and execution tracing.",
    "related": ["Debugging Tools", "Development Interface", "Agent Inspection", "Troubleshooting"],
    "tags": ["agent-debugging", "debug-interface", "development-tools"],
    "references": [
      "https://en.wikipedia.org/wiki/Debugger",
      "https://code.visualstudio.com/docs/editor/debugging"
    ]
  },
  {
    "term": "Risk Mitigation",
    "category": "Ethics & Governance",
    "aliases": ["Risk Reduction", "Risk Management"],
    "definition": "Strategies and practices used to reduce the likelihood or impact of potential risks associated with AI systems, including technical, ethical, and operational risks.",
    "related": ["Risk Assessment", "AI Safety", "Risk Management", "Safety Protocols"],
    "tags": ["risk-mitigation", "safety", "risk-reduction"],
    "references": [
      "https://en.wikipedia.org/wiki/Risk_management",
      "https://www.nist.gov/itl/ai-risk-management-framework"
    ]
  },
  {
    "term": "Memory Optimization",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Memory Efficiency", "RAM Optimization"],
    "definition": "Techniques and strategies to reduce memory usage in AI systems, including gradient checkpointing, mixed precision training, and efficient data structures.",
    "related": ["Gradient Accumulation", "Mixed Precision Training", "Resource Management", "Training Efficiency"],
    "tags": ["memory-optimization", "resource-efficiency", "performance-optimization"],
    "references": [
      "https://pytorch.org/docs/stable/checkpoint.html",
      "https://huggingface.co/docs/transformers/perf_train_gpu_one"
    ]
  },
  {
    "term": "Data Governance",
    "category": "Data Engineering for AI",
    "aliases": ["Information Governance", "Data Management"],
    "definition": "The overall management of data availability, usability, integrity, and security in an organization, ensuring proper data handling for AI applications.",
    "related": ["Data Quality", "Data Privacy", "Metadata Management", "Data Stewardship"],
    "tags": ["data-governance", "data-management", "data-stewardship"],
    "references": [
      "https://en.wikipedia.org/wiki/Data_governance",
      "https://www.ibm.com/topics/data-governance"
    ]
  },
  {
    "term": "Training",
    "category": "AI Fundamentals",
    "aliases": ["Model Training", "Learning Process"],
    "definition": "The process of teaching a machine learning model to make predictions or decisions by exposing it to training data and adjusting its parameters to minimize error.",
    "related": ["Training Data", "Optimization", "Learning Algorithm", "Model Development"],
    "tags": ["training", "learning-process", "model-development"],
    "references": [
      "https://en.wikipedia.org/wiki/Training,_validation,_and_test_sets",
      "https://www.deeplearningbook.org/contents/ml.html"
    ]
  },
  {
    "term": "Encoder-Decoder",
    "category": "Deep Learning Architectures",
    "aliases": ["Encoder-Decoder Architecture", "Seq2Seq"],
    "definition": "A neural network architecture consisting of an encoder that processes input into a fixed representation and a decoder that generates output from that representation.",
    "related": ["Sequence-to-Sequence", "Transformer", "Attention Mechanism", "Neural Machine Translation"],
    "tags": ["encoder-decoder", "sequence-modeling", "neural-architecture"],
    "references": [
      "https://en.wikipedia.org/wiki/Encoder%E2%80%93decoder",
      "https://www.tensorflow.org/text/tutorials/nmt_with_attention"
    ]
  },
  {
    "term": "Search Algorithms",
    "category": "AI Fundamentals",
    "aliases": ["Search Methods", "Search Strategies"],
    "definition": "Algorithms designed to find solutions by systematically exploring a search space, fundamental to AI problem-solving in planning, optimization, and decision-making.",
    "related": ["Planning", "Optimization", "Problem Solving", "Tree Search"],
    "tags": ["search-algorithms", "problem-solving", "optimization"],
    "references": [
      "https://en.wikipedia.org/wiki/Search_algorithm",
      "https://www.cs.cmu.edu/afs/cs/academic/class/15780-s16/www/lectures/search.pdf"
    ]
  },
  {
    "term": "Low Latency",
    "category": "Model Deployment & Operations",
    "aliases": ["Real-time Response", "Fast Response"],
    "definition": "The characteristic of systems that can process requests and provide responses with minimal delay, critical for real-time AI applications and interactive systems.",
    "related": ["Real-time Processing", "Performance Optimization", "Response Time", "System Performance"],
    "tags": ["low-latency", "real-time", "performance"],
    "references": [
      "https://en.wikipedia.org/wiki/Latency_(engineering)",
      "https://aws.amazon.com/what-is/latency/"
    ]
  },
  {
    "term": "Transparency",
    "category": "Ethics & Governance",
    "aliases": ["AI Transparency", "System Transparency"],
    "definition": "The principle that AI systems should be open and understandable to stakeholders, providing visibility into how decisions are made and systems operate.",
    "related": ["Explainable AI", "Accountability", "Algorithmic Transparency", "Interpretability"],
    "tags": ["transparency", "openness", "interpretability"],
    "references": [
      "https://en.wikipedia.org/wiki/Algorithmic_transparency",
      "https://www.partnershiponai.org/about/#mission"
    ]
  },
  {
    "term": "Risk Management",
    "category": "Ethics & Governance",
    "aliases": ["Enterprise Risk Management", "Risk Control"],
    "definition": "The systematic approach to identifying, assessing, and controlling risks that could impact AI system performance, safety, or compliance with regulations.",
    "related": ["Risk Assessment", "Risk Mitigation", "Compliance", "Safety Protocols"],
    "tags": ["risk-management", "risk-control", "safety"],
    "references": [
      "https://en.wikipedia.org/wiki/Risk_management",
      "https://www.iso.org/iso-31000-risk-management.html"
    ]
  },
  {
    "term": "Model Validation",
    "category": "AI Fundamentals",
    "aliases": ["Model Testing", "Validation Process"],
    "definition": "The process of evaluating a trained model's performance on unseen data to ensure it generalizes well and meets quality standards before deployment.",
    "related": ["Cross-Validation", "Test Data", "Model Evaluation", "Performance Assessment"],
    "tags": ["model-validation", "testing", "quality-assurance"],
    "references": [
      "https://en.wikipedia.org/wiki/Model_validation",
      "https://scikit-learn.org/stable/modules/cross_validation.html"
    ]
  },
  {
    "term": "Distributed Systems",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Distributed Computing", "Distributed Architecture"],
    "definition": "A computing paradigm where components located on networked computers communicate and coordinate their actions by message passing, enabling scalable and fault-tolerant AI applications.",
    "related": ["Microservices", "Load Balancing", "Fault Tolerance", "Scalability"],
    "tags": ["distributed-systems", "scalability", "fault-tolerance"],
    "references": [
      "https://en.wikipedia.org/wiki/Distributed_computing",
      "https://www.ibm.com/topics/distributed-systems"
    ]
  },
  {
    "term": "Compliance",
    "category": "Ethics & Governance",
    "aliases": ["Regulatory Compliance", "Legal Compliance"],
    "definition": "Adherence to laws, regulations, guidelines, and specifications relevant to AI systems, ensuring that implementations meet legal and ethical requirements.",
    "related": ["Regulatory Requirements", "Legal Requirements", "Governance", "GDPR"],
    "tags": ["compliance", "regulatory", "legal-requirements"],
    "references": [
      "https://en.wikipedia.org/wiki/Regulatory_compliance",
      "https://www.nist.gov/itl/ai-risk-management-framework"
    ]
  },
  {
    "term": "Context Management",
    "category": "AI Fundamentals",
    "aliases": ["Context Handling", "Contextual State Management"],
    "definition": "The ability to maintain, update, and utilize contextual information across interactions or system components, crucial for coherent AI behavior.",
    "related": ["Context Awareness", "State Management", "Memory Management", "Information Flow"],
    "tags": ["context-management", "state-handling", "information-flow"],
    "references": [
      "https://en.wikipedia.org/wiki/Context_(computing)",
      "https://langchain-ai.github.io/langgraph/concepts/memory/"
    ]
  },
  {
    "term": "Generative Model",
    "category": "Generative AI",
    "aliases": ["Generative Algorithm", "Content Generation Model"],
    "definition": "A class of machine learning models that can generate new data samples that resemble the training data, including text, images, audio, and other content types.",
    "related": ["GAN", "VAE", "Diffusion Model", "Autoregressive Model"],
    "tags": ["generative-model", "content-generation", "data-synthesis"],
    "references": [
      "https://en.wikipedia.org/wiki/Generative_model",
      "https://www.deeplearningbook.org/contents/generative_models.html"
    ]
  },
  {
    "term": "Performance Metrics",
    "category": "AI Fundamentals",
    "aliases": ["KPI", "Performance Indicators"],
    "definition": "Quantitative measures used to evaluate the effectiveness, efficiency, and quality of AI systems, including accuracy, latency, throughput, and resource utilization.",
    "related": ["Evaluation Metric", "Model Evaluation", "Performance Assessment", "Benchmarking"],
    "tags": ["performance-metrics", "evaluation", "measurement"],
    "references": [
      "https://scikit-learn.org/stable/modules/model_evaluation.html",
      "https://www.ibm.com/topics/model-evaluation"
    ]
  },
  {
    "term": "Risk Assessment",
    "category": "Ethics & Governance",
    "aliases": ["Risk Analysis", "Risk Evaluation"],
    "definition": "The systematic process of identifying, analyzing, and evaluating potential risks and their impacts in AI systems to inform decision-making and mitigation strategies.",
    "related": ["Risk Management", "Risk Mitigation", "Impact Assessment", "Vulnerability Assessment"],
    "tags": ["risk-assessment", "risk-analysis", "impact-evaluation"],
    "references": [
      "https://en.wikipedia.org/wiki/Risk_assessment",
      "https://www.nist.gov/itl/ai-risk-management-framework"
    ]
  },
  {
    "term": "Neural Networks",
    "category": "Machine Learning Algorithms",
    "aliases": ["Artificial Neural Networks", "ANNs"],
    "definition": "Computing systems inspired by biological neural networks, consisting of interconnected nodes (neurons) that process information through weighted connections and activation functions.",
    "related": ["Deep Learning", "Perceptron", "Backpropagation", "Artificial Intelligence"],
    "tags": ["neural-networks", "connectionist", "deep-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Artificial_neural_network",
      "https://www.ibm.com/topics/neural-networks"
    ]
  },
  {
    "term": "Problem Solving",
    "category": "AI Fundamentals",
    "aliases": ["Computational Problem Solving", "AI Problem Solving"],
    "definition": "The process of finding solutions to complex problems using computational methods, reasoning, and systematic approaches characteristic of artificial intelligence.",
    "related": ["Search Algorithms", "Planning", "Reasoning", "Decision Making"],
    "tags": ["problem-solving", "reasoning", "computational-thinking"],
    "references": [
      "https://en.wikipedia.org/wiki/Problem_solving",
      "https://plato.stanford.edu/entries/reasoning-automated/"
    ]
  },
  {
    "term": "Microservices",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Microservice Architecture", "Service-Oriented Architecture"],
    "definition": "An architectural approach where applications are built as a collection of loosely coupled, independently deployable services that communicate over well-defined APIs.",
    "related": ["Distributed Systems", "API Gateway", "Service Mesh", "Container Deployment"],
    "tags": ["microservices", "distributed-architecture", "service-oriented"],
    "references": [
      "https://en.wikipedia.org/wiki/Microservices",
      "https://martinfowler.com/articles/microservices.html"
    ]
  },
  {
    "term": "Quantization",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Model Quantization", "Weight Quantization"],
    "definition": "A technique that reduces the precision of model weights and activations from floating-point to lower-precision formats, decreasing model size and improving inference speed.",
    "related": ["Model Compression", "Inference Optimization", "8-bit Precision", "Performance Optimization"],
    "tags": ["quantization", "model-compression", "optimization"],
    "references": [
      "https://pytorch.org/docs/stable/quantization.html",
      "https://www.tensorflow.org/model_optimization/guide/quantization/training"
    ]
  },
  {
    "term": "Sequence-to-Sequence",
    "category": "Deep Learning Architectures",
    "aliases": ["Seq2Seq", "Sequence Modeling"],
    "definition": "A neural network architecture that transforms one sequence into another sequence, commonly used for machine translation, text summarization, and conversational AI.",
    "related": ["Encoder-Decoder", "RNN", "LSTM", "Attention Mechanism"],
    "tags": ["seq2seq", "sequence-modeling", "neural-architecture"],
    "references": [
      "https://en.wikipedia.org/wiki/Seq2seq",
      "https://arxiv.org/abs/1409.3215"
    ]
  },
  {
    "term": "Pre-trained Models",
    "category": "Generative AI",
    "aliases": ["Foundation Models", "Base Models"],
    "definition": "Models that have been trained on large datasets and can be fine-tuned or used as-is for various downstream tasks, providing a starting point for AI applications.",
    "related": ["Transfer Learning", "Fine-tuning", "Foundation Model", "BERT"],
    "tags": ["pre-trained", "foundation-models", "transfer-learning"],
    "references": [
      "https://huggingface.co/models",
      "https://arxiv.org/abs/2108.07258"
    ]
  },
  {
    "term": "External Knowledge",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["External Information", "Knowledge Sources"],
    "definition": "Information and data sources outside of a model's training data that can be accessed and utilized to enhance AI system capabilities and accuracy.",
    "related": ["Knowledge Base", "Retrieval-Augmented Generation", "Information Retrieval", "Grounding"],
    "tags": ["external-knowledge", "knowledge-sources", "information-access"],
    "references": [
      "https://arxiv.org/abs/2005.11401",
      "https://en.wikipedia.org/wiki/Knowledge_base"
    ]
  },
  {
    "term": "Decision Theory",
    "category": "AI Fundamentals",
    "aliases": ["Decision Science", "Rational Choice Theory"],
    "definition": "A mathematical framework for making optimal decisions under uncertainty, providing theoretical foundations for AI agent behavior and choice selection.",
    "related": ["Utility Function", "Game Theory", "Probability Theory", "Optimization"],
    "tags": ["decision-theory", "optimization", "rational-choice"],
    "references": [
      "https://en.wikipedia.org/wiki/Decision_theory",
      "https://plato.stanford.edu/entries/decision-theory/"
    ]
  },
  {
    "term": "Semantic Web",
    "category": "Knowledge & Retrieval Systems",
    "aliases": ["Web 3.0", "Linked Data"],
    "definition": "An extension of the World Wide Web that enables data to be shared and reused across applications through common formats and standards for semantic markup.",
    "related": ["RDF", "Ontology", "Knowledge Graph", "Linked Data"],
    "tags": ["semantic-web", "linked-data", "knowledge-representation"],
    "references": [
      "https://en.wikipedia.org/wiki/Semantic_Web",
      "https://www.w3.org/standards/semanticweb/"
    ]
  },
  {
    "term": "Representation Learning",
    "category": "Machine Learning Algorithms",
    "aliases": ["Feature Learning", "Automatic Feature Learning"],
    "definition": "A set of techniques that learn representations of data that make it easier to extract useful information when building classifiers or other predictors.",
    "related": ["Feature Learning", "Deep Learning", "Unsupervised Learning", "Embedding"],
    "tags": ["representation-learning", "feature-learning", "automatic-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Feature_learning",
      "https://www.deeplearningbook.org/contents/representation.html"
    ]
  },
  {
    "term": "Data Integration",
    "category": "Data Engineering for AI",
    "aliases": ["Data Fusion", "Information Integration"],
    "definition": "The process of combining data from different sources and providing users with a unified view of the data for analysis and decision-making.",
    "related": ["ETL", "Data Pipeline", "Data Warehousing", "Data Lake"],
    "tags": ["data-integration", "data-fusion", "unified-data"],
    "references": [
      "https://en.wikipedia.org/wiki/Data_integration",
      "https://www.ibm.com/topics/data-integration"
    ]
  },
  {
    "term": "Scalability",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["System Scalability", "Horizontal Scaling"],
    "definition": "The capability of a system to handle a growing amount of work by adding resources to the system, crucial for AI applications handling increasing data and user loads.",
    "related": ["Load Balancing", "Distributed Systems", "Performance Optimization", "Resource Management"],
    "tags": ["scalability", "system-growth", "resource-scaling"],
    "references": [
      "https://en.wikipedia.org/wiki/Scalability",
      "https://aws.amazon.com/what-is/scalability/"
    ]
  },
  {
    "term": "Performance Optimization",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["System Optimization", "Efficiency Improvement"],
    "definition": "The process of improving system performance by reducing resource consumption, increasing speed, or enhancing throughput in AI applications.",
    "related": ["Memory Optimization", "Quantization", "Model Compression", "Inference Optimization"],
    "tags": ["performance-optimization", "efficiency", "system-improvement"],
    "references": [
      "https://en.wikipedia.org/wiki/Program_optimization",
      "https://pytorch.org/tutorials/recipes/recipes/tuning_guide.html"
    ]
  },
  {
    "term": "Data Privacy",
    "category": "Ethics & Governance",
    "aliases": ["Information Privacy", "Data Protection"],
    "definition": "The aspect of information technology that deals with the ability to determine what data in a computer system can be shared with third parties.",
    "related": ["GDPR", "Privacy-Preserving ML", "Differential Privacy", "Data Governance"],
    "tags": ["data-privacy", "privacy-protection", "data-security"],
    "references": [
      "https://en.wikipedia.org/wiki/Information_privacy",
      "https://gdpr.eu/what-is-gdpr/"
    ]
  },
  {
    "term": "GDPR",
    "category": "Ethics & Governance",
    "aliases": ["General Data Protection Regulation"],
    "definition": "A comprehensive data protection law in the European Union that regulates how personal data is collected, processed, and stored, with significant implications for AI systems.",
    "related": ["Data Privacy", "Compliance", "Privacy Rights", "Data Protection"],
    "tags": ["gdpr", "data-protection", "privacy-regulation"],
    "references": [
      "https://gdpr.eu/what-is-gdpr/",
      "https://en.wikipedia.org/wiki/General_Data_Protection_Regulation"
    ]
  },
  {
    "term": "Governance",
    "category": "Ethics & Governance",
    "aliases": ["AI Governance", "System Governance"],
    "definition": "The framework of rules, relationships, systems, and processes within and by which authority is exercised and controlled in AI organizations and systems.",
    "related": ["Compliance", "Risk Management", "Policy", "Accountability"],
    "tags": ["governance", "organizational-control", "policy-framework"],
    "references": [
      "https://en.wikipedia.org/wiki/Governance",
      "https://www.oecd.org/digital/artificial-intelligence/"
    ]
  },
  {
    "term": "Sensor Fusion",
    "category": "AI Agents & Autonomy",
    "aliases": ["Data Fusion", "Multi-sensor Integration"],
    "definition": "The process of integrating sensory data from disparate sources to produce more consistent, accurate, and useful information than could be obtained from any individual sensor alone.",
    "related": ["Autonomous Vehicles", "Robotics", "LIDAR", "Computer Vision"],
    "tags": ["sensor-fusion", "multi-sensor", "data-integration"],
    "references": [
      "https://en.wikipedia.org/wiki/Sensor_fusion",
      "https://www.mathworks.com/help/fusion/getting-started-with-sensor-fusion-and-tracking-toolbox.html"
    ]
  },
  {
    "term": "System Integration",
    "category": "AI Infrastructure & Ecosystem",
    "aliases": ["Software Integration", "Component Integration"],
    "definition": "The process of linking together different computing systems and software applications physically or functionally to act as a coordinated whole.",
    "related": ["API Integration", "Microservices", "Service Integration", "Enterprise Integration"],
    "tags": ["system-integration", "component-linking", "software-integration"],
    "references": [
      "https://en.wikipedia.org/wiki/System_integration",
      "https://www.ibm.com/topics/system-integration"
    ]
  },
  {
    "term": "Workflow Management",
    "category": "AI Agents & Autonomy",
    "aliases": ["Process Management", "Workflow Orchestration"],
    "definition": "The coordination of tasks that make up the work processes of an organization, including the automated execution, control, and measurement of workflows.",
    "related": ["Business Process Management", "Task Scheduling", "Process Automation", "Orchestration"],
    "tags": ["workflow-management", "process-coordination", "task-orchestration"],
    "references": [
      "https://en.wikipedia.org/wiki/Workflow_management_system",
      "https://www.ibm.com/topics/workflow-automation"
    ]
  },
  {
    "term": "Performance Tracking",
    "category": "Model Deployment & Operations",
    "aliases": ["Performance Monitoring", "Metrics Tracking"],
    "definition": "The continuous monitoring and recording of system performance metrics to ensure optimal operation and identify areas for improvement.",
    "related": ["Model Monitoring", "Performance Metrics", "System Monitoring", "Analytics"],
    "tags": ["performance-tracking", "metrics-monitoring", "system-analytics"],
    "references": [
      "https://en.wikipedia.org/wiki/Performance_monitoring",
      "https://www.datadoghq.com/knowledge-center/application-performance-monitoring/"
    ]
  },
  {
    "term": "State Management",
    "category": "AI Fundamentals",
    "aliases": ["State Handling", "State Control"],
    "definition": "The management of the state of one or more user interface controls in a computational system, crucial for maintaining consistent behavior in AI applications.",
    "related": ["Context Management", "Memory Management", "Session Management", "Data Persistence"],
    "tags": ["state-management", "state-control", "data-persistence"],
    "references": [
      "https://en.wikipedia.org/wiki/State_management",
      "https://redux.js.org/understanding/thinking-in-redux/motivation"
    ]
  },
  {
    "term": "Rule-Based System",
    "category": "AI Fundamentals",
    "aliases": ["Expert System", "Production System"],
    "definition": "An artificial intelligence system that applies rules to data to deduce conclusions or take actions, using if-then statements to represent knowledge and reasoning.",
    "related": ["Expert System", "Knowledge Base", "Inference Engine", "Production Rules"],
    "tags": ["rule-based", "expert-system", "knowledge-representation"],
    "references": [
      "https://en.wikipedia.org/wiki/Rule-based_system",
      "https://www.britannica.com/technology/expert-system"
    ]
  },
  {
    "term": "Markov Decision Process",
    "category": "Machine Learning Algorithms",
    "aliases": ["MDP", "Markov Process"],
    "definition": "A mathematical framework for modeling decision making in situations where outcomes are partly random and partly under the control of a decision maker.",
    "related": ["Reinforcement Learning", "Dynamic Programming", "State Space", "Policy"],
    "tags": ["mdp", "decision-process", "reinforcement-learning"],
    "references": [
      "https://en.wikipedia.org/wiki/Markov_decision_process",
      "https://spinningup.openai.com/en/latest/spinningup/rl_intro.html"
    ]
  },
  {
    "term": "Probabilistic Model",
    "category": "Machine Learning Algorithms",
    "aliases": ["Statistical Model", "Stochastic Model"],
    "definition": "A mathematical model that incorporates random variables and uncertainty, using probability distributions to represent knowledge and make predictions.",
    "related": ["Bayesian Inference", "Statistical Learning", "Uncertainty Quantification", "Probability Theory"],
    "tags": ["probabilistic-model", "statistical-learning", "uncertainty"],
    "references": [
      "https://en.wikipedia.org/wiki/Statistical_model",
      "https://www.deeplearningbook.org/contents/prob.html"
    ]
  },
  {
    "term": "Prompt Engineering",
    "category": "Prompt Engineering",
    "aliases": ["Prompt Design", "Prompt Crafting", "Prompt Optimization"],
    "definition": "The practice of designing and refining input prompts to effectively communicate with and guide the behavior of large language models to produce desired outputs.",
    "related": ["Few-shot Learning", "In-context Learning", "Chain-of-Thought", "Large Language Model"],
    "tags": ["prompt-engineering", "llm-interaction", "instruction-design"],
    "references": [
      "https://en.wikipedia.org/wiki/Prompt_engineering",
      "https://www.promptingguide.ai/"
    ]
  },
  {
    "term": "Zero-shot Prompting",
    "category": "Prompt Engineering",
    "aliases": ["Zero-shot Instruction", "Direct Prompting"],
    "definition": "A prompting technique where a task is described to a language model without providing any examples, relying solely on the model's pre-trained knowledge.",
    "related": ["Few-shot Learning", "One-shot Learning", "Task Description", "Direct Instruction"],
    "tags": ["zero-shot", "no-examples", "direct-instruction"],
    "references": [
      "https://arxiv.org/abs/2109.01652",
      "https://www.promptingguide.ai/techniques/zeroshot"
    ]
  },
  {
    "term": "Few-shot Prompting",
    "category": "Prompt Engineering",
    "aliases": ["Few-shot Learning", "Example-based Prompting"],
    "definition": "A prompting technique that provides a small number of examples within the prompt to demonstrate the desired task format and behavior to the language model.",
    "related": ["In-context Learning", "Example Demonstration", "Shot Learning", "Context Examples"],
    "tags": ["few-shot", "example-based", "demonstration"],
    "references": [
      "https://arxiv.org/abs/2005.14165",
      "https://www.promptingguide.ai/techniques/fewshot"
    ]
  },
  {
    "term": "Chain-of-Thought Prompting",
    "category": "Prompt Engineering",
    "aliases": ["CoT Prompting", "Step-by-Step Reasoning"],
    "definition": "A prompting technique that encourages language models to break down complex problems into intermediate reasoning steps, improving performance on tasks requiring logical thinking.",
    "related": ["Reasoning", "Problem Solving", "Step-by-Step Thinking", "Logical Reasoning"],
    "tags": ["chain-of-thought", "reasoning", "step-by-step"],
    "references": [
      "https://arxiv.org/abs/2201.11903",
      "https://www.promptingguide.ai/techniques/cot"
    ]
  },
  {
    "term": "Prompt Template",
    "category": "Prompt Engineering",
    "aliases": ["Template Design", "Prompt Format", "Structured Prompt"],
    "definition": "A reusable prompt structure with placeholders for variables, enabling consistent formatting and systematic prompt construction across different inputs.",
    "related": ["Template Design", "Prompt Structure", "Reusable Patterns", "Prompt Formatting"],
    "tags": ["template", "structure", "reusable-format"],
    "references": [
      "https://python.langchain.com/docs/modules/model_io/prompts/",
      "https://www.promptingguide.ai/introduction/basics"
    ]
  },
  {
    "term": "System Prompt",
    "category": "Prompt Engineering",
    "aliases": ["System Message", "System Instruction", "Context Setting"],
    "definition": "Initial instructions that define the AI's role, behavior, and operational parameters for an entire conversation or session, setting the context for all subsequent interactions.",
    "related": ["Context Setting", "Role Definition", "Behavior Control", "Session Configuration"],
    "tags": ["system-prompt", "context-setting", "role-definition"],
    "references": [
      "https://platform.openai.com/docs/guides/prompt-engineering/strategy-write-clear-instructions",
      "https://docs.anthropic.com/claude/docs/system-prompts"
    ]
  },
  {
    "term": "Prompt Injection",
    "category": "Prompt Engineering",
    "aliases": ["Injection Attack", "Prompt Hacking"],
    "definition": "A security vulnerability where malicious input is crafted to manipulate a language model into ignoring its original instructions or performing unintended actions.",
    "related": ["Security Vulnerability", "Adversarial Input", "Prompt Security", "Input Sanitization"],
    "tags": ["prompt-injection", "security", "adversarial-attack"],
    "references": [
      "https://en.wikipedia.org/wiki/Prompt_injection",
      "https://arxiv.org/abs/2302.12173"
    ]
  },
  {
    "term": "Role Prompting",
    "category": "Prompt Engineering",
    "aliases": ["Persona Prompting", "Character Assignment"],
    "definition": "A technique that assigns a specific role, profession, or persona to the AI to influence its response style, expertise, and perspective on the given task.",
    "related": ["Persona Assignment", "Character Definition", "Expert Role", "Perspective Setting"],
    "tags": ["role-prompting", "persona", "character-assignment"],
    "references": [
      "https://www.promptingguide.ai/techniques/role",
      "https://arxiv.org/abs/2305.14045"
    ]
  },
  {
    "term": "Instruction Following",
    "category": "Prompt Engineering",
    "aliases": ["Task Compliance", "Command Adherence"],
    "definition": "The ability of language models to understand and execute specific instructions given in natural language prompts, following the intended task requirements.",
    "related": ["Task Understanding", "Command Execution", "Instruction Comprehension", "Task Compliance"],
    "tags": ["instruction-following", "task-execution", "command-compliance"],
    "references": [
      "https://arxiv.org/abs/2109.01652",
      "https://arxiv.org/abs/2203.02155"
    ]
  },
  {
    "term": "Prompt Chaining",
    "category": "Prompt Engineering",
    "aliases": ["Sequential Prompting", "Multi-step Prompting"],
    "definition": "A technique that breaks complex tasks into a sequence of simpler prompts, where the output of one prompt becomes the input for the next, enabling sophisticated multi-step reasoning.",
    "related": ["Sequential Processing", "Multi-step Reasoning", "Task Decomposition", "Pipeline Processing"],
    "tags": ["prompt-chaining", "sequential-processing", "multi-step"],
    "references": [
      "https://arxiv.org/abs/2203.06566",
      "https://www.promptingguide.ai/techniques/prompt_chaining"
    ]
  },
  {
    "term": "Self-Consistency",
    "category": "Prompt Engineering",
    "aliases": ["Multiple Sampling", "Consensus Reasoning"],
    "definition": "A technique that generates multiple reasoning paths for the same problem and selects the most consistent answer, improving reliability through ensemble reasoning.",
    "related": ["Ensemble Methods", "Multiple Sampling", "Consensus Building", "Reliability Enhancement"],
    "tags": ["self-consistency", "ensemble-reasoning", "multiple-sampling"],
    "references": [
      "https://arxiv.org/abs/2203.11171",
      "https://www.promptingguide.ai/techniques/consistency"
    ]
  },
  {
    "term": "Tree of Thoughts",
    "category": "Prompt Engineering",
    "aliases": ["ToT", "Thought Tree", "Branching Reasoning"],
    "definition": "A prompting framework that explores multiple reasoning paths in a tree structure, enabling systematic exploration of different solution approaches for complex problems.",
    "related": ["Structured Reasoning", "Multi-path Exploration", "Search Algorithms", "Problem Solving"],
    "tags": ["tree-of-thoughts", "structured-reasoning", "multi-path"],
    "references": [
      "https://arxiv.org/abs/2305.10601",
      "https://github.com/princeton-nlp/tree-of-thought-llm"
    ]
  },
  {
    "term": "Prompt Tuning",
    "category": "Prompt Engineering",
    "aliases": ["Soft Prompting", "Continuous Prompting"],
    "definition": "A parameter-efficient method that learns continuous prompt embeddings while keeping the language model frozen, optimizing prompts in the embedding space rather than discrete text.",
    "related": ["Parameter-Efficient Fine-tuning", "Continuous Optimization", "Embedding Space", "Soft Prompts"],
    "tags": ["prompt-tuning", "continuous-prompts", "parameter-efficient"],
    "references": [
      "https://arxiv.org/abs/2104.08691",
      "https://huggingface.co/docs/peft/task_guides/ptuning"
    ]
  },
  {
    "term": "Context Length Optimization",
    "category": "Prompt Engineering",
    "aliases": ["Context Management", "Token Optimization"],
    "definition": "Techniques for efficiently using limited context windows by prioritizing important information, summarizing content, or strategically truncating prompts to fit within model constraints.",
    "related": ["Context Window", "Token Limit", "Information Prioritization", "Content Compression"],
    "tags": ["context-optimization", "token-management", "length-constraints"],
    "references": [
      "https://platform.openai.com/docs/guides/prompt-engineering/strategy-give-gpts-time-to-think",
      "https://arxiv.org/abs/2104.05394"
    ]
  },
  {
    "term": "Negative Prompting",
    "category": "Prompt Engineering",
    "aliases": ["Constraint Specification", "Avoidance Instructions"],
    "definition": "Explicit instructions about what the model should not do or generate, helping to avoid unwanted behaviors, content, or response patterns.",
    "related": ["Constraint Definition", "Behavior Control", "Content Filtering", "Output Restriction"],
    "tags": ["negative-prompting", "constraint-specification", "avoidance"],
    "references": [
      "https://www.promptingguide.ai/techniques/negative",
      "https://arxiv.org/abs/2302.13971"
    ]
  },
  {
    "term": "Prompt Iteration",
    "category": "Prompt Engineering",
    "aliases": ["Iterative Refinement", "Prompt Optimization"],
    "definition": "The process of systematically refining and improving prompts through multiple iterations based on output quality, testing different variations to achieve optimal results.",
    "related": ["Iterative Design", "A/B Testing", "Performance Optimization", "Continuous Improvement"],
    "tags": ["prompt-iteration", "iterative-refinement", "optimization"],
    "references": [
      "https://platform.openai.com/docs/guides/prompt-engineering/strategy-test-changes-systematically",
      "https://www.promptingguide.ai/introduction/tips"
    ]
  },
  {
    "term": "Output Formatting",
    "category": "Prompt Engineering",
    "aliases": ["Response Formatting", "Structure Control"],
    "definition": "Techniques for controlling the format, structure, and presentation of model outputs, including JSON, XML, tables, or other specific formats required by applications.",
    "related": ["Structured Output", "Format Control", "Data Structure", "Response Parsing"],
    "tags": ["output-formatting", "structure-control", "format-specification"],
    "references": [
      "https://platform.openai.com/docs/guides/prompt-engineering/strategy-use-delimiters-to-clearly-indicate-distinct-parts-of-the-input",
      "https://arxiv.org/abs/2307.09702"
    ]
  },
  {
    "term": "Delimiter Usage",
    "category": "Prompt Engineering",
    "aliases": ["Separator Tokens", "Boundary Markers"],
    "definition": "The strategic use of special characters or tokens to clearly separate different sections of a prompt, improving model understanding of input structure and context boundaries.",
    "related": ["Prompt Structure", "Input Parsing", "Context Separation", "Format Clarity"],
    "tags": ["delimiters", "structure-markers", "input-parsing"],
    "references": [
      "https://platform.openai.com/docs/guides/prompt-engineering/strategy-use-delimiters-to-clearly-indicate-distinct-parts-of-the-input",
      "https://www.promptingguide.ai/introduction/tips"
    ]
  },
  {
    "term": "Meta-prompting",
    "category": "Prompt Engineering",
    "aliases": ["Prompt about Prompting", "Self-Referential Prompting"],
    "definition": "Advanced prompting techniques where the model is asked to reason about prompting itself, generate its own prompts, or reflect on prompt effectiveness and improvement strategies.",
    "related": ["Self-Reflection", "Prompt Generation", "Meta-cognition", "Self-Improvement"],
    "tags": ["meta-prompting", "self-referential", "prompt-generation"],
    "references": [
      "https://arxiv.org/abs/2401.12954",
      "https://www.promptingguide.ai/techniques/meta"
    ]
  },
  {
    "term": "Demonstration Selection",
    "category": "Prompt Engineering",
    "aliases": ["Example Selection", "Shot Selection"],
    "definition": "The process of choosing the most effective examples for few-shot prompting, considering factors like diversity, relevance, and quality to maximize learning from demonstrations.",
    "related": ["Few-shot Learning", "Example Quality", "Diversity Sampling", "Representative Examples"],
    "tags": ["demonstration-selection", "example-choice", "shot-selection"],
    "references": [
      "https://arxiv.org/abs/2101.06804",
      "https://arxiv.org/abs/2202.12837"
    ]
  },
  {
    "term": "Prompt Compression",
    "category": "Prompt Engineering",
    "aliases": ["Prompt Condensation", "Context Compression"],
    "definition": "Techniques for reducing prompt length while preserving essential information, enabling more efficient use of context windows and reduced computational costs.",
    "related": ["Context Optimization", "Information Density", "Token Efficiency", "Content Summarization"],
    "tags": ["prompt-compression", "context-reduction", "efficiency"],
    "references": [
      "https://arxiv.org/abs/2310.06839",
      "https://github.com/microsoft/LLMLingua"
    ]
  },
  {
    "term": "Prompt Ensembling",
    "category": "Prompt Engineering",
    "aliases": ["Multi-prompt Strategy", "Prompt Voting"],
    "definition": "A technique that uses multiple different prompts for the same task and combines their outputs through voting, averaging, or selection to improve overall performance and reliability.",
    "related": ["Ensemble Methods", "Multiple Strategies", "Output Combination", "Reliability Enhancement"],
    "tags": ["prompt-ensembling", "multi-prompt", "ensemble-strategy"],
    "references": [
      "https://arxiv.org/abs/2305.19118",
      "https://www.promptingguide.ai/techniques/ensemble"
    ]
  },
  {
    "term": "Contextual Calibration",
    "category": "Prompt Engineering",
    "aliases": ["Prompt Calibration", "Context Adjustment"],
    "definition": "The process of adjusting prompts based on the specific context, domain, or model being used to optimize performance for particular scenarios or applications.",
    "related": ["Context Adaptation", "Domain Adjustment", "Model-Specific Tuning", "Performance Optimization"],
    "tags": ["contextual-calibration", "context-adjustment", "domain-adaptation"],
    "references": [
      "https://arxiv.org/abs/2102.09690",
      "https://arxiv.org/abs/2207.07411"
    ]
  },
  {
    "term": "Prompt Debugging",
    "category": "Prompt Engineering",
    "aliases": ["Prompt Troubleshooting", "Prompt Analysis"],
    "definition": "Systematic approaches to identify and fix issues in prompts that lead to poor model performance, including analyzing failure modes and iterative improvement strategies.",
    "related": ["Error Analysis", "Performance Debugging", "Failure Analysis", "Iterative Improvement"],
    "tags": ["prompt-debugging", "error-analysis", "troubleshooting"],
    "references": [
      "https://platform.openai.com/docs/guides/prompt-engineering/strategy-test-changes-systematically",
      "https://www.promptingguide.ai/introduction/tips"
    ]
  },
  {
    "term": "Chain-of-Verification",
    "category": "Prompt Engineering",
    "aliases": ["CoVe", "Verification Chain", "Self-Verification"],
    "definition": "A prompting method where the model generates an initial response and then creates verification questions to check and improve the accuracy of its own answer.",
    "related": ["Self-Verification", "Accuracy Improvement", "Error Correction", "Quality Control"],
    "tags": ["chain-of-verification", "self-verification", "accuracy-improvement"],
    "references": [
      "https://arxiv.org/abs/2309.11495",
      "https://www.promptingguide.ai/techniques/cove"
    ]
  },
  {
    "term": "Prompt Security",
    "category": "Prompt Engineering",
    "aliases": ["Prompt Safety", "Input Validation"],
    "definition": "Practices and techniques for protecting AI systems from malicious prompts, including input sanitization, injection detection, and safety filtering mechanisms.",
    "related": ["Prompt Injection", "Input Sanitization", "Security Measures", "Safety Protocols"],
    "tags": ["prompt-security", "input-validation", "safety-measures"],
    "references": [
      "https://arxiv.org/abs/2302.12173",
      "https://www.anthropic.com/news/jailbreak-research"
    ]
  },
  {
    "term": "Dynamic Prompting",
    "category": "Prompt Engineering",
    "aliases": ["Adaptive Prompting", "Conditional Prompting"],
    "definition": "Techniques for creating prompts that adapt their content, structure, or approach based on input characteristics, user context, or previous interaction history.",
    "related": ["Adaptive Systems", "Conditional Logic", "Context-Aware Prompting", "Personalization"],
    "tags": ["dynamic-prompting", "adaptive-prompting", "conditional-logic"],
    "references": [
      "https://arxiv.org/abs/2305.11252",
      "https://www.promptingguide.ai/techniques/dynamic"
    ]
  },
  {
    "term": "Prompt Evaluation",
    "category": "Prompt Engineering",
    "aliases": ["Prompt Assessment", "Prompt Testing"],
    "definition": "Systematic methods for measuring and comparing the effectiveness of different prompts, including metrics, benchmarks, and evaluation frameworks for prompt quality.",
    "related": ["Performance Metrics", "A/B Testing", "Benchmark Evaluation", "Quality Assessment"],
    "tags": ["prompt-evaluation", "performance-testing", "quality-metrics"],
    "references": [
      "https://arxiv.org/abs/2212.09251",
      "https://github.com/microsoft/promptbench"
    ]
  },
  {
    "term": "Instruction Hierarchy",
    "category": "Prompt Engineering",
    "aliases": ["Priority Structure", "Command Precedence"],
    "definition": "The organization of instructions within prompts in order of importance or precedence, ensuring critical requirements are followed even when instructions conflict.",
    "related": ["Priority Management", "Instruction Ordering", "Conflict Resolution", "Precedence Rules"],
    "tags": ["instruction-hierarchy", "priority-structure", "precedence"],
    "references": [
      "https://platform.openai.com/docs/guides/prompt-engineering/strategy-be-specific",
      "https://docs.anthropic.com/claude/docs/prompt-troubleshooting"
    ]
  },
  {
    "term": "Prompt Portability",
    "category": "Prompt Engineering",
    "aliases": ["Cross-Model Compatibility", "Model-Agnostic Prompting"],
    "definition": "The design of prompts that work effectively across different language models or model versions, maximizing reusability and reducing model-specific dependencies.",
    "related": ["Model Compatibility", "Cross-Platform Design", "Standardization", "Reusability"],
    "tags": ["prompt-portability", "cross-model", "compatibility"],
    "references": [
      "https://arxiv.org/abs/2307.13220",
      "https://www.promptingguide.ai/models/overview"
    ]
  }
]